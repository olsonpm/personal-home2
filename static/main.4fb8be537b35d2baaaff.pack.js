/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 0);
/******/ })
/************************************************************************/
/******/ ({

/***/ "./client/fonts/open-sans.italic.woff":
/*!********************************************!*\
  !*** ./client/fonts/open-sans.italic.woff ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = __webpack_require__.p + \"4b52a816817a711e6971955c835ecfbb.woff\";//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9jbGllbnQvZm9udHMvb3Blbi1zYW5zLml0YWxpYy53b2ZmLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vY2xpZW50L2ZvbnRzL29wZW4tc2Fucy5pdGFsaWMud29mZj9lZWY2Il0sInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gX193ZWJwYWNrX3B1YmxpY19wYXRoX18gKyBcIjRiNTJhODE2ODE3YTcxMWU2OTcxOTU1YzgzNWVjZmJiLndvZmZcIjsiXSwibWFwcGluZ3MiOiJBQUFBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./client/fonts/open-sans.italic.woff\n");

/***/ }),

/***/ "./client/fonts/open-sans.regular.woff":
/*!*********************************************!*\
  !*** ./client/fonts/open-sans.regular.woff ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = __webpack_require__.p + \"d0bad741aefb909e4be56d188b6f02b9.woff\";//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9jbGllbnQvZm9udHMvb3Blbi1zYW5zLnJlZ3VsYXIud29mZi5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL2NsaWVudC9mb250cy9vcGVuLXNhbnMucmVndWxhci53b2ZmPzJlMTciXSwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBfX3dlYnBhY2tfcHVibGljX3BhdGhfXyArIFwiZDBiYWQ3NDFhZWZiOTA5ZTRiZTU2ZDE4OGI2ZjAyYjkud29mZlwiOyJdLCJtYXBwaW5ncyI6IkFBQUEiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./client/fonts/open-sans.regular.woff\n");

/***/ }),

/***/ "./client/fonts/scope-one.regular.woff":
/*!*********************************************!*\
  !*** ./client/fonts/scope-one.regular.woff ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = __webpack_require__.p + \"c7fda34e17130319b02eb27af0c04cc2.woff\";//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9jbGllbnQvZm9udHMvc2NvcGUtb25lLnJlZ3VsYXIud29mZi5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL2NsaWVudC9mb250cy9zY29wZS1vbmUucmVndWxhci53b2ZmP2IxZWQiXSwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBfX3dlYnBhY2tfcHVibGljX3BhdGhfXyArIFwiYzdmZGEzNGUxNzEzMDMxOWIwMmViMjdhZjBjMDRjYzIud29mZlwiOyJdLCJtYXBwaW5ncyI6IkFBQUEiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./client/fonts/scope-one.regular.woff\n");

/***/ }),

/***/ "./client/images/favicon.16.png":
/*!**************************************!*\
  !*** ./client/images/favicon.16.png ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = __webpack_require__.p + \"images/favicon.16.png\";//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9jbGllbnQvaW1hZ2VzL2Zhdmljb24uMTYucG5nLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vY2xpZW50L2ltYWdlcy9mYXZpY29uLjE2LnBuZz8xMjY0Il0sInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gX193ZWJwYWNrX3B1YmxpY19wYXRoX18gKyBcImltYWdlcy9mYXZpY29uLjE2LnBuZ1wiOyJdLCJtYXBwaW5ncyI6IkFBQUEiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./client/images/favicon.16.png\n");

/***/ }),

/***/ "./client/images/favicon.32.png":
/*!**************************************!*\
  !*** ./client/images/favicon.32.png ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = __webpack_require__.p + \"images/favicon.32.png\";//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9jbGllbnQvaW1hZ2VzL2Zhdmljb24uMzIucG5nLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vY2xpZW50L2ltYWdlcy9mYXZpY29uLjMyLnBuZz84N2MwIl0sInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gX193ZWJwYWNrX3B1YmxpY19wYXRoX18gKyBcImltYWdlcy9mYXZpY29uLjMyLnBuZ1wiOyJdLCJtYXBwaW5ncyI6IkFBQUEiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./client/images/favicon.32.png\n");

/***/ }),

/***/ "./client/images/favicon.ico":
/*!***********************************!*\
  !*** ./client/images/favicon.ico ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = __webpack_require__.p + \"/favicon.ico\";//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9jbGllbnQvaW1hZ2VzL2Zhdmljb24uaWNvLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vY2xpZW50L2ltYWdlcy9mYXZpY29uLmljbz82NWYzIl0sInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gX193ZWJwYWNrX3B1YmxpY19wYXRoX18gKyBcIi9mYXZpY29uLmljb1wiOyJdLCJtYXBwaW5ncyI6IkFBQUEiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./client/images/favicon.ico\n");

/***/ }),

/***/ "./client/images/favicon.png":
/*!***********************************!*\
  !*** ./client/images/favicon.png ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = __webpack_require__.p + \"/favicon.png\";//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9jbGllbnQvaW1hZ2VzL2Zhdmljb24ucG5nLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vY2xpZW50L2ltYWdlcy9mYXZpY29uLnBuZz8xNjVlIl0sInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gX193ZWJwYWNrX3B1YmxpY19wYXRoX18gKyBcIi9mYXZpY29uLnBuZ1wiOyJdLCJtYXBwaW5ncyI6IkFBQUEiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./client/images/favicon.png\n");

/***/ }),

/***/ "./client/images/profile.png":
/*!***********************************!*\
  !*** ./client/images/profile.png ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = __webpack_require__.p + \"images/profile.png\";//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9jbGllbnQvaW1hZ2VzL3Byb2ZpbGUucG5nLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vY2xpZW50L2ltYWdlcy9wcm9maWxlLnBuZz82NTk1Il0sInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gX193ZWJwYWNrX3B1YmxpY19wYXRoX18gKyBcImltYWdlcy9wcm9maWxlLnBuZ1wiOyJdLCJtYXBwaW5ncyI6IkFBQUEiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./client/images/profile.png\n");

/***/ }),

/***/ "./client/js/index.js":
/*!****************************!*\
  !*** ./client/js/index.js ***!
  \****************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var domtastic__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! domtastic */ \"./node_modules/domtastic/src/index.js\");\n/* harmony import */ var smoothscroll__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! smoothscroll */ \"./node_modules/smoothscroll/smoothscroll.js\");\n/* harmony import */ var smoothscroll__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(smoothscroll__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var velocity_animate__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! velocity-animate */ \"./node_modules/velocity-animate/velocity.js\");\n/* harmony import */ var velocity_animate__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(velocity_animate__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _scss_screen_size_breakpoints_scss__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../scss/screen-size-breakpoints.scss */ \"./client/scss/screen-size-breakpoints.scss\");\n/* harmony import */ var _scss_screen_size_breakpoints_scss__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_scss_screen_size_breakpoints_scss__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _images_profile_png__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../images/profile.png */ \"./client/images/profile.png\");\n/* harmony import */ var _images_profile_png__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_images_profile_png__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _images_favicon_16_png__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../images/favicon.16.png */ \"./client/images/favicon.16.png\");\n/* harmony import */ var _images_favicon_16_png__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_images_favicon_16_png__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var _images_favicon_32_png__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../images/favicon.32.png */ \"./client/images/favicon.32.png\");\n/* harmony import */ var _images_favicon_32_png__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(_images_favicon_32_png__WEBPACK_IMPORTED_MODULE_6__);\n/* harmony import */ var _images_favicon_png__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../images/favicon.png */ \"./client/images/favicon.png\");\n/* harmony import */ var _images_favicon_png__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(_images_favicon_png__WEBPACK_IMPORTED_MODULE_7__);\n/* harmony import */ var _images_favicon_ico__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../images/favicon.ico */ \"./client/images/favicon.ico\");\n/* harmony import */ var _images_favicon_ico__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(_images_favicon_ico__WEBPACK_IMPORTED_MODULE_8__);\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); }\n\nfunction _iterableToArrayLimit(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n//---------//\n// Imports //\n//---------//\n\n\n\n //\n// and because nunjucks-loader doesn't work in a node environment, it's easiest\n//   to declare image dependencies here\n//\n\n\n\n\n\n //\n//------//\n// Init //\n//------//\n\nvar delay = 600,\n    setOfAnimatingElements = new Set(),\n    xsMax = _scss_screen_size_breakpoints_scss__WEBPACK_IMPORTED_MODULE_3__[\"locals\"].xsMax; //\n//------//\n// Main //\n//------//\n\nObject(domtastic__WEBPACK_IMPORTED_MODULE_0__[\"default\"])('button.expander').on('click', expanderClicked);\nwindow.scrollTo = scrollTo; //\n//-------------//\n// Helper Fxns //\n//-------------//\n\nfunction scrollTo() {\n  var link = Object(domtastic__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this),\n      id = link.attr('href').slice(1),\n      scrollToEl = document.getElementById(id),\n      y = scrollToEl.getBoundingClientRect().top;\n  smoothscroll__WEBPACK_IMPORTED_MODULE_1___default()(scrollToEl, calculateDuration(y));\n  return false;\n}\n\nfunction calculateDuration(y) {\n  return (y - scrollY) / 600;\n}\n\nfunction expanderClicked() {\n  var _this = this;\n\n  if (setOfAnimatingElements.has(this)) return;\n  setOfAnimatingElements.add(this, true);\n  var button = Object(domtastic__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this);\n\n  if (isExtraSmallScreen() && !button.hasClass('expanded')) {\n    smoothscroll__WEBPACK_IMPORTED_MODULE_1___default()(this, delay);\n  }\n\n  return Promise.all([rotateButton(button), toggleContentState(button)]).then(function () {\n    button.toggleClass('expanded');\n    setOfAnimatingElements.delete(_this);\n  });\n}\n\nfunction rotateButton(button) {\n  var _ref = button.hasClass('expanded') ? ['0deg', '180deg'] : ['180deg', '0deg'],\n      _ref2 = _slicedToArray(_ref, 2),\n      to = _ref2[0],\n      from = _ref2[1];\n\n  return velocity_animate__WEBPACK_IMPORTED_MODULE_2___default()(button.find('svg')[0], {\n    transform: [\"rotate(\".concat(to, \")\"), \"rotate(\".concat(from, \")\")]\n  });\n}\n\nfunction isExtraSmallScreen() {\n  return window.matchMedia(\"(max-width: \".concat(xsMax, \")\")).matches;\n}\n\nfunction toggleContentState(button) {\n  var content = button.siblings('.content')[0],\n      isExpanded = button.hasClass('expanded'),\n      closedHeight = 0;\n  var openHeight = content.clientHeight;\n\n  if (!isExpanded) {\n    Object(domtastic__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(content).css('height', 'auto');\n    openHeight = content.clientHeight;\n    Object(domtastic__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(content).css('height', '0');\n  }\n\n  var _ref3 = isExpanded ? [closedHeight, openHeight] : [openHeight, closedHeight],\n      _ref4 = _slicedToArray(_ref3, 2),\n      to = _ref4[0],\n      from = _ref4[1];\n\n  return velocity_animate__WEBPACK_IMPORTED_MODULE_2___default()(content, {\n    height: [\"\".concat(to, \"px\"), \"\".concat(from, \"px\")]\n  });\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9jbGllbnQvanMvaW5kZXguanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vY2xpZW50L2pzL2luZGV4LmpzPzU0YmQiXSwic291cmNlc0NvbnRlbnQiOlsiLy8tLS0tLS0tLS0vL1xuLy8gSW1wb3J0cyAvL1xuLy8tLS0tLS0tLS0vL1xuXG5pbXBvcnQgJCBmcm9tICdkb210YXN0aWMnXG5pbXBvcnQgc21vb3Roc2Nyb2xsIGZyb20gJ3Ntb290aHNjcm9sbCdcbmltcG9ydCBhbmltYXRlIGZyb20gJ3ZlbG9jaXR5LWFuaW1hdGUnXG5cbmltcG9ydCB7IGxvY2FscyB9IGZyb20gJy4uL3Njc3Mvc2NyZWVuLXNpemUtYnJlYWtwb2ludHMuc2NzcydcblxuLy9cbi8vIGFuZCBiZWNhdXNlIG51bmp1Y2tzLWxvYWRlciBkb2Vzbid0IHdvcmsgaW4gYSBub2RlIGVudmlyb25tZW50LCBpdCdzIGVhc2llc3Rcbi8vICAgdG8gZGVjbGFyZSBpbWFnZSBkZXBlbmRlbmNpZXMgaGVyZVxuLy9cbmltcG9ydCAnLi4vaW1hZ2VzL3Byb2ZpbGUucG5nJ1xuaW1wb3J0ICcuLi9pbWFnZXMvZmF2aWNvbi4xNi5wbmcnXG5pbXBvcnQgJy4uL2ltYWdlcy9mYXZpY29uLjMyLnBuZydcbmltcG9ydCAnLi4vaW1hZ2VzL2Zhdmljb24ucG5nJ1xuaW1wb3J0ICcuLi9pbWFnZXMvZmF2aWNvbi5pY28nXG5cbi8vXG4vLy0tLS0tLS8vXG4vLyBJbml0IC8vXG4vLy0tLS0tLS8vXG5cbmNvbnN0IGRlbGF5ID0gNjAwLFxuICBzZXRPZkFuaW1hdGluZ0VsZW1lbnRzID0gbmV3IFNldCgpLFxuICB7IHhzTWF4IH0gPSBsb2NhbHNcblxuLy9cbi8vLS0tLS0tLy9cbi8vIE1haW4gLy9cbi8vLS0tLS0tLy9cblxuJCgnYnV0dG9uLmV4cGFuZGVyJykub24oJ2NsaWNrJywgZXhwYW5kZXJDbGlja2VkKVxud2luZG93LnNjcm9sbFRvID0gc2Nyb2xsVG9cblxuLy9cbi8vLS0tLS0tLS0tLS0tLS8vXG4vLyBIZWxwZXIgRnhucyAvL1xuLy8tLS0tLS0tLS0tLS0tLy9cblxuZnVuY3Rpb24gc2Nyb2xsVG8oKSB7XG4gIGNvbnN0IGxpbmsgPSAkKHRoaXMpLFxuICAgIGlkID0gbGluay5hdHRyKCdocmVmJykuc2xpY2UoMSksXG4gICAgc2Nyb2xsVG9FbCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGlkKSxcbiAgICB5ID0gc2Nyb2xsVG9FbC5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKS50b3BcblxuICBzbW9vdGhzY3JvbGwoc2Nyb2xsVG9FbCwgY2FsY3VsYXRlRHVyYXRpb24oeSkpXG5cbiAgcmV0dXJuIGZhbHNlXG59XG5cbmZ1bmN0aW9uIGNhbGN1bGF0ZUR1cmF0aW9uKHkpIHtcbiAgcmV0dXJuICh5IC0gc2Nyb2xsWSkgLyA2MDBcbn1cblxuZnVuY3Rpb24gZXhwYW5kZXJDbGlja2VkKCkge1xuICBpZiAoc2V0T2ZBbmltYXRpbmdFbGVtZW50cy5oYXModGhpcykpIHJldHVyblxuXG4gIHNldE9mQW5pbWF0aW5nRWxlbWVudHMuYWRkKHRoaXMsIHRydWUpXG5cbiAgY29uc3QgYnV0dG9uID0gJCh0aGlzKVxuXG4gIGlmIChpc0V4dHJhU21hbGxTY3JlZW4oKSAmJiAhYnV0dG9uLmhhc0NsYXNzKCdleHBhbmRlZCcpKSB7XG4gICAgc21vb3Roc2Nyb2xsKHRoaXMsIGRlbGF5KVxuICB9XG5cbiAgcmV0dXJuIFByb21pc2UuYWxsKFtyb3RhdGVCdXR0b24oYnV0dG9uKSwgdG9nZ2xlQ29udGVudFN0YXRlKGJ1dHRvbildKS50aGVuKFxuICAgICgpID0+IHtcbiAgICAgIGJ1dHRvbi50b2dnbGVDbGFzcygnZXhwYW5kZWQnKVxuICAgICAgc2V0T2ZBbmltYXRpbmdFbGVtZW50cy5kZWxldGUodGhpcylcbiAgICB9XG4gIClcbn1cblxuZnVuY3Rpb24gcm90YXRlQnV0dG9uKGJ1dHRvbikge1xuICBjb25zdCBbdG8sIGZyb21dID0gYnV0dG9uLmhhc0NsYXNzKCdleHBhbmRlZCcpXG4gICAgPyBbJzBkZWcnLCAnMTgwZGVnJ11cbiAgICA6IFsnMTgwZGVnJywgJzBkZWcnXVxuXG4gIHJldHVybiBhbmltYXRlKGJ1dHRvbi5maW5kKCdzdmcnKVswXSwge1xuICAgIHRyYW5zZm9ybTogW2Byb3RhdGUoJHt0b30pYCwgYHJvdGF0ZSgke2Zyb219KWBdLFxuICB9KVxufVxuXG5mdW5jdGlvbiBpc0V4dHJhU21hbGxTY3JlZW4oKSB7XG4gIHJldHVybiB3aW5kb3cubWF0Y2hNZWRpYShgKG1heC13aWR0aDogJHt4c01heH0pYCkubWF0Y2hlc1xufVxuXG5mdW5jdGlvbiB0b2dnbGVDb250ZW50U3RhdGUoYnV0dG9uKSB7XG4gIGNvbnN0IGNvbnRlbnQgPSBidXR0b24uc2libGluZ3MoJy5jb250ZW50JylbMF0sXG4gICAgaXNFeHBhbmRlZCA9IGJ1dHRvbi5oYXNDbGFzcygnZXhwYW5kZWQnKSxcbiAgICBjbG9zZWRIZWlnaHQgPSAwXG5cbiAgbGV0IG9wZW5IZWlnaHQgPSBjb250ZW50LmNsaWVudEhlaWdodFxuXG4gIGlmICghaXNFeHBhbmRlZCkge1xuICAgICQoY29udGVudCkuY3NzKCdoZWlnaHQnLCAnYXV0bycpXG4gICAgb3BlbkhlaWdodCA9IGNvbnRlbnQuY2xpZW50SGVpZ2h0XG4gICAgJChjb250ZW50KS5jc3MoJ2hlaWdodCcsICcwJylcbiAgfVxuXG4gIGNvbnN0IFt0bywgZnJvbV0gPSBpc0V4cGFuZGVkXG4gICAgPyBbY2xvc2VkSGVpZ2h0LCBvcGVuSGVpZ2h0XVxuICAgIDogW29wZW5IZWlnaHQsIGNsb3NlZEhlaWdodF1cblxuICByZXR1cm4gYW5pbWF0ZShjb250ZW50LCB7IGhlaWdodDogW2Ake3RvfXB4YCwgYCR7ZnJvbX1weGBdIH0pXG59XG4iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBRUE7QUFHQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFHQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFBQTtBQUtBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQUE7QUFBQTtBQUtBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQ0E7QUFBQTtBQUVBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBSUE7QUFDQTtBQURBO0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQUE7QUFJQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBWkE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQWdCQTtBQUFBO0FBQUE7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./client/js/index.js\n");

/***/ }),

/***/ "./client/scss/index.scss":
/*!********************************!*\
  !*** ./client/scss/index.scss ***!
  \********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("\nvar content = __webpack_require__(/*! !../../node_modules/css-loader??ref--8-1!../../node_modules/sass-loader/lib/loader.js??ref--8-2!./index.scss */ \"./node_modules/css-loader/index.js??ref--8-1!./node_modules/sass-loader/lib/loader.js??ref--8-2!./client/scss/index.scss\");\n\nif(typeof content === 'string') content = [[module.i, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = __webpack_require__(/*! ../../node_modules/style-loader/lib/addStyles.js */ \"./node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(false) {}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9jbGllbnQvc2Nzcy9pbmRleC5zY3NzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vY2xpZW50L3Njc3MvaW5kZXguc2Nzcz9hZjc5Il0sInNvdXJjZXNDb250ZW50IjpbIlxudmFyIGNvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9pbmRleC5qcz8/cmVmLS04LTEhLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2xpYi9sb2FkZXIuanM/P3JlZi0tOC0yIS4vaW5kZXguc2Nzc1wiKTtcblxuaWYodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSBjb250ZW50ID0gW1ttb2R1bGUuaWQsIGNvbnRlbnQsICcnXV07XG5cbnZhciB0cmFuc2Zvcm07XG52YXIgaW5zZXJ0SW50bztcblxuXG5cbnZhciBvcHRpb25zID0ge1wiaG1yXCI6dHJ1ZX1cblxub3B0aW9ucy50cmFuc2Zvcm0gPSB0cmFuc2Zvcm1cbm9wdGlvbnMuaW5zZXJ0SW50byA9IHVuZGVmaW5lZDtcblxudmFyIHVwZGF0ZSA9IHJlcXVpcmUoXCIhLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9saWIvYWRkU3R5bGVzLmpzXCIpKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5pZihjb250ZW50LmxvY2FscykgbW9kdWxlLmV4cG9ydHMgPSBjb250ZW50LmxvY2FscztcblxuaWYobW9kdWxlLmhvdCkge1xuXHRtb2R1bGUuaG90LmFjY2VwdChcIiEhLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanM/P3JlZi0tOC0xIS4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9saWIvbG9hZGVyLmpzPz9yZWYtLTgtMiEuL2luZGV4LnNjc3NcIiwgZnVuY3Rpb24oKSB7XG5cdFx0dmFyIG5ld0NvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9pbmRleC5qcz8/cmVmLS04LTEhLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2xpYi9sb2FkZXIuanM/P3JlZi0tOC0yIS4vaW5kZXguc2Nzc1wiKTtcblxuXHRcdGlmKHR5cGVvZiBuZXdDb250ZW50ID09PSAnc3RyaW5nJykgbmV3Q29udGVudCA9IFtbbW9kdWxlLmlkLCBuZXdDb250ZW50LCAnJ11dO1xuXG5cdFx0dmFyIGxvY2FscyA9IChmdW5jdGlvbihhLCBiKSB7XG5cdFx0XHR2YXIga2V5LCBpZHggPSAwO1xuXG5cdFx0XHRmb3Ioa2V5IGluIGEpIHtcblx0XHRcdFx0aWYoIWIgfHwgYVtrZXldICE9PSBiW2tleV0pIHJldHVybiBmYWxzZTtcblx0XHRcdFx0aWR4Kys7XG5cdFx0XHR9XG5cblx0XHRcdGZvcihrZXkgaW4gYikgaWR4LS07XG5cblx0XHRcdHJldHVybiBpZHggPT09IDA7XG5cdFx0fShjb250ZW50LmxvY2FscywgbmV3Q29udGVudC5sb2NhbHMpKTtcblxuXHRcdGlmKCFsb2NhbHMpIHRocm93IG5ldyBFcnJvcignQWJvcnRpbmcgQ1NTIEhNUiBkdWUgdG8gY2hhbmdlZCBjc3MtbW9kdWxlcyBsb2NhbHMuJyk7XG5cblx0XHR1cGRhdGUobmV3Q29udGVudCk7XG5cdH0pO1xuXG5cdG1vZHVsZS5ob3QuZGlzcG9zZShmdW5jdGlvbigpIHsgdXBkYXRlKCk7IH0pO1xufSJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./client/scss/index.scss\n");

/***/ }),

/***/ "./client/scss/screen-size-breakpoints.scss":
/*!**************************************************!*\
  !*** ./client/scss/screen-size-breakpoints.scss ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("exports = module.exports = __webpack_require__(/*! ../../node_modules/css-loader/lib/css-base.js */ \"./node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.i, \"\\n\", \"\"]);\n\n// exports\nexports.locals = {\n\t\"xsMin\": \"480px\",\n\t\"smMin\": \"768px\",\n\t\"mdMin\": \"992px\",\n\t\"lgMin\": \"1200px\",\n\t\"xxsMax\": \"479px\",\n\t\"xsMax\": \"767px\",\n\t\"smMax\": \"991px\",\n\t\"mdMax\": \"1199px\"\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9jbGllbnQvc2Nzcy9zY3JlZW4tc2l6ZS1icmVha3BvaW50cy5zY3NzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vY2xpZW50L3Njc3Mvc2NyZWVuLXNpemUtYnJlYWtwb2ludHMuc2Nzcz8zODRiIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydHMgPSBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCIuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9saWIvY3NzLWJhc2UuanNcIikoZmFsc2UpO1xuLy8gaW1wb3J0c1xuXG5cbi8vIG1vZHVsZVxuZXhwb3J0cy5wdXNoKFttb2R1bGUuaWQsIFwiXFxuXCIsIFwiXCJdKTtcblxuLy8gZXhwb3J0c1xuZXhwb3J0cy5sb2NhbHMgPSB7XG5cdFwieHNNaW5cIjogXCI0ODBweFwiLFxuXHRcInNtTWluXCI6IFwiNzY4cHhcIixcblx0XCJtZE1pblwiOiBcIjk5MnB4XCIsXG5cdFwibGdNaW5cIjogXCIxMjAwcHhcIixcblx0XCJ4eHNNYXhcIjogXCI0NzlweFwiLFxuXHRcInhzTWF4XCI6IFwiNzY3cHhcIixcblx0XCJzbU1heFwiOiBcIjk5MXB4XCIsXG5cdFwibWRNYXhcIjogXCIxMTk5cHhcIlxufTsiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./client/scss/screen-size-breakpoints.scss\n");

/***/ }),

/***/ "./node_modules/css-loader/index.js??ref--8-1!./node_modules/sass-loader/lib/loader.js??ref--8-2!./client/scss/index.scss":
/*!***********************************************************************************************************************!*\
  !*** ./node_modules/css-loader??ref--8-1!./node_modules/sass-loader/lib/loader.js??ref--8-2!./client/scss/index.scss ***!
  \***********************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var escape = __webpack_require__(/*! ../../node_modules/css-loader/lib/url/escape.js */ \"./node_modules/css-loader/lib/url/escape.js\");\nexports = module.exports = __webpack_require__(/*! ../../node_modules/css-loader/lib/css-base.js */ \"./node_modules/css-loader/lib/css-base.js\")(true);\n// imports\nexports.push([module.i, \"@import url(/node_modules/normalize.css/normalize.css);\", \"\"]);\n\n// module\nexports.push([module.i, \"@font-face {\\n  font-family: ScopeOne;\\n  font-weight: 400;\\n  src: url(\" + escape(__webpack_require__(/*! ../fonts/scope-one.regular.woff */ \"./client/fonts/scope-one.regular.woff\")) + \") format(\\\"woff\\\"); }\\n\\n@font-face {\\n  font-family: 'Open Sans';\\n  font-weight: 400;\\n  src: url(\" + escape(__webpack_require__(/*! ../fonts/open-sans.regular.woff */ \"./client/fonts/open-sans.regular.woff\")) + \") format(\\\"woff\\\"); }\\n\\n@font-face {\\n  font-family: 'Open Sans';\\n  font-weight: 400;\\n  font-style: italic;\\n  src: url(\" + escape(__webpack_require__(/*! ../fonts/open-sans.italic.woff */ \"./client/fonts/open-sans.italic.woff\")) + \") format(\\\"woff\\\"); }\\n\\nhtml,\\nbody {\\n  background: white;\\n  color: #131313;\\n  font-family: 'Open Sans', sans-serif;\\n  font-size: 18px; }\\n\\nbody {\\n  display: flex;\\n  flex-direction: column;\\n  min-height: 100vh; }\\n  body > .site-container {\\n    flex-grow: 1; }\\n\\nh1,\\nh2,\\nh3,\\nh4 {\\n  font-family: ScopeOne, serif; }\\n\\nh1,\\nh2,\\nh3,\\nh4,\\nh5,\\nh6 {\\n  font-weight: 400; }\\n\\nh1,\\nh2,\\nh3,\\nh4,\\nh5,\\nh6,\\np,\\nul,\\nol,\\nli,\\nbutton {\\n  margin: 0;\\n  padding: 0; }\\n\\nh1,\\nh2,\\nh3,\\nh4,\\nh5,\\nh6,\\nli {\\n  line-height: 1; }\\n\\nbutton {\\n  border: 0;\\n  outline: none !important;\\n  background: none;\\n  border-image-width: 0;\\n  font-size: 0; }\\n\\np {\\n  line-height: 1.3; }\\n\\nh1 {\\n  font-size: 48px; }\\n\\nh2 {\\n  font-size: 32px; }\\n\\nh3 {\\n  font-size: 26px; }\\n\\nh4 {\\n  font-size: 23px; }\\n\\nh5 {\\n  font-size: 20px;\\n  margin-bottom: 9px; }\\n\\na {\\n  color: #2457b0;\\n  text-decoration: none; }\\n\\np.note {\\n  font-style: italic; }\\n\\n@media (max-width: 479px) {\\n  p,\\n  dd,\\n  dt {\\n    font-size: 16px; } }\\n\\n@media (min-width: 480px) and (max-width: 767px) {\\n  p,\\n  dd,\\n  dt {\\n    font-size: 16px; } }\\n\\n@media (min-width: 768px) and (max-width: 991px) {\\n  p,\\n  dd,\\n  dt {\\n    font-size: 18px; } }\\n\\n@media (min-width: 992px) and (max-width: 1199px) {\\n  p,\\n  dd,\\n  dt {\\n    font-size: 18px; } }\\n\\n@media (min-width: 1200px) {\\n  p,\\n  dd,\\n  dt {\\n    font-size: 18px; } }\\n\\nul:not(.normal-list),\\nol:not(.normal-list) {\\n  list-style: none; }\\n\\n.site-container {\\n  margin: 0 auto;\\n  max-width: 1100px; }\\n  @media (max-width: 479px) {\\n    .site-container {\\n      padding-left: 18px;\\n      padding-right: 18px; } }\\n  @media (min-width: 480px) and (max-width: 767px) {\\n    .site-container {\\n      padding-left: 18px;\\n      padding-right: 18px; } }\\n  @media (min-width: 768px) and (max-width: 991px) {\\n    .site-container {\\n      padding-left: 27px;\\n      padding-right: 27px; } }\\n  @media (min-width: 992px) and (max-width: 1199px) {\\n    .site-container {\\n      padding-left: 36px;\\n      padding-right: 36px; } }\\n  @media (min-width: 1200px) {\\n    .site-container {\\n      padding-left: 54px;\\n      padding-right: 54px; } }\\n\\n@media (max-width: 479px) {\\n  main > section {\\n    margin-top: 36px; } }\\n\\n@media (min-width: 480px) and (max-width: 767px) {\\n  main > section {\\n    margin-top: 36px; } }\\n\\n@media (min-width: 768px) and (max-width: 991px) {\\n  main > section {\\n    margin-top: 54px; } }\\n\\n@media (min-width: 992px) and (max-width: 1199px) {\\n  main > section {\\n    margin-top: 54px; } }\\n\\n@media (min-width: 1200px) {\\n  main > section {\\n    margin-top: 54px; } }\\n\\nmain > section h3 {\\n  color: #a32500;\\n  margin-bottom: 18px; }\\n  @media (max-width: 479px) {\\n    main > section h3 {\\n      font-size: 26px; } }\\n  @media (min-width: 480px) and (max-width: 767px) {\\n    main > section h3 {\\n      font-size: 26px; } }\\n  @media (min-width: 768px) and (max-width: 991px) {\\n    main > section h3 {\\n      font-size: 32px; } }\\n  @media (min-width: 992px) and (max-width: 1199px) {\\n    main > section h3 {\\n      font-size: 32px; } }\\n  @media (min-width: 1200px) {\\n    main > section h3 {\\n      font-size: 32px; } }\\n\\nmain > section h4 {\\n  margin-top: 27px; }\\n\\nmain > section h5 {\\n  margin-top: 18px; }\\n\\nmain > section p + p {\\n  margin-top: 9px; }\\n\\nmain > section p + ul {\\n  margin-top: 18px; }\\n\\nmain > section h4 {\\n  margin-bottom: 9px; }\\n  main > section h4:before {\\n    content: ' - '; }\\n\\nbutton.expander > svg {\\n  height: 41px;\\n  width: 41px; }\\n\\n.sidenote {\\n  font-style: italic; }\\n\\nbutton {\\n  -webkit-tap-highlight-color: transparent; }\\n\\nfooter {\\n  background-color: #303030;\\n  color: white;\\n  text-align: center; }\\n  @media (max-width: 479px) {\\n    footer {\\n      height: 80px;\\n      line-height: 80px; } }\\n  @media (min-width: 480px) and (max-width: 767px) {\\n    footer {\\n      height: 80px;\\n      line-height: 80px; } }\\n  @media (min-width: 768px) and (max-width: 991px) {\\n    footer {\\n      height: 110px;\\n      line-height: 110px; } }\\n  @media (min-width: 992px) and (max-width: 1199px) {\\n    footer {\\n      height: 110px;\\n      line-height: 110px; } }\\n  @media (min-width: 1200px) {\\n    footer {\\n      height: 110px;\\n      line-height: 110px; } }\\n  @media (max-width: 479px) {\\n    footer {\\n      margin-top: 36px; } }\\n  @media (min-width: 480px) and (max-width: 767px) {\\n    footer {\\n      margin-top: 36px; } }\\n  @media (min-width: 768px) and (max-width: 991px) {\\n    footer {\\n      margin-top: 54px; } }\\n  @media (min-width: 992px) and (max-width: 1199px) {\\n    footer {\\n      margin-top: 54px; } }\\n  @media (min-width: 1200px) {\\n    footer {\\n      margin-top: 54px; } }\\n  footer .email {\\n    vertical-align: middle; }\\n    @media (max-width: 479px) {\\n      footer .email {\\n        margin-right: 20px; } }\\n    @media (min-width: 480px) and (max-width: 767px) {\\n      footer .email {\\n        margin-right: 20px; } }\\n    @media (min-width: 768px) and (max-width: 991px) {\\n      footer .email {\\n        margin-right: 30px; } }\\n    @media (min-width: 992px) and (max-width: 1199px) {\\n      footer .email {\\n        margin-right: 30px; } }\\n    @media (min-width: 1200px) {\\n      footer .email {\\n        margin-right: 30px; } }\\n    @media (max-width: 479px) {\\n      footer .email {\\n        font-size: 15px; } }\\n    @media (min-width: 480px) and (max-width: 767px) {\\n      footer .email {\\n        font-size: 15px; } }\\n    @media (min-width: 768px) and (max-width: 991px) {\\n      footer .email {\\n        font-size: 16px; } }\\n    @media (min-width: 992px) and (max-width: 1199px) {\\n      footer .email {\\n        font-size: 16px; } }\\n    @media (min-width: 1200px) {\\n      footer .email {\\n        font-size: 16px; } }\\n  footer .octicon {\\n    vertical-align: middle; }\\n    @media (max-width: 479px) {\\n      footer .octicon {\\n        height: 50px; } }\\n    @media (min-width: 480px) and (max-width: 767px) {\\n      footer .octicon {\\n        height: 50px; } }\\n    @media (min-width: 768px) and (max-width: 991px) {\\n      footer .octicon {\\n        height: 70px; } }\\n    @media (min-width: 992px) and (max-width: 1199px) {\\n      footer .octicon {\\n        height: 70px; } }\\n    @media (min-width: 1200px) {\\n      footer .octicon {\\n        height: 70px; } }\\n    @media (max-width: 479px) {\\n      footer .octicon {\\n        margin-top: 10px;\\n        margin-bottom: 10px; } }\\n    @media (min-width: 480px) and (max-width: 767px) {\\n      footer .octicon {\\n        margin-top: 10px;\\n        margin-bottom: 10px; } }\\n    @media (min-width: 768px) and (max-width: 991px) {\\n      footer .octicon {\\n        margin-top: 15px;\\n        margin-bottom: 15px; } }\\n    @media (min-width: 992px) and (max-width: 1199px) {\\n      footer .octicon {\\n        margin-top: 15px;\\n        margin-bottom: 15px; } }\\n    @media (min-width: 1200px) {\\n      footer .octicon {\\n        margin-top: 15px;\\n        margin-bottom: 15px; } }\\n    footer .octicon path {\\n      fill: white; }\\n\\nheader {\\n  text-align: center; }\\n  @media (max-width: 479px) {\\n    header {\\n      margin-top: 27px; } }\\n  @media (min-width: 480px) and (max-width: 767px) {\\n    header {\\n      margin-top: 27px; } }\\n  @media (min-width: 768px) and (max-width: 991px) {\\n    header {\\n      margin-top: 36px; } }\\n  @media (min-width: 992px) and (max-width: 1199px) {\\n    header {\\n      margin-top: 54px; } }\\n  @media (min-width: 1200px) {\\n    header {\\n      margin-top: 63px; } }\\n  header h1 {\\n    margin-bottom: 18px; }\\n  header img {\\n    margin-bottom: 18px; }\\n    @media (max-width: 479px) {\\n      header img {\\n        height: 180px; } }\\n    @media (min-width: 480px) and (max-width: 767px) {\\n      header img {\\n        height: 180px; } }\\n    @media (min-width: 768px) and (max-width: 991px) {\\n      header img {\\n        height: 180px; } }\\n    @media (min-width: 992px) and (max-width: 1199px) {\\n      header img {\\n        height: 220px; } }\\n    @media (min-width: 1200px) {\\n      header img {\\n        height: 220px; } }\\n  @media (max-width: 479px) {\\n    header h3 {\\n      margin-bottom: 27px; } }\\n  @media (min-width: 480px) and (max-width: 767px) {\\n    header h3 {\\n      margin-bottom: 27px; } }\\n  @media (min-width: 768px) and (max-width: 991px) {\\n    header h3 {\\n      margin-bottom: 36px; } }\\n  @media (min-width: 992px) and (max-width: 1199px) {\\n    header h3 {\\n      margin-bottom: 36px; } }\\n  @media (min-width: 1200px) {\\n    header h3 {\\n      margin-bottom: 36px; } }\\n  header p {\\n    font-style: italic; }\\n    @media (max-width: 479px) {\\n      header p {\\n        margin-bottom: 27px; } }\\n    @media (min-width: 480px) and (max-width: 767px) {\\n      header p {\\n        margin-bottom: 27px; } }\\n    @media (min-width: 768px) and (max-width: 991px) {\\n      header p {\\n        margin-bottom: 36px; } }\\n    @media (min-width: 992px) and (max-width: 1199px) {\\n      header p {\\n        margin-bottom: 36px; } }\\n    @media (min-width: 1200px) {\\n      header p {\\n        margin-bottom: 36px; } }\\n    @media (max-width: 479px) {\\n      header p {\\n        font-size: 15px; } }\\n    @media (min-width: 480px) and (max-width: 767px) {\\n      header p {\\n        font-size: 16px; } }\\n    @media (min-width: 768px) and (max-width: 991px) {\\n      header p {\\n        font-size: 18px; } }\\n    @media (min-width: 992px) and (max-width: 1199px) {\\n      header p {\\n        font-size: 18px; } }\\n    @media (min-width: 1200px) {\\n      header p {\\n        font-size: 18px; } }\\n  header nav {\\n    font-family: ScopeOne, serif; }\\n    @media (max-width: 479px) {\\n      header nav {\\n        font-size: 26px; } }\\n    @media (min-width: 480px) and (max-width: 767px) {\\n      header nav {\\n        font-size: 26px; } }\\n    @media (min-width: 768px) and (max-width: 991px) {\\n      header nav {\\n        font-size: 32px; } }\\n    @media (min-width: 992px) and (max-width: 1199px) {\\n      header nav {\\n        font-size: 32px; } }\\n    @media (min-width: 1200px) {\\n      header nav {\\n        font-size: 32px; } }\\n    @media (max-width: 991px) {\\n      header nav li + li {\\n        margin-top: 18px; } }\\n    @media (min-width: 992px) {\\n      header nav li {\\n        display: inline-block; }\\n      header nav li + li:before {\\n        content: \\\"/\\\"; } }\\n  @media (min-width: 992px) and (max-width: 479px) {\\n    header nav li + li:before {\\n      margin-left: 9px;\\n      margin-right: 9px; } }\\n  @media (min-width: 992px) and (min-width: 480px) and (max-width: 767px) {\\n    header nav li + li:before {\\n      margin-left: 18px;\\n      margin-right: 18px; } }\\n  @media (min-width: 992px) and (min-width: 768px) and (max-width: 991px) {\\n    header nav li + li:before {\\n      margin-left: 18px;\\n      margin-right: 18px; } }\\n  @media (min-width: 992px) and (min-width: 992px) and (max-width: 1199px) {\\n    header nav li + li:before {\\n      margin-left: 27px;\\n      margin-right: 27px; } }\\n  @media (min-width: 992px) and (min-width: 1200px) {\\n    header nav li + li:before {\\n      margin-left: 27px;\\n      margin-right: 27px; } }\\n\\n#side-projects h4 {\\n  margin-bottom: 18px; }\\n\\n#side-projects ul.legend > li + li {\\n  margin-top: 9px; }\\n\\n#side-projects > ul:not(.legend) > li + li {\\n  margin-top: 27px; }\\n\\n#side-projects .application,\\n#side-projects .tool,\\n#side-projects .library {\\n  vertical-align: top;\\n  margin-top: 0;\\n  margin-bottom: 0;\\n  border-left-style: solid;\\n  padding-top: 9px;\\n  padding-bottom: 9px;\\n  display: inline-block;\\n  position: relative; }\\n  @media (max-width: 479px) {\\n    #side-projects .application,\\n    #side-projects .tool,\\n    #side-projects .library {\\n      padding-left: 9px; } }\\n  @media (min-width: 480px) and (max-width: 767px) {\\n    #side-projects .application,\\n    #side-projects .tool,\\n    #side-projects .library {\\n      padding-left: 36px; } }\\n  @media (min-width: 768px) and (max-width: 991px) {\\n    #side-projects .application,\\n    #side-projects .tool,\\n    #side-projects .library {\\n      padding-left: 36px; } }\\n  @media (min-width: 992px) and (max-width: 1199px) {\\n    #side-projects .application,\\n    #side-projects .tool,\\n    #side-projects .library {\\n      padding-left: 54px; } }\\n  @media (min-width: 1200px) {\\n    #side-projects .application,\\n    #side-projects .tool,\\n    #side-projects .library {\\n      padding-left: 54px; } }\\n  @media (max-width: 479px) {\\n    #side-projects .application,\\n    #side-projects .tool,\\n    #side-projects .library {\\n      padding-right: 9px; } }\\n  @media (min-width: 480px) and (max-width: 767px) {\\n    #side-projects .application,\\n    #side-projects .tool,\\n    #side-projects .library {\\n      padding-right: 45px; } }\\n  @media (min-width: 768px) and (max-width: 991px) {\\n    #side-projects .application,\\n    #side-projects .tool,\\n    #side-projects .library {\\n      padding-right: 45px; } }\\n  @media (min-width: 992px) and (max-width: 1199px) {\\n    #side-projects .application,\\n    #side-projects .tool,\\n    #side-projects .library {\\n      padding-right: 63px; } }\\n  @media (min-width: 1200px) {\\n    #side-projects .application,\\n    #side-projects .tool,\\n    #side-projects .library {\\n      padding-right: 63px; } }\\n  @media (max-width: 479px) {\\n    #side-projects .application,\\n    #side-projects .tool,\\n    #side-projects .library {\\n      border-left-width: 2px; } }\\n  @media (min-width: 480px) and (max-width: 767px) {\\n    #side-projects .application,\\n    #side-projects .tool,\\n    #side-projects .library {\\n      border-left-width: 2px; } }\\n  @media (min-width: 768px) and (max-width: 991px) {\\n    #side-projects .application,\\n    #side-projects .tool,\\n    #side-projects .library {\\n      border-left-width: 3px; } }\\n  @media (min-width: 992px) and (max-width: 1199px) {\\n    #side-projects .application,\\n    #side-projects .tool,\\n    #side-projects .library {\\n      border-left-width: 3px; } }\\n  @media (min-width: 1200px) {\\n    #side-projects .application,\\n    #side-projects .tool,\\n    #side-projects .library {\\n      border-left-width: 3px; } }\\n  #side-projects .application:before,\\n  #side-projects .tool:before,\\n  #side-projects .library:before {\\n    content: none; }\\n  @media (min-width: 480px) {\\n    #side-projects .application:after,\\n    #side-projects .tool:after,\\n    #side-projects .library:after {\\n      position: absolute;\\n      content: '';\\n      top: 0;\\n      right: 0;\\n      width: 0;\\n      height: 0;\\n      border-top: 20.5px solid transparent;\\n      border-bottom: 20.5px solid transparent;\\n      border-right: 9px solid white; } }\\n\\n#side-projects .application {\\n  border-left-color: #19610d;\\n  background-color: rgba(26, 189, 0, 0.3); }\\n  #side-projects .application + button {\\n    cursor: pointer; }\\n    #side-projects .application + button svg path {\\n      fill: #19610d; }\\n\\n#side-projects .tool {\\n  border-left-color: #f0a300;\\n  background-color: rgba(240, 163, 0, 0.3); }\\n  #side-projects .tool + button {\\n    cursor: pointer; }\\n    #side-projects .tool + button svg path {\\n      fill: #f0a300; }\\n\\n#side-projects .library {\\n  border-left-color: #84008a;\\n  background-color: rgba(132, 0, 138, 0.15); }\\n  #side-projects .library + button {\\n    cursor: pointer; }\\n    #side-projects .library + button svg path {\\n      fill: #84008a; }\\n\\n@media (max-width: 479px) {\\n  #side-projects button {\\n    margin-left: 18px; } }\\n\\n@media (min-width: 480px) and (max-width: 767px) {\\n  #side-projects button {\\n    margin-left: 27px; } }\\n\\n@media (min-width: 768px) and (max-width: 991px) {\\n  #side-projects button {\\n    margin-left: 27px; } }\\n\\n@media (min-width: 992px) and (max-width: 1199px) {\\n  #side-projects button {\\n    margin-left: 36px; } }\\n\\n@media (min-width: 1200px) {\\n  #side-projects button {\\n    margin-left: 36px; } }\\n\\n#side-projects .content {\\n  height: 0;\\n  overflow: hidden; }\\n  @media (max-width: 479px) {\\n    #side-projects .content {\\n      margin-left: 9px; } }\\n  @media (min-width: 480px) and (max-width: 767px) {\\n    #side-projects .content {\\n      margin-left: 9px; } }\\n  @media (min-width: 768px) and (max-width: 991px) {\\n    #side-projects .content {\\n      margin-left: 18px; } }\\n  @media (min-width: 992px) and (max-width: 1199px) {\\n    #side-projects .content {\\n      margin-left: 18px; } }\\n  @media (min-width: 1200px) {\\n    #side-projects .content {\\n      margin-left: 18px; } }\\n  #side-projects .content > a {\\n    display: block; }\\n    #side-projects .content > a:first-child {\\n      margin-top: 18px; }\\n    #side-projects .content > a:not(:first-child) {\\n      margin-top: 9px; }\\n\\n@media (max-width: 479px) {\\n  #side-projects dd + dt {\\n    margin-top: 9px; } }\\n\\n@media (min-width: 480px) and (max-width: 767px) {\\n  #side-projects dd + dt {\\n    margin-top: 9px; } }\\n\\n@media (min-width: 768px) and (max-width: 991px) {\\n  #side-projects dd + dt {\\n    margin-top: 18px; } }\\n\\n@media (min-width: 992px) and (max-width: 1199px) {\\n  #side-projects dd + dt {\\n    margin-top: 18px; } }\\n\\n@media (min-width: 1200px) {\\n  #side-projects dd + dt {\\n    margin-top: 18px; } }\\n\\n#side-projects dt:before {\\n  content: '- '; }\\n\\n@media (max-width: 479px) {\\n  #side-projects dd {\\n    margin-top: 3px; } }\\n\\n@media (min-width: 480px) and (max-width: 767px) {\\n  #side-projects dd {\\n    margin-top: 3px; } }\\n\\n@media (min-width: 768px) and (max-width: 991px) {\\n  #side-projects dd {\\n    margin-top: 4px; } }\\n\\n@media (min-width: 992px) and (max-width: 1199px) {\\n  #side-projects dd {\\n    margin-top: 4px; } }\\n\\n@media (min-width: 1200px) {\\n  #side-projects dd {\\n    margin-top: 5px; } }\\n\\n@media (max-width: 479px) {\\n  #side-projects dd {\\n    margin-left: 18px; } }\\n\\n@media (min-width: 480px) and (max-width: 767px) {\\n  #side-projects dd {\\n    margin-left: 18px; } }\\n\\n@media (min-width: 768px) and (max-width: 991px) {\\n  #side-projects dd {\\n    margin-left: 18px; } }\\n\\n@media (min-width: 992px) and (max-width: 1199px) {\\n  #side-projects dd {\\n    margin-left: 27px; } }\\n\\n@media (min-width: 1200px) {\\n  #side-projects dd {\\n    margin-left: 27px; } }\\n\", \"\", {\"version\":3,\"sources\":[\"/home/phil/git-repos/personal/personal-home2/client/scss/client/scss/fonts.scss\",\"/home/phil/git-repos/personal/personal-home2/client/scss/client/scss/main.scss\",\"/home/phil/git-repos/personal/personal-home2/client/scss/client/scss/variables.scss\",\"/home/phil/git-repos/personal/personal-home2/client/scss/client/scss/mixins.scss\",\"/home/phil/git-repos/personal/personal-home2/client/scss/client/scss/partials/footer.scss\",\"/home/phil/git-repos/personal/personal-home2/client/scss/client/scss/partials/header.scss\",\"/home/phil/git-repos/personal/personal-home2/client/scss/client/scss/partials/side-projects.scss\"],\"names\":[],\"mappings\":\"AAAA;EACC,sBAAqB;EACrB,iBAAgB;EAChB,kDAAwD,EAAA;;AAEzD;EACC,yBAAwB;EACxB,iBAAgB;EAChB,kDAAwD,EAAA;;AAEzD;EACC,yBAAwB;EACxB,iBAAgB;EACf,mBAAkB;EACnB,kDAAuD,EAAA;;ACdxD;;EAEE,kBCEQ;EDDR,eCGU;EDFV,qCAAoC;EACpC,gBCoBc,EDnBf;;AAED;EACE,cAAa;EACb,uBAAsB;EACtB,kBAAiB,EAKlB;EARD;IAMI,aAAY,EACb;;AAGH;;;;EAIE,6BAA4B,EAC7B;;AAED;;;;;;EAME,iBAAgB,EACjB;;AAED;;;;;;;;;;;EAWE,UAAS;EACT,WAAU,EACX;;AAED;;;;;;;EAOE,eAAc,EACf;;AAED;EACE,UAAS;EACT,yBAAwB;EACxB,iBAAgB;EAChB,sBAAqB;EACrB,aAAY,EACb;;AAED;EACE,iBAAgB,EACjB;;AAED;EACE,gBClCY,EDmCb;;AACD;EACE,gBCpCY,EDqCb;;AACD;EACE,gBCtCY,EDuCb;;AACD;EACE,gBCxCY,EDyCb;;AACD;EACE,gBC1CY;ED2CZ,mBCnDoB,EDoDrB;;AAED;EACE,eClFY;EDmFZ,sBAAqB,EACtB;;AAED;EACE,mBAAkB,EACnB;;AE9FC;EFgGF;;;IE9FM,gBAAU,EFyGf,EAAA;;AEtGC;EF2FF;;;IEzFM,gBAAU,EFoGf,EAAA;;AEjGC;EFsFF;;;IEpFM,gBAAU,EF+Ff,EAAA;;AE5FC;EFiFF;;;IE/EM,gBAAU,EF0Ff,EAAA;;AEvFC;EF4EF;;;IE1EM,gBAAU,EFqFf,EAAA;;AAED;;EAEE,iBAAgB,EACjB;;AAED;EACE,eAAc;EACd,kBC7FiB,EDgGlB;EEvHC;IFkHF;MEhHM,mBAAU;MAAV,oBAAU,EFqHf,EAAA;EElHC;IF6GF;ME3GM,mBAAU;MAAV,oBAAU,EFgHf,EAAA;EE7GC;IFwGF;MEtGM,mBAAU;MAAV,oBAAU,EF2Gf,EAAA;EExGC;IFmGF;MEjGM,mBAAU;MAAV,oBAAU,EFsGf,EAAA;EEnGC;IF8FF;ME5FM,mBAAU;MAAV,oBAAU,EFiGf,EAAA;;AEvHC;EFyHF;IEvHM,iBAAU,EF2Jf,EAAA;;AExJC;EFoHF;IElHM,iBAAU,EFsJf,EAAA;;AEnJC;EF+GF;IE7GM,iBAAU,EFiJf,EAAA;;AE9IC;EF0GF;IExGM,iBAAU,EF4If,EAAA;;AEzIC;EFqGF;IEnGM,iBAAU,EFuIf,EAAA;;AApCD;EAII,eCtHY;ED+HZ,oBC9GY,ED+Gb;EEvID;IFyHF;MEvHM,gBAAU,EFqIb,EAAA;EElID;IFoHF;MElHM,gBAAU,EFgIb,EAAA;EE7HD;IF+GF;ME7GM,gBAAU,EF2Hb,EAAA;EExHD;IF0GF;MExGM,gBAAU,EFsHb,EAAA;EEnHD;IFqGF;MEnGM,gBAAU,EFiHb,EAAA;;AAdH;EAiBI,iBC3G8B,ED4G/B;;AAlBH;EAoBI,iBCrHY,EDsHb;;AArBH;EAuBI,gBC/GkB,EDgHnB;;AAxBH;EA0BI,iBC3HY,ED4Hb;;AA3BH;EA8BI,mBCtHkB,ED2HnB;EAnCH;IAiCM,eAAc,EACf;;AAIL;EACE,aCtGqC;EDuGrC,YCvGqC,EDwGtC;;AAED;EACE,mBAAkB,EACnB;;AAED;EACE,yCAAwC,EACzC;;AG3KD;EAGE,0BFcoB;EEbpB,aFAQ;EECR,mBAAkB,EAgCnB;EDpCC;ICDF;MDGM,aAAU;MAAV,kBAAU,ECkCf,EAAA;ED/BC;ICNF;MDQM,aAAU;MAAV,kBAAU,EC6Bf,EAAA;ED1BC;ICXF;MDaM,cAAU;MAAV,mBAAU,ECwBf,EAAA;EDrBC;IChBF;MDkBM,cAAU;MAAV,mBAAU,ECmBf,EAAA;EDhBC;ICrBF;MDuBM,cAAU;MAAV,mBAAU,ECcf,EAAA;EDpCC;ICDF;MDGM,iBAAU,ECkCf,EAAA;ED/BC;ICNF;MDQM,iBAAU,EC6Bf,EAAA;ED1BC;ICXF;MDaM,iBAAU,ECwBf,EAAA;EDrBC;IChBF;MDkBM,iBAAU,ECmBf,EAAA;EDhBC;ICrBF;MDuBM,iBAAU,ECcf,EAAA;EArCD;IAkBI,uBAAsB,EACvB;IDlBD;MCDF;QDGM,mBAAU,ECgBb,EAAA;IDbD;MCNF;QDQM,mBAAU,ECWb,EAAA;IDRD;MCXF;QDaM,mBAAU,ECMb,EAAA;IDHD;MChBF;QDkBM,mBAAU,ECCb,EAAA;IDED;MCrBF;QDuBM,mBAAU,ECJb,EAAA;IDlBD;MCDF;QDGM,gBAAU,ECgBb,EAAA;IDbD;MCNF;QDQM,gBAAU,ECWb,EAAA;IDRD;MCXF;QDaM,gBAAU,ECMb,EAAA;IDHD;MChBF;QDkBM,gBAAU,ECCb,EAAA;IDED;MCrBF;QDuBM,gBAAU,ECJb,EAAA;EAnBH;IAsBI,uBAAsB,EAcvB;IDnCD;MCDF;QDGM,aAAU,ECiCb,EAAA;ID9BD;MCNF;QDQM,aAAU,EC4Bb,EAAA;IDzBD;MCXF;QDaM,aAAU,ECuBb,EAAA;IDpBD;MChBF;QDkBM,aAAU,ECkBb,EAAA;IDfD;MCrBF;QDuBM,aAAU,ECab,EAAA;IDnCD;MCDF;QDGM,iBAAU;QAAV,oBAAU,ECiCb,EAAA;ID9BD;MCNF;QDQM,iBAAU;QAAV,oBAAU,EC4Bb,EAAA;IDzBD;MCXF;QDaM,iBAAU;QAAV,oBAAU,ECuBb,EAAA;IDpBD;MChBF;QDkBM,iBAAU;QAAV,oBAAU,ECkBb,EAAA;IDfD;MCrBF;QDuBM,iBAAU;QAAV,oBAAU,ECab,EAAA;IApCH;MAkCM,YF9BI,EE+BL;;ACnCL;EAEE,mBAAkB,EA0CnB;EF3CC;IEDF;MFGM,iBAAU,EEyCf,EAAA;EFtCC;IENF;MFQM,iBAAU,EEoCf,EAAA;EFjCC;IEXF;MFaM,iBAAU,EE+Bf,EAAA;EF5BC;IEhBF;MFkBM,iBAAU,EE0Bf,EAAA;EFvBC;IErBF;MFuBM,iBAAU,EEqBf,EAAA;EA5CD;IAKI,oBHoBY,EGnBb;EANH;IAUI,oBHeY,EGdb;IFVD;MEDF;QFGM,cAAU,EEQb,EAAA;IFLD;MENF;QFQM,cAAU,EEGb,EAAA;IFAD;MEXF;QFaM,cAAU,EEFb,EAAA;IFKD;MEhBF;QFkBM,cAAU,EEPb,EAAA;IFUD;MErBF;QFuBM,cAAU,EEZb,EAAA;EFVD;IEDF;MFGM,oBAAU,EEYb,EAAA;EFTD;IENF;MFQM,oBAAU,EEOb,EAAA;EFJD;IEXF;MFaM,oBAAU,EEEb,EAAA;EFCD;IEhBF;MFkBM,oBAAU,EEHb,EAAA;EFMD;IErBF;MFuBM,oBAAU,EERb,EAAA;EAfH;IAmBI,mBAAkB,EAGnB;IFrBD;MEDF;QFGM,oBAAU,EEmBb,EAAA;IFhBD;MENF;QFQM,oBAAU,EEcb,EAAA;IFXD;MEXF;QFaM,oBAAU,EESb,EAAA;IFND;MEhBF;QFkBM,oBAAU,EEIb,EAAA;IFDD;MErBF;QFuBM,oBAAU,EEDb,EAAA;IFrBD;MEDF;QFGM,gBAAU,EEmBb,EAAA;IFhBD;MENF;QFQM,gBAAU,EEcb,EAAA;IFXD;MEXF;QFaM,gBAAU,EESb,EAAA;IFND;MEhBF;QFkBM,gBAAU,EEIb,EAAA;IFDD;MErBF;QFuBM,gBAAU,EEDb,EAAA;EAtBH;IA0BI,6BAA4B,EAiB7B;IF1CD;MEDF;QFGM,gBAAU,EEwCb,EAAA;IFrCD;MENF;QFQM,gBAAU,EEmCb,EAAA;IFhCD;MEXF;QFaM,gBAAU,EE8Bb,EAAA;IF3BD;MEhBF;QFkBM,gBAAU,EEyBb,EAAA;IFtBD;MErBF;QFuBM,gBAAU,EEoBb,EAAA;IAfC;MA5BJ;QA8BQ,iBHLQ,EGMT,EAAA;IAGH;MAlCJ;QAoCQ,sBAAqB,EACtB;MArCP;QAuCQ,aAAY,EAEb,EAAA;EFxCL;IEDF;MFGM,iBAAU;MAAV,kBAAU,EEsCT,EAAA;EFnCL;IENF;MFQM,kBAAU;MAAV,mBAAU,EEiCT,EAAA;EF9BL;IEXF;MFaM,kBAAU;MAAV,mBAAU,EE4BT,EAAA;EFzBL;IEhBF;MFkBM,kBAAU;MAAV,mBAAU,EEuBT,EAAA;EFpBL;IErBF;MFuBM,kBAAU;MAAV,mBAAU,EEkBT,EAAA;;ACzCP;EAEI,oBJuBY,EItBb;;AAHH;EAMI,gBJ4BkB,EI3BnB;;AAPH;EAUI,iBJsB8B,EIrB/B;;AAXH;;;EAgBI,oBAAmB;EACnB,cAAa;EACb,iBAAgB;EAChB,yBAAwB;EACxB,iBJckB;EIblB,oBJakB;EIZlB,sBAAqB;EACrB,mBAAkB,EA6BnB;EHnDD;IGDF;;;MHGM,kBAAU,EGiDb,EAAA;EH9CD;IGNF;;;MHQM,mBAAU,EG4Cb,EAAA;EHzCD;IGXF;;;MHaM,mBAAU,EGuCb,EAAA;EHpCD;IGhBF;;;MHkBM,mBAAU,EGkCb,EAAA;EH/BD;IGrBF;;;MHuBM,mBAAU,EG6Bb,EAAA;EHnDD;IGDF;;;MHGM,mBAAU,EGiDb,EAAA;EH9CD;IGNF;;;MHQM,oBAAU,EG4Cb,EAAA;EHzCD;IGXF;;;MHaM,oBAAU,EGuCb,EAAA;EHpCD;IGhBF;;;MHkBM,oBAAU,EGkCb,EAAA;EH/BD;IGrBF;;;MHuBM,oBAAU,EG6Bb,EAAA;EHnDD;IGDF;;;MHGM,uBAAU,EGiDb,EAAA;EH9CD;IGNF;;;MHQM,uBAAU,EG4Cb,EAAA;EHzCD;IGXF;;;MHaM,uBAAU,EGuCb,EAAA;EHpCD;IGhBF;;;MHkBM,uBAAU,EGkCb,EAAA;EH/BD;IGrBF;;;MHuBM,uBAAU,EG6Bb,EAAA;EApDH;;;IAoCM,cAAa,EACd;EAED;IAvCJ;;;MAyCQ,mBAAkB;MAClB,YAAW;MACX,OAAM;MACN,SAAQ;MACR,SAAQ;MACR,UAAS;MACT,qCAAmD;MACnD,wCAAsD;MACtD,8BJ7CE,EI8CH,EAAA;;AAlDP;EAuDI,2BJ7CiB;EI8CjB,wCJ7CmC,EIsDpC;EAjEH;IA2DM,gBAAe,EAKhB;IAhEL;MA8DQ,cJpDa,EIqDd;;AA/DP;EAoEI,2BJxDU;EIyDV,yCJxD0B,EIiE3B;EA9EH;IAwEM,gBAAe,EAKhB;IA7EL;MA2EQ,cJ/DM,EIgEP;;AA5EP;EAiFI,2BJnEa;EIoEb,0CJnEiC,EI4ElC;EA3FH;IAqFM,gBAAe,EAKhB;IA1FL;MAwFQ,cJ1ES,EI2EV;;AHxFL;EGDF;IHGM,kBAAU,EG4Fb,EAAA;;AHzFD;EGNF;IHQM,kBAAU,EGuFb,EAAA;;AHpFD;EGXF;IHaM,kBAAU,EGkFb,EAAA;;AH/ED;EGhBF;IHkBM,kBAAU,EG6Eb,EAAA;;AH1ED;EGrBF;IHuBM,kBAAU,EGwEb,EAAA;;AA/FH;EAkGI,UAAS;EACT,iBAAgB,EAajB;EH/GD;IGDF;MHGM,iBAAU,EG6Gb,EAAA;EH1GD;IGNF;MHQM,iBAAU,EGwGb,EAAA;EHrGD;IGXF;MHaM,kBAAU,EGmGb,EAAA;EHhGD;IGhBF;MHkBM,kBAAU,EG8Fb,EAAA;EH3FD;IGrBF;MHuBM,kBAAU,EGyFb,EAAA;EAhHH;IAuGM,eAAc,EAQf;IA/GL;MA0GQ,iBJjFQ,EIkFT;IA3GP;MA6GQ,gBJ3Ec,EI4Ef;;AH7GL;EGDF;IHGM,gBAAU,EGiHb,EAAA;;AH9GD;EGNF;IHQM,gBAAU,EG4Gb,EAAA;;AHzGD;EGXF;IHaM,iBAAU,EGuGb,EAAA;;AHpGD;EGhBF;IHkBM,iBAAU,EGkGb,EAAA;;AH/FD;EGrBF;IHuBM,iBAAU,EG6Fb,EAAA;;AApHH;EAsHI,cAAa,EACd;;AHtHD;EGDF;IHGM,gBAAU,EGwHb,EAAA;;AHrHD;EGNF;IHQM,gBAAU,EGmHb,EAAA;;AHhHD;EGXF;IHaM,gBAAU,EG8Gb,EAAA;;AH3GD;EGhBF;IHkBM,gBAAU,EGyGb,EAAA;;AHtGD;EGrBF;IHuBM,gBAAU,EGoGb,EAAA;;AH1HD;EGDF;IHGM,kBAAU,EGwHb,EAAA;;AHrHD;EGNF;IHQM,kBAAU,EGmHb,EAAA;;AHhHD;EGXF;IHaM,kBAAU,EG8Gb,EAAA;;AH3GD;EGhBF;IHkBM,kBAAU,EGyGb,EAAA;;AHtGD;EGrBF;IHuBM,kBAAU,EGoGb,EAAA\",\"file\":\"index.scss\",\"sourcesContent\":[\"@font-face{\\n\\tfont-family: ScopeOne;\\n\\tfont-weight: 400;\\n\\tsrc: url(../fonts/scope-one.regular.woff) format(\\\"woff\\\");\\n}\\n@font-face{\\n\\tfont-family: 'Open Sans';\\n\\tfont-weight: 400;\\n\\tsrc: url(../fonts/open-sans.regular.woff) format(\\\"woff\\\");\\n}\\n@font-face{\\n\\tfont-family: 'Open Sans';\\n\\tfont-weight: 400;\\n  font-style: italic;\\n\\tsrc: url(../fonts/open-sans.italic.woff) format(\\\"woff\\\");\\n}\\n\",\"html,\\nbody {\\n  background: $bg;\\n  color: $fg;\\n  font-family: 'Open Sans', sans-serif;\\n  font-size: $font-base;\\n}\\n\\nbody {\\n  display: flex;\\n  flex-direction: column;\\n  min-height: 100vh;\\n\\n  > .site-container {\\n    flex-grow: 1;\\n  }\\n}\\n\\nh1,\\nh2,\\nh3,\\nh4 {\\n  font-family: ScopeOne, serif;\\n}\\n\\nh1,\\nh2,\\nh3,\\nh4,\\nh5,\\nh6 {\\n  font-weight: 400;\\n}\\n\\nh1,\\nh2,\\nh3,\\nh4,\\nh5,\\nh6,\\np,\\nul,\\nol,\\nli,\\nbutton {\\n  margin: 0;\\n  padding: 0;\\n}\\n\\nh1,\\nh2,\\nh3,\\nh4,\\nh5,\\nh6,\\nli {\\n  line-height: 1;\\n}\\n\\nbutton {\\n  border: 0;\\n  outline: none !important;\\n  background: none;\\n  border-image-width: 0;\\n  font-size: 0;\\n}\\n\\np {\\n  line-height: 1.3;\\n}\\n\\nh1 {\\n  font-size: $font-h1;\\n}\\nh2 {\\n  font-size: $font-xl;\\n}\\nh3 {\\n  font-size: $font-lg;\\n}\\nh4 {\\n  font-size: $font-md;\\n}\\nh5 {\\n  font-size: $font-sm;\\n  margin-bottom: $xxs;\\n}\\n\\na {\\n  color: $link;\\n  text-decoration: none;\\n}\\n\\np.note {\\n  font-style: italic;\\n}\\n\\np,\\ndd,\\ndt {\\n  @include per-size(\\n    'font-size',\\n    $font-xs,\\n    $font-xs,\\n    $font-base,\\n    $font-base,\\n    $font-base\\n  );\\n}\\n\\nul:not(.normal-list),\\nol:not(.normal-list) {\\n  list-style: none;\\n}\\n\\n.site-container {\\n  margin: 0 auto;\\n  max-width: $site-width;\\n\\n  @include per-size(('padding-left', 'padding-right'), $xs, $xs, $sm, $md, $lg);\\n}\\n\\nmain > section {\\n  @include per-size('margin-top', $md, $md, $lg, $lg, $lg);\\n\\n  h3 {\\n    color: $accent;\\n    @include per-size(\\n      'font-size',\\n      $font-lg,\\n      $font-lg,\\n      $font-xl,\\n      $font-xl,\\n      $font-xl\\n    );\\n    margin-bottom: $xs;\\n  }\\n\\n  h4 {\\n    margin-top: $sm;\\n  }\\n  h5 {\\n    margin-top: $xs;\\n  }\\n  p + p {\\n    margin-top: $xxs;\\n  }\\n  p + ul {\\n    margin-top: $xs;\\n  }\\n\\n  h4 {\\n    margin-bottom: $xxs;\\n\\n    &:before {\\n      content: ' - ';\\n    }\\n  }\\n}\\n\\nbutton.expander > svg {\\n  height: $project-height;\\n  width: $project-height;\\n}\\n\\n.sidenote {\\n  font-style: italic;\\n}\\n\\nbutton {\\n  -webkit-tap-highlight-color: transparent;\\n}\\n\",\"//--------//\\n// Colors //\\n//--------//\\n\\n$bg: white;\\n$bg-off: #e9e9e9;\\n$fg: #131313;\\n$link: #2457b0;\\n$accent: #a32500;\\n\\n$application: #19610d;\\n$application-bg: fade_out(#1abd00, 0.7);\\n$tool: #f0a300;\\n$tool-bg: fade_out($tool, 0.7);\\n$library: #84008a;\\n$library-bg: fade_out($library, 0.85);\\n\\n$footer-color: #303030;\\n\\n//\\n//-------//\\n// Sizes //\\n//-------//\\n\\n$site-width: 1100px;\\n$font-base: 18px;\\n\\n// general purpose element spacing\\n\\n$xl: round($font-base * 3.5);\\n$lg: ($font-base * 3);\\n$md: ($font-base * 2);\\n$sm: $font-base + ($font-base / 2);\\n$xs: $font-base;\\n$xxs: ($font-base / 2);\\n\\n// font-sizes\\n\\n$font-h1: 48px;\\n$font-xl: 32px;\\n$font-lg: 26px;\\n$font-md: 23px;\\n$font-sm: 20px;\\n$font-xs: 16px;\\n$font-xxs: 15px;\\n\\n// slightly modified from bootstrap\\n$screen-xs-min: 480px;\\n$screen-sm-min: 768px;\\n$screen-md-min: 992px;\\n$screen-lg-min: 1200px;\\n\\n$screen-xxs-max: ($screen-xs-min - 1);\\n$screen-xs-max: ($screen-sm-min - 1);\\n$screen-sm-max: ($screen-md-min - 1);\\n$screen-md-max: ($screen-lg-min - 1);\\n\\n// context-specific\\n\\n$project-height: $xxs + $xxs + $font-md;\\n\",\"@mixin per-size($prop-list, $xxs, $xs, $sm, $md, $lg, $unit: null) {\\n  @media (max-width: $screen-xxs-max) {\\n    @each $prop in $prop-list {\\n      #{$prop}: #{$xxs}#{$unit};\\n    }\\n  }\\n  @media (min-width: $screen-xs-min) and (max-width: $screen-xs-max) {\\n    @each $prop in $prop-list {\\n      #{$prop}: #{$xs}#{$unit};\\n    }\\n  }\\n  @media (min-width: $screen-sm-min) and (max-width: $screen-sm-max) {\\n    @each $prop in $prop-list {\\n      #{$prop}: #{$sm}#{$unit};\\n    }\\n  }\\n  @media (min-width: $screen-md-min) and (max-width: $screen-md-max) {\\n    @each $prop in $prop-list {\\n      #{$prop}: #{$md}#{$unit};\\n    }\\n  }\\n  @media (min-width: $screen-lg-min) {\\n    @each $prop in $prop-list {\\n      #{$prop}: #{$lg}#{$unit};\\n    }\\n  }\\n}\\n\",\"footer {\\n  @include per-size(('height', 'line-height'), 80, 80, 110, 110, 110, 'px');\\n  @include per-size('margin-top', $md, $md, $lg, $lg, $lg);\\n  background-color: $footer-color;\\n  color: $bg;\\n  text-align: center;\\n\\n  .email {\\n    @include per-size(('margin-right'), 20, 20, 30, 30, 30, 'px');\\n    @include per-size(\\n      'font-size',\\n      $font-xxs,\\n      $font-xxs,\\n      $font-xs,\\n      $font-xs,\\n      $font-xs\\n    );\\n\\n    vertical-align: middle;\\n  }\\n\\n  .octicon {\\n    vertical-align: middle;\\n    @include per-size('height', 50, 50, 70, 70, 70, 'px');\\n    @include per-size(\\n      ('margin-top', 'margin-bottom'),\\n      10,\\n      10,\\n      15,\\n      15,\\n      15,\\n      'px'\\n    );\\n    path {\\n      fill: $bg;\\n    }\\n  }\\n}\\n\",\"header {\\n  @include per-size('margin-top', $sm, $sm, $md, $lg, $xl);\\n  text-align: center;\\n\\n  h1 {\\n    margin-bottom: $xs;\\n  }\\n\\n  img {\\n    @include per-size('height', '180', '180', '180', '220', '220', 'px');\\n    margin-bottom: $xs;\\n  }\\n\\n  h3 {\\n    @include per-size('margin-bottom', $sm, $sm, $md, $md, $md);\\n  }\\n\\n  p {\\n    @include per-size('margin-bottom', $sm, $sm, $md, $md, $md);\\n    font-style: italic;\\n\\n    @include per-size('font-size', $font-xxs, $font-xs, $font-base, $font-base, $font-base);\\n  }\\n\\n  nav {\\n    @include per-size('font-size', $font-lg, $font-lg, $font-xl, $font-xl, $font-xl);\\n    font-family: ScopeOne, serif;\\n\\n    @media (max-width: $screen-sm-max) {\\n      li + li {\\n        margin-top: $xs;\\n      }\\n    }\\n\\n    @media (min-width: $screen-md-min) {\\n      li {\\n        display: inline-block;\\n      }\\n      li + li:before {\\n        content: \\\"/\\\";\\n        @include per-size(('margin-left', 'margin-right'), $xxs, $xs, $xs, $sm, $sm);\\n      }\\n    }\\n  }\\n}\\n\",\"#side-projects {\\n  h4 {\\n    margin-bottom: $xs;\\n  }\\n\\n  ul.legend > li + li {\\n    margin-top: $xxs;\\n  }\\n\\n  > ul:not(.legend) > li + li {\\n    margin-top: $sm;\\n  }\\n\\n  .application,\\n  .tool,\\n  .library {\\n    vertical-align: top;\\n    margin-top: 0;\\n    margin-bottom: 0;\\n    border-left-style: solid;\\n    padding-top: $xxs;\\n    padding-bottom: $xxs;\\n    display: inline-block;\\n    position: relative;\\n    @include per-size('padding-left', $xxs, $md, $md, $lg, $lg);\\n    @include per-size(\\n      'padding-right',\\n      $xxs,\\n      ($md + $xxs),\\n      ($md + $xxs),\\n      ($lg + $xxs),\\n      ($lg + $xxs)\\n    );\\n    @include per-size('border-left-width', 2, 2, 3, 3, 3, 'px');\\n\\n    &:before {\\n      content: none;\\n    }\\n\\n    @media (min-width: $screen-xs-min) {\\n      &:after {\\n        position: absolute;\\n        content: '';\\n        top: 0;\\n        right: 0;\\n        width: 0;\\n        height: 0;\\n        border-top: ($project-height / 2) solid transparent;\\n        border-bottom: ($project-height / 2) solid transparent;\\n        border-right: $xxs solid $bg;\\n      }\\n    }\\n  }\\n\\n  .application {\\n    border-left-color: $application;\\n    background-color: $application-bg;\\n\\n    + button {\\n      cursor: pointer;\\n\\n      svg path {\\n        fill: $application;\\n      }\\n    }\\n  }\\n\\n  .tool {\\n    border-left-color: $tool;\\n    background-color: $tool-bg;\\n\\n    + button {\\n      cursor: pointer;\\n\\n      svg path {\\n        fill: $tool;\\n      }\\n    }\\n  }\\n\\n  .library {\\n    border-left-color: $library;\\n    background-color: $library-bg;\\n\\n    + button {\\n      cursor: pointer;\\n\\n      svg path {\\n        fill: $library;\\n      }\\n    }\\n  }\\n\\n  button {\\n    @include per-size('margin-left', $xs, $sm, $sm, $md, $md);\\n  }\\n\\n  .content {\\n    height: 0;\\n    overflow: hidden;\\n    @include per-size('margin-left', $xxs, $xxs, $xs, $xs, $xs);\\n\\n    > a {\\n      display: block;\\n\\n      &:first-child {\\n        margin-top: $xs;\\n      }\\n      &:not(:first-child) {\\n        margin-top: $xxs;\\n      }\\n    }\\n  }\\n\\n  dd + dt {\\n    @include per-size('margin-top', $xxs, $xxs, $xs, $xs, $xs);\\n  }\\n  dt:before {\\n    content: '- ';\\n  }\\n  dd {\\n    @include per-size('margin-top', 3, 3, 4, 4, 5, 'px');\\n    @include per-size('margin-left', $xs, $xs, $xs, $sm, $sm);\\n  }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n\n// exports\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/css-loader/index.js??ref--8-1!./node_modules/sass-loader/lib/loader.js??ref--8-2!./client/scss/index.scss\n");

/***/ }),

/***/ "./node_modules/css-loader/lib/css-base.js":
/*!*************************************************!*\
  !*** ./node_modules/css-loader/lib/css-base.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\nmodule.exports = function(useSourceMap) {\n\tvar list = [];\n\n\t// return the list of modules as css string\n\tlist.toString = function toString() {\n\t\treturn this.map(function (item) {\n\t\t\tvar content = cssWithMappingToString(item, useSourceMap);\n\t\t\tif(item[2]) {\n\t\t\t\treturn \"@media \" + item[2] + \"{\" + content + \"}\";\n\t\t\t} else {\n\t\t\t\treturn content;\n\t\t\t}\n\t\t}).join(\"\");\n\t};\n\n\t// import a list of modules into the list\n\tlist.i = function(modules, mediaQuery) {\n\t\tif(typeof modules === \"string\")\n\t\t\tmodules = [[null, modules, \"\"]];\n\t\tvar alreadyImportedModules = {};\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar id = this[i][0];\n\t\t\tif(typeof id === \"number\")\n\t\t\t\talreadyImportedModules[id] = true;\n\t\t}\n\t\tfor(i = 0; i < modules.length; i++) {\n\t\t\tvar item = modules[i];\n\t\t\t// skip already imported module\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\n\t\t\t//  when a module is imported multiple times with different media queries.\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\n\t\t\t\tif(mediaQuery && !item[2]) {\n\t\t\t\t\titem[2] = mediaQuery;\n\t\t\t\t} else if(mediaQuery) {\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\n\t\t\t\t}\n\t\t\t\tlist.push(item);\n\t\t\t}\n\t\t}\n\t};\n\treturn list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n\tvar content = item[1] || '';\n\tvar cssMapping = item[3];\n\tif (!cssMapping) {\n\t\treturn content;\n\t}\n\n\tif (useSourceMap && typeof btoa === 'function') {\n\t\tvar sourceMapping = toComment(cssMapping);\n\t\tvar sourceURLs = cssMapping.sources.map(function (source) {\n\t\t\treturn '/*# sourceURL=' + cssMapping.sourceRoot + source + ' */'\n\t\t});\n\n\t\treturn [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n\t}\n\n\treturn [content].join('\\n');\n}\n\n// Adapted from convert-source-map (MIT)\nfunction toComment(sourceMap) {\n\t// eslint-disable-next-line no-undef\n\tvar base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n\tvar data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;\n\n\treturn '/*# ' + data + ' */';\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9saWIvY3NzLWJhc2UuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9saWIvY3NzLWJhc2UuanM/MjM1MCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuXHRNSVQgTGljZW5zZSBodHRwOi8vd3d3Lm9wZW5zb3VyY2Uub3JnL2xpY2Vuc2VzL21pdC1saWNlbnNlLnBocFxuXHRBdXRob3IgVG9iaWFzIEtvcHBlcnMgQHNva3JhXG4qL1xuLy8gY3NzIGJhc2UgY29kZSwgaW5qZWN0ZWQgYnkgdGhlIGNzcy1sb2FkZXJcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24odXNlU291cmNlTWFwKSB7XG5cdHZhciBsaXN0ID0gW107XG5cblx0Ly8gcmV0dXJuIHRoZSBsaXN0IG9mIG1vZHVsZXMgYXMgY3NzIHN0cmluZ1xuXHRsaXN0LnRvU3RyaW5nID0gZnVuY3Rpb24gdG9TdHJpbmcoKSB7XG5cdFx0cmV0dXJuIHRoaXMubWFwKGZ1bmN0aW9uIChpdGVtKSB7XG5cdFx0XHR2YXIgY29udGVudCA9IGNzc1dpdGhNYXBwaW5nVG9TdHJpbmcoaXRlbSwgdXNlU291cmNlTWFwKTtcblx0XHRcdGlmKGl0ZW1bMl0pIHtcblx0XHRcdFx0cmV0dXJuIFwiQG1lZGlhIFwiICsgaXRlbVsyXSArIFwie1wiICsgY29udGVudCArIFwifVwiO1xuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0cmV0dXJuIGNvbnRlbnQ7XG5cdFx0XHR9XG5cdFx0fSkuam9pbihcIlwiKTtcblx0fTtcblxuXHQvLyBpbXBvcnQgYSBsaXN0IG9mIG1vZHVsZXMgaW50byB0aGUgbGlzdFxuXHRsaXN0LmkgPSBmdW5jdGlvbihtb2R1bGVzLCBtZWRpYVF1ZXJ5KSB7XG5cdFx0aWYodHlwZW9mIG1vZHVsZXMgPT09IFwic3RyaW5nXCIpXG5cdFx0XHRtb2R1bGVzID0gW1tudWxsLCBtb2R1bGVzLCBcIlwiXV07XG5cdFx0dmFyIGFscmVhZHlJbXBvcnRlZE1vZHVsZXMgPSB7fTtcblx0XHRmb3IodmFyIGkgPSAwOyBpIDwgdGhpcy5sZW5ndGg7IGkrKykge1xuXHRcdFx0dmFyIGlkID0gdGhpc1tpXVswXTtcblx0XHRcdGlmKHR5cGVvZiBpZCA9PT0gXCJudW1iZXJcIilcblx0XHRcdFx0YWxyZWFkeUltcG9ydGVkTW9kdWxlc1tpZF0gPSB0cnVlO1xuXHRcdH1cblx0XHRmb3IoaSA9IDA7IGkgPCBtb2R1bGVzLmxlbmd0aDsgaSsrKSB7XG5cdFx0XHR2YXIgaXRlbSA9IG1vZHVsZXNbaV07XG5cdFx0XHQvLyBza2lwIGFscmVhZHkgaW1wb3J0ZWQgbW9kdWxlXG5cdFx0XHQvLyB0aGlzIGltcGxlbWVudGF0aW9uIGlzIG5vdCAxMDAlIHBlcmZlY3QgZm9yIHdlaXJkIG1lZGlhIHF1ZXJ5IGNvbWJpbmF0aW9uc1xuXHRcdFx0Ly8gIHdoZW4gYSBtb2R1bGUgaXMgaW1wb3J0ZWQgbXVsdGlwbGUgdGltZXMgd2l0aCBkaWZmZXJlbnQgbWVkaWEgcXVlcmllcy5cblx0XHRcdC8vICBJIGhvcGUgdGhpcyB3aWxsIG5ldmVyIG9jY3VyIChIZXkgdGhpcyB3YXkgd2UgaGF2ZSBzbWFsbGVyIGJ1bmRsZXMpXG5cdFx0XHRpZih0eXBlb2YgaXRlbVswXSAhPT0gXCJudW1iZXJcIiB8fCAhYWxyZWFkeUltcG9ydGVkTW9kdWxlc1tpdGVtWzBdXSkge1xuXHRcdFx0XHRpZihtZWRpYVF1ZXJ5ICYmICFpdGVtWzJdKSB7XG5cdFx0XHRcdFx0aXRlbVsyXSA9IG1lZGlhUXVlcnk7XG5cdFx0XHRcdH0gZWxzZSBpZihtZWRpYVF1ZXJ5KSB7XG5cdFx0XHRcdFx0aXRlbVsyXSA9IFwiKFwiICsgaXRlbVsyXSArIFwiKSBhbmQgKFwiICsgbWVkaWFRdWVyeSArIFwiKVwiO1xuXHRcdFx0XHR9XG5cdFx0XHRcdGxpc3QucHVzaChpdGVtKTtcblx0XHRcdH1cblx0XHR9XG5cdH07XG5cdHJldHVybiBsaXN0O1xufTtcblxuZnVuY3Rpb24gY3NzV2l0aE1hcHBpbmdUb1N0cmluZyhpdGVtLCB1c2VTb3VyY2VNYXApIHtcblx0dmFyIGNvbnRlbnQgPSBpdGVtWzFdIHx8ICcnO1xuXHR2YXIgY3NzTWFwcGluZyA9IGl0ZW1bM107XG5cdGlmICghY3NzTWFwcGluZykge1xuXHRcdHJldHVybiBjb250ZW50O1xuXHR9XG5cblx0aWYgKHVzZVNvdXJjZU1hcCAmJiB0eXBlb2YgYnRvYSA9PT0gJ2Z1bmN0aW9uJykge1xuXHRcdHZhciBzb3VyY2VNYXBwaW5nID0gdG9Db21tZW50KGNzc01hcHBpbmcpO1xuXHRcdHZhciBzb3VyY2VVUkxzID0gY3NzTWFwcGluZy5zb3VyY2VzLm1hcChmdW5jdGlvbiAoc291cmNlKSB7XG5cdFx0XHRyZXR1cm4gJy8qIyBzb3VyY2VVUkw9JyArIGNzc01hcHBpbmcuc291cmNlUm9vdCArIHNvdXJjZSArICcgKi8nXG5cdFx0fSk7XG5cblx0XHRyZXR1cm4gW2NvbnRlbnRdLmNvbmNhdChzb3VyY2VVUkxzKS5jb25jYXQoW3NvdXJjZU1hcHBpbmddKS5qb2luKCdcXG4nKTtcblx0fVxuXG5cdHJldHVybiBbY29udGVudF0uam9pbignXFxuJyk7XG59XG5cbi8vIEFkYXB0ZWQgZnJvbSBjb252ZXJ0LXNvdXJjZS1tYXAgKE1JVClcbmZ1bmN0aW9uIHRvQ29tbWVudChzb3VyY2VNYXApIHtcblx0Ly8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXVuZGVmXG5cdHZhciBiYXNlNjQgPSBidG9hKHVuZXNjYXBlKGVuY29kZVVSSUNvbXBvbmVudChKU09OLnN0cmluZ2lmeShzb3VyY2VNYXApKSkpO1xuXHR2YXIgZGF0YSA9ICdzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCwnICsgYmFzZTY0O1xuXG5cdHJldHVybiAnLyojICcgKyBkYXRhICsgJyAqLyc7XG59XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/css-loader/lib/css-base.js\n");

/***/ }),

/***/ "./node_modules/css-loader/lib/url/escape.js":
/*!***************************************************!*\
  !*** ./node_modules/css-loader/lib/url/escape.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function escape(url) {\n    if (typeof url !== 'string') {\n        return url\n    }\n    // If url is already wrapped in quotes, remove them\n    if (/^['\"].*['\"]$/.test(url)) {\n        url = url.slice(1, -1);\n    }\n    // Should url be wrapped?\n    // See https://drafts.csswg.org/css-values-3/#urls\n    if (/[\"'() \\t\\n]/.test(url)) {\n        return '\"' + url.replace(/\"/g, '\\\\\"').replace(/\\n/g, '\\\\n') + '\"'\n    }\n\n    return url\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9saWIvdXJsL2VzY2FwZS5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2xpYi91cmwvZXNjYXBlLmpzP2IwNDEiXSwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBlc2NhcGUodXJsKSB7XG4gICAgaWYgKHR5cGVvZiB1cmwgIT09ICdzdHJpbmcnKSB7XG4gICAgICAgIHJldHVybiB1cmxcbiAgICB9XG4gICAgLy8gSWYgdXJsIGlzIGFscmVhZHkgd3JhcHBlZCBpbiBxdW90ZXMsIHJlbW92ZSB0aGVtXG4gICAgaWYgKC9eWydcIl0uKlsnXCJdJC8udGVzdCh1cmwpKSB7XG4gICAgICAgIHVybCA9IHVybC5zbGljZSgxLCAtMSk7XG4gICAgfVxuICAgIC8vIFNob3VsZCB1cmwgYmUgd3JhcHBlZD9cbiAgICAvLyBTZWUgaHR0cHM6Ly9kcmFmdHMuY3Nzd2cub3JnL2Nzcy12YWx1ZXMtMy8jdXJsc1xuICAgIGlmICgvW1wiJygpIFxcdFxcbl0vLnRlc3QodXJsKSkge1xuICAgICAgICByZXR1cm4gJ1wiJyArIHVybC5yZXBsYWNlKC9cIi9nLCAnXFxcXFwiJykucmVwbGFjZSgvXFxuL2csICdcXFxcbicpICsgJ1wiJ1xuICAgIH1cblxuICAgIHJldHVybiB1cmxcbn1cbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/css-loader/lib/url/escape.js\n");

/***/ }),

/***/ "./node_modules/domtastic/src/array.js":
/*!*********************************************!*\
  !*** ./node_modules/domtastic/src/array.js ***!
  \*********************************************/
/*! exports provided: every, filter, forEach, each, indexOf, map, pop, push, reduce, reduceRight, reverse, shift, some, unshift */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"every\", function() { return every; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"filter\", function() { return filter; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"forEach\", function() { return forEach; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"each\", function() { return each; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"indexOf\", function() { return indexOf; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"map\", function() { return map; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"pop\", function() { return pop; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"push\", function() { return push; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"reduce\", function() { return reduce; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"reduceRight\", function() { return reduceRight; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"reverse\", function() { return reverse; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"shift\", function() { return shift; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"some\", function() { return some; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"unshift\", function() { return unshift; });\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util */ \"./node_modules/domtastic/src/util.js\");\n/* harmony import */ var _selector_index__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./selector/index */ \"./node_modules/domtastic/src/selector/index.js\");\n/**\n * @module Array\n */\n\n\n\n\nconst ArrayProto = Array.prototype;\n\n/**\n * Checks if the given callback returns a true(-ish) value for each element in the collection.\n *\n * @param {Function} callback Function to execute for each element, invoked with `element` as argument.\n * @param {Object} [thisArg] Value to use as `this` when executing `callback`.\n * @return {Boolean} Whether each element passed the callback check.\n * @example\n *     // Test whether every element in the collection has the \"active\" attribute\n *     $('.items').every(function(element) {\n *         return element.hasAttribute('active')\n *     });\n */\n\nconst every = ArrayProto.every;\n\n/**\n * Filter the collection by selector or function, and return a new collection with the result.\n *\n * @param {String|Function} selector Selector or function to filter the collection.\n * @param {Object} [thisArg] Value to use as `this` when executing `callback`.\n * @return {Object} A new wrapped collection\n * @chainable\n * @example\n *     $('.items').filter('.active');\n * @example\n *     $('.items').filter(function(element) {\n *         return element.hasAttribute('active')\n *     });\n */\n\nconst filter = function(selector, thisArg) {\n  const callback = typeof selector === 'function' ? selector : element => Object(_selector_index__WEBPACK_IMPORTED_MODULE_1__[\"matches\"])(element, selector);\n  return Object(_selector_index__WEBPACK_IMPORTED_MODULE_1__[\"$\"])(ArrayProto.filter.call(this, callback, thisArg));\n};\n\n/**\n * Execute a function for each element in the collection.\n *\n * @param {Function} callback Function to execute for each element, invoked with `element` as argument.\n * @param {Object} [thisArg] Value to use as `this` when executing `callback`.\n * @return {Object} The wrapped collection\n * @chainable\n * @example\n *     $('.items').forEach(function(element) {\n *         element.style.color = 'evergreen';\n *     );\n */\n\nconst forEach = function(callback, thisArg) {\n  return Object(_util__WEBPACK_IMPORTED_MODULE_0__[\"each\"])(this, callback, thisArg);\n};\n\nconst each = forEach;\n\n/**\n * Returns the index of an element in the collection.\n *\n * @param {Node} element\n * @return {Number} The zero-based index, -1 if not found.\n * @example\n *     $('.items').indexOf(element); // 2\n */\n\nconst indexOf = ArrayProto.indexOf;\n\n/**\n * Create a new collection by executing the callback for each element in the collection.\n *\n * @param {Function} callback Function to execute for each element, invoked with `element` as argument.\n * @param {Object} [thisArg] Value to use as `this` when executing `callback`.\n * @return {Array} Collection with the return value of the executed callback for each element.\n * @example\n *     // Create a new array with the attribute value of each element:\n *     $('.items').map(function(element) {\n *         return element.getAttribute('name')\n */\n\nconst map = ArrayProto.map;\n\n/**\n * Removes the last element from the collection, and returns that element.\n *\n * @return {Object} The last element from the collection.\n * @example\n *     var lastElement = $('.items').pop();\n */\n\nconst pop = ArrayProto.pop;\n\n/**\n * Adds one or more elements to the end of the collection, and returns the new length of the collection.\n *\n * @param {Object} element Element(s) to add to the collection\n * @return {Number} The new length of the collection\n * @example\n *     $('.items').push(element);\n */\n\nconst push = ArrayProto.push;\n\n/**\n * Apply a function against each element in the collection, and this accumulator function has to reduce it\n * to a single value.\n *\n * @param {Function} callback Function to execute on each value in the array, taking four arguments (see example).\n * @param {Mixed} initialValue Object to use as the first argument to the first call of the callback.\n * @example\n *     // Calculate the combined height of elements:\n *     $('.items').reduce(function(previousValue, element, index, collection) {\n *         return previousValue + element.clientHeight;\n *     }, 0);\n */\n\nconst reduce = ArrayProto.reduce;\n\n/**\n * Apply a function against each element in the collection (from right-to-left), and this accumulator function has\n * to reduce it to a single value.\n *\n * @param {Function} callback Function to execute on each value in the array, taking four arguments (see example).\n * @param {Mixed} initialValue Object to use as the first argument to the first call of the callback.\n * @example\n *     // Concatenate the text of elements in reversed order:\n *     $('.items').reduceRight(function(previousValue, element, index, collection) {\n *         return previousValue + element.textContent;\n *     }, '');\n */\n\nconst reduceRight = ArrayProto.reduceRight;\n\n/**\n * Reverses an array in place. The first array element becomes the last and the last becomes the first.\n *\n * @return {Object} The wrapped collection, reversed\n * @chainable\n * @example\n *     $('.items').reverse();\n */\n\nconst reverse = function() {\n  return Object(_selector_index__WEBPACK_IMPORTED_MODULE_1__[\"$\"])(Object(_util__WEBPACK_IMPORTED_MODULE_0__[\"toArray\"])(this).reverse());\n};\n\n/**\n * Removes the first element from the collection, and returns that element.\n *\n * @return {Object} The first element from the collection.\n * @example\n *     var firstElement = $('.items').shift();\n */\n\nconst shift = ArrayProto.shift;\n\n/**\n * Checks if the given callback returns a true(-ish) value for any of the elements in the collection.\n *\n * @param {Function} callback Function to execute for each element, invoked with `element` as argument.\n * @return {Boolean} Whether any element passed the callback check.\n * @example\n *     $('.items').some(function(element) {\n *         return element.hasAttribute('active')\n *     }); // true/false\n */\n\nconst some = ArrayProto.some;\n\n/**\n * Adds one or more elements to the beginning of the collection, and returns the new length of the collection.\n *\n * @param {Object} element Element(s) to add to the collection\n * @return {Number} The new length of the collection\n * @example\n *     $('.items').unshift(element);\n */\n\nconst unshift = ArrayProto.unshift;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZG9tdGFzdGljL3NyYy9hcnJheS5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kb210YXN0aWMvc3JjL2FycmF5LmpzPzlkNzciXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbW9kdWxlIEFycmF5XG4gKi9cblxuaW1wb3J0IHsgZWFjaCBhcyBfZWFjaCwgdG9BcnJheSB9IGZyb20gJy4vdXRpbCc7XG5pbXBvcnQgeyAkLCBtYXRjaGVzIH0gZnJvbSAnLi9zZWxlY3Rvci9pbmRleCc7XG5cbmNvbnN0IEFycmF5UHJvdG8gPSBBcnJheS5wcm90b3R5cGU7XG5cbi8qKlxuICogQ2hlY2tzIGlmIHRoZSBnaXZlbiBjYWxsYmFjayByZXR1cm5zIGEgdHJ1ZSgtaXNoKSB2YWx1ZSBmb3IgZWFjaCBlbGVtZW50IGluIHRoZSBjb2xsZWN0aW9uLlxuICpcbiAqIEBwYXJhbSB7RnVuY3Rpb259IGNhbGxiYWNrIEZ1bmN0aW9uIHRvIGV4ZWN1dGUgZm9yIGVhY2ggZWxlbWVudCwgaW52b2tlZCB3aXRoIGBlbGVtZW50YCBhcyBhcmd1bWVudC5cbiAqIEBwYXJhbSB7T2JqZWN0fSBbdGhpc0FyZ10gVmFsdWUgdG8gdXNlIGFzIGB0aGlzYCB3aGVuIGV4ZWN1dGluZyBgY2FsbGJhY2tgLlxuICogQHJldHVybiB7Qm9vbGVhbn0gV2hldGhlciBlYWNoIGVsZW1lbnQgcGFzc2VkIHRoZSBjYWxsYmFjayBjaGVjay5cbiAqIEBleGFtcGxlXG4gKiAgICAgLy8gVGVzdCB3aGV0aGVyIGV2ZXJ5IGVsZW1lbnQgaW4gdGhlIGNvbGxlY3Rpb24gaGFzIHRoZSBcImFjdGl2ZVwiIGF0dHJpYnV0ZVxuICogICAgICQoJy5pdGVtcycpLmV2ZXJ5KGZ1bmN0aW9uKGVsZW1lbnQpIHtcbiAqICAgICAgICAgcmV0dXJuIGVsZW1lbnQuaGFzQXR0cmlidXRlKCdhY3RpdmUnKVxuICogICAgIH0pO1xuICovXG5cbmV4cG9ydCBjb25zdCBldmVyeSA9IEFycmF5UHJvdG8uZXZlcnk7XG5cbi8qKlxuICogRmlsdGVyIHRoZSBjb2xsZWN0aW9uIGJ5IHNlbGVjdG9yIG9yIGZ1bmN0aW9uLCBhbmQgcmV0dXJuIGEgbmV3IGNvbGxlY3Rpb24gd2l0aCB0aGUgcmVzdWx0LlxuICpcbiAqIEBwYXJhbSB7U3RyaW5nfEZ1bmN0aW9ufSBzZWxlY3RvciBTZWxlY3RvciBvciBmdW5jdGlvbiB0byBmaWx0ZXIgdGhlIGNvbGxlY3Rpb24uXG4gKiBAcGFyYW0ge09iamVjdH0gW3RoaXNBcmddIFZhbHVlIHRvIHVzZSBhcyBgdGhpc2Agd2hlbiBleGVjdXRpbmcgYGNhbGxiYWNrYC5cbiAqIEByZXR1cm4ge09iamVjdH0gQSBuZXcgd3JhcHBlZCBjb2xsZWN0aW9uXG4gKiBAY2hhaW5hYmxlXG4gKiBAZXhhbXBsZVxuICogICAgICQoJy5pdGVtcycpLmZpbHRlcignLmFjdGl2ZScpO1xuICogQGV4YW1wbGVcbiAqICAgICAkKCcuaXRlbXMnKS5maWx0ZXIoZnVuY3Rpb24oZWxlbWVudCkge1xuICogICAgICAgICByZXR1cm4gZWxlbWVudC5oYXNBdHRyaWJ1dGUoJ2FjdGl2ZScpXG4gKiAgICAgfSk7XG4gKi9cblxuZXhwb3J0IGNvbnN0IGZpbHRlciA9IGZ1bmN0aW9uKHNlbGVjdG9yLCB0aGlzQXJnKSB7XG4gIGNvbnN0IGNhbGxiYWNrID0gdHlwZW9mIHNlbGVjdG9yID09PSAnZnVuY3Rpb24nID8gc2VsZWN0b3IgOiBlbGVtZW50ID0+IG1hdGNoZXMoZWxlbWVudCwgc2VsZWN0b3IpO1xuICByZXR1cm4gJChBcnJheVByb3RvLmZpbHRlci5jYWxsKHRoaXMsIGNhbGxiYWNrLCB0aGlzQXJnKSk7XG59O1xuXG4vKipcbiAqIEV4ZWN1dGUgYSBmdW5jdGlvbiBmb3IgZWFjaCBlbGVtZW50IGluIHRoZSBjb2xsZWN0aW9uLlxuICpcbiAqIEBwYXJhbSB7RnVuY3Rpb259IGNhbGxiYWNrIEZ1bmN0aW9uIHRvIGV4ZWN1dGUgZm9yIGVhY2ggZWxlbWVudCwgaW52b2tlZCB3aXRoIGBlbGVtZW50YCBhcyBhcmd1bWVudC5cbiAqIEBwYXJhbSB7T2JqZWN0fSBbdGhpc0FyZ10gVmFsdWUgdG8gdXNlIGFzIGB0aGlzYCB3aGVuIGV4ZWN1dGluZyBgY2FsbGJhY2tgLlxuICogQHJldHVybiB7T2JqZWN0fSBUaGUgd3JhcHBlZCBjb2xsZWN0aW9uXG4gKiBAY2hhaW5hYmxlXG4gKiBAZXhhbXBsZVxuICogICAgICQoJy5pdGVtcycpLmZvckVhY2goZnVuY3Rpb24oZWxlbWVudCkge1xuICogICAgICAgICBlbGVtZW50LnN0eWxlLmNvbG9yID0gJ2V2ZXJncmVlbic7XG4gKiAgICAgKTtcbiAqL1xuXG5leHBvcnQgY29uc3QgZm9yRWFjaCA9IGZ1bmN0aW9uKGNhbGxiYWNrLCB0aGlzQXJnKSB7XG4gIHJldHVybiBfZWFjaCh0aGlzLCBjYWxsYmFjaywgdGhpc0FyZyk7XG59O1xuXG5leHBvcnQgY29uc3QgZWFjaCA9IGZvckVhY2g7XG5cbi8qKlxuICogUmV0dXJucyB0aGUgaW5kZXggb2YgYW4gZWxlbWVudCBpbiB0aGUgY29sbGVjdGlvbi5cbiAqXG4gKiBAcGFyYW0ge05vZGV9IGVsZW1lbnRcbiAqIEByZXR1cm4ge051bWJlcn0gVGhlIHplcm8tYmFzZWQgaW5kZXgsIC0xIGlmIG5vdCBmb3VuZC5cbiAqIEBleGFtcGxlXG4gKiAgICAgJCgnLml0ZW1zJykuaW5kZXhPZihlbGVtZW50KTsgLy8gMlxuICovXG5cbmV4cG9ydCBjb25zdCBpbmRleE9mID0gQXJyYXlQcm90by5pbmRleE9mO1xuXG4vKipcbiAqIENyZWF0ZSBhIG5ldyBjb2xsZWN0aW9uIGJ5IGV4ZWN1dGluZyB0aGUgY2FsbGJhY2sgZm9yIGVhY2ggZWxlbWVudCBpbiB0aGUgY29sbGVjdGlvbi5cbiAqXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBjYWxsYmFjayBGdW5jdGlvbiB0byBleGVjdXRlIGZvciBlYWNoIGVsZW1lbnQsIGludm9rZWQgd2l0aCBgZWxlbWVudGAgYXMgYXJndW1lbnQuXG4gKiBAcGFyYW0ge09iamVjdH0gW3RoaXNBcmddIFZhbHVlIHRvIHVzZSBhcyBgdGhpc2Agd2hlbiBleGVjdXRpbmcgYGNhbGxiYWNrYC5cbiAqIEByZXR1cm4ge0FycmF5fSBDb2xsZWN0aW9uIHdpdGggdGhlIHJldHVybiB2YWx1ZSBvZiB0aGUgZXhlY3V0ZWQgY2FsbGJhY2sgZm9yIGVhY2ggZWxlbWVudC5cbiAqIEBleGFtcGxlXG4gKiAgICAgLy8gQ3JlYXRlIGEgbmV3IGFycmF5IHdpdGggdGhlIGF0dHJpYnV0ZSB2YWx1ZSBvZiBlYWNoIGVsZW1lbnQ6XG4gKiAgICAgJCgnLml0ZW1zJykubWFwKGZ1bmN0aW9uKGVsZW1lbnQpIHtcbiAqICAgICAgICAgcmV0dXJuIGVsZW1lbnQuZ2V0QXR0cmlidXRlKCduYW1lJylcbiAqL1xuXG5leHBvcnQgY29uc3QgbWFwID0gQXJyYXlQcm90by5tYXA7XG5cbi8qKlxuICogUmVtb3ZlcyB0aGUgbGFzdCBlbGVtZW50IGZyb20gdGhlIGNvbGxlY3Rpb24sIGFuZCByZXR1cm5zIHRoYXQgZWxlbWVudC5cbiAqXG4gKiBAcmV0dXJuIHtPYmplY3R9IFRoZSBsYXN0IGVsZW1lbnQgZnJvbSB0aGUgY29sbGVjdGlvbi5cbiAqIEBleGFtcGxlXG4gKiAgICAgdmFyIGxhc3RFbGVtZW50ID0gJCgnLml0ZW1zJykucG9wKCk7XG4gKi9cblxuZXhwb3J0IGNvbnN0IHBvcCA9IEFycmF5UHJvdG8ucG9wO1xuXG4vKipcbiAqIEFkZHMgb25lIG9yIG1vcmUgZWxlbWVudHMgdG8gdGhlIGVuZCBvZiB0aGUgY29sbGVjdGlvbiwgYW5kIHJldHVybnMgdGhlIG5ldyBsZW5ndGggb2YgdGhlIGNvbGxlY3Rpb24uXG4gKlxuICogQHBhcmFtIHtPYmplY3R9IGVsZW1lbnQgRWxlbWVudChzKSB0byBhZGQgdG8gdGhlIGNvbGxlY3Rpb25cbiAqIEByZXR1cm4ge051bWJlcn0gVGhlIG5ldyBsZW5ndGggb2YgdGhlIGNvbGxlY3Rpb25cbiAqIEBleGFtcGxlXG4gKiAgICAgJCgnLml0ZW1zJykucHVzaChlbGVtZW50KTtcbiAqL1xuXG5leHBvcnQgY29uc3QgcHVzaCA9IEFycmF5UHJvdG8ucHVzaDtcblxuLyoqXG4gKiBBcHBseSBhIGZ1bmN0aW9uIGFnYWluc3QgZWFjaCBlbGVtZW50IGluIHRoZSBjb2xsZWN0aW9uLCBhbmQgdGhpcyBhY2N1bXVsYXRvciBmdW5jdGlvbiBoYXMgdG8gcmVkdWNlIGl0XG4gKiB0byBhIHNpbmdsZSB2YWx1ZS5cbiAqXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBjYWxsYmFjayBGdW5jdGlvbiB0byBleGVjdXRlIG9uIGVhY2ggdmFsdWUgaW4gdGhlIGFycmF5LCB0YWtpbmcgZm91ciBhcmd1bWVudHMgKHNlZSBleGFtcGxlKS5cbiAqIEBwYXJhbSB7TWl4ZWR9IGluaXRpYWxWYWx1ZSBPYmplY3QgdG8gdXNlIGFzIHRoZSBmaXJzdCBhcmd1bWVudCB0byB0aGUgZmlyc3QgY2FsbCBvZiB0aGUgY2FsbGJhY2suXG4gKiBAZXhhbXBsZVxuICogICAgIC8vIENhbGN1bGF0ZSB0aGUgY29tYmluZWQgaGVpZ2h0IG9mIGVsZW1lbnRzOlxuICogICAgICQoJy5pdGVtcycpLnJlZHVjZShmdW5jdGlvbihwcmV2aW91c1ZhbHVlLCBlbGVtZW50LCBpbmRleCwgY29sbGVjdGlvbikge1xuICogICAgICAgICByZXR1cm4gcHJldmlvdXNWYWx1ZSArIGVsZW1lbnQuY2xpZW50SGVpZ2h0O1xuICogICAgIH0sIDApO1xuICovXG5cbmV4cG9ydCBjb25zdCByZWR1Y2UgPSBBcnJheVByb3RvLnJlZHVjZTtcblxuLyoqXG4gKiBBcHBseSBhIGZ1bmN0aW9uIGFnYWluc3QgZWFjaCBlbGVtZW50IGluIHRoZSBjb2xsZWN0aW9uIChmcm9tIHJpZ2h0LXRvLWxlZnQpLCBhbmQgdGhpcyBhY2N1bXVsYXRvciBmdW5jdGlvbiBoYXNcbiAqIHRvIHJlZHVjZSBpdCB0byBhIHNpbmdsZSB2YWx1ZS5cbiAqXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBjYWxsYmFjayBGdW5jdGlvbiB0byBleGVjdXRlIG9uIGVhY2ggdmFsdWUgaW4gdGhlIGFycmF5LCB0YWtpbmcgZm91ciBhcmd1bWVudHMgKHNlZSBleGFtcGxlKS5cbiAqIEBwYXJhbSB7TWl4ZWR9IGluaXRpYWxWYWx1ZSBPYmplY3QgdG8gdXNlIGFzIHRoZSBmaXJzdCBhcmd1bWVudCB0byB0aGUgZmlyc3QgY2FsbCBvZiB0aGUgY2FsbGJhY2suXG4gKiBAZXhhbXBsZVxuICogICAgIC8vIENvbmNhdGVuYXRlIHRoZSB0ZXh0IG9mIGVsZW1lbnRzIGluIHJldmVyc2VkIG9yZGVyOlxuICogICAgICQoJy5pdGVtcycpLnJlZHVjZVJpZ2h0KGZ1bmN0aW9uKHByZXZpb3VzVmFsdWUsIGVsZW1lbnQsIGluZGV4LCBjb2xsZWN0aW9uKSB7XG4gKiAgICAgICAgIHJldHVybiBwcmV2aW91c1ZhbHVlICsgZWxlbWVudC50ZXh0Q29udGVudDtcbiAqICAgICB9LCAnJyk7XG4gKi9cblxuZXhwb3J0IGNvbnN0IHJlZHVjZVJpZ2h0ID0gQXJyYXlQcm90by5yZWR1Y2VSaWdodDtcblxuLyoqXG4gKiBSZXZlcnNlcyBhbiBhcnJheSBpbiBwbGFjZS4gVGhlIGZpcnN0IGFycmF5IGVsZW1lbnQgYmVjb21lcyB0aGUgbGFzdCBhbmQgdGhlIGxhc3QgYmVjb21lcyB0aGUgZmlyc3QuXG4gKlxuICogQHJldHVybiB7T2JqZWN0fSBUaGUgd3JhcHBlZCBjb2xsZWN0aW9uLCByZXZlcnNlZFxuICogQGNoYWluYWJsZVxuICogQGV4YW1wbGVcbiAqICAgICAkKCcuaXRlbXMnKS5yZXZlcnNlKCk7XG4gKi9cblxuZXhwb3J0IGNvbnN0IHJldmVyc2UgPSBmdW5jdGlvbigpIHtcbiAgcmV0dXJuICQodG9BcnJheSh0aGlzKS5yZXZlcnNlKCkpO1xufTtcblxuLyoqXG4gKiBSZW1vdmVzIHRoZSBmaXJzdCBlbGVtZW50IGZyb20gdGhlIGNvbGxlY3Rpb24sIGFuZCByZXR1cm5zIHRoYXQgZWxlbWVudC5cbiAqXG4gKiBAcmV0dXJuIHtPYmplY3R9IFRoZSBmaXJzdCBlbGVtZW50IGZyb20gdGhlIGNvbGxlY3Rpb24uXG4gKiBAZXhhbXBsZVxuICogICAgIHZhciBmaXJzdEVsZW1lbnQgPSAkKCcuaXRlbXMnKS5zaGlmdCgpO1xuICovXG5cbmV4cG9ydCBjb25zdCBzaGlmdCA9IEFycmF5UHJvdG8uc2hpZnQ7XG5cbi8qKlxuICogQ2hlY2tzIGlmIHRoZSBnaXZlbiBjYWxsYmFjayByZXR1cm5zIGEgdHJ1ZSgtaXNoKSB2YWx1ZSBmb3IgYW55IG9mIHRoZSBlbGVtZW50cyBpbiB0aGUgY29sbGVjdGlvbi5cbiAqXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBjYWxsYmFjayBGdW5jdGlvbiB0byBleGVjdXRlIGZvciBlYWNoIGVsZW1lbnQsIGludm9rZWQgd2l0aCBgZWxlbWVudGAgYXMgYXJndW1lbnQuXG4gKiBAcmV0dXJuIHtCb29sZWFufSBXaGV0aGVyIGFueSBlbGVtZW50IHBhc3NlZCB0aGUgY2FsbGJhY2sgY2hlY2suXG4gKiBAZXhhbXBsZVxuICogICAgICQoJy5pdGVtcycpLnNvbWUoZnVuY3Rpb24oZWxlbWVudCkge1xuICogICAgICAgICByZXR1cm4gZWxlbWVudC5oYXNBdHRyaWJ1dGUoJ2FjdGl2ZScpXG4gKiAgICAgfSk7IC8vIHRydWUvZmFsc2VcbiAqL1xuXG5leHBvcnQgY29uc3Qgc29tZSA9IEFycmF5UHJvdG8uc29tZTtcblxuLyoqXG4gKiBBZGRzIG9uZSBvciBtb3JlIGVsZW1lbnRzIHRvIHRoZSBiZWdpbm5pbmcgb2YgdGhlIGNvbGxlY3Rpb24sIGFuZCByZXR1cm5zIHRoZSBuZXcgbGVuZ3RoIG9mIHRoZSBjb2xsZWN0aW9uLlxuICpcbiAqIEBwYXJhbSB7T2JqZWN0fSBlbGVtZW50IEVsZW1lbnQocykgdG8gYWRkIHRvIHRoZSBjb2xsZWN0aW9uXG4gKiBAcmV0dXJuIHtOdW1iZXJ9IFRoZSBuZXcgbGVuZ3RoIG9mIHRoZSBjb2xsZWN0aW9uXG4gKiBAZXhhbXBsZVxuICogICAgICQoJy5pdGVtcycpLnVuc2hpZnQoZWxlbWVudCk7XG4gKi9cblxuZXhwb3J0IGNvbnN0IHVuc2hpZnQgPSBBcnJheVByb3RvLnVuc2hpZnQ7XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/domtastic/src/array.js\n");

/***/ }),

/***/ "./node_modules/domtastic/src/baseClass.js":
/*!*************************************************!*\
  !*** ./node_modules/domtastic/src/baseClass.js ***!
  \*************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _selector_index__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./selector/index */ \"./node_modules/domtastic/src/selector/index.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./util */ \"./node_modules/domtastic/src/util.js\");\n/**\n * @module BaseClass\n */\n\n\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (function(api) {\n\n  /**\n   * Provide subclass for classes or components to extend from.\n   * The opposite and successor of plugins (no need to extend `$.fn` anymore, complete control).\n   *\n   * @return {Class} The class to extend from, including all `$.fn` methods.\n   * @example\n   *     import { BaseClass } from  'domtastic';\n   *\n   *     class MyComponent extends BaseClass {\n   *         doSomething() {\n   *             return this.addClass('.foo');\n   *         }\n   *     }\n   *\n   *     let component = new MyComponent('body');\n   *     component.doSomething();\n   *\n   * @example\n   *     import $ from  'domtastic';\n   *\n   *     class MyComponent extends $.BaseClass {\n   *         progress(value) {\n   *             return this.attr('data-progress', value);\n   *         }\n   *     }\n   *\n   *     let component = new MyComponent(document.body);\n   *     component.progress('ive').append('<p>enhancement</p>');\n   */\n\n  class BaseClass {\n    constructor() {\n      _selector_index__WEBPACK_IMPORTED_MODULE_0__[\"DOMtastic\"].call(this, Object(_selector_index__WEBPACK_IMPORTED_MODULE_0__[\"$\"])(...arguments));\n    }\n  }\n  Object(_util__WEBPACK_IMPORTED_MODULE_1__[\"extend\"])(BaseClass.prototype, api);\n  return BaseClass;\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZG9tdGFzdGljL3NyYy9iYXNlQ2xhc3MuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZG9tdGFzdGljL3NyYy9iYXNlQ2xhc3MuanM/ZDRjNSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBtb2R1bGUgQmFzZUNsYXNzXG4gKi9cblxuaW1wb3J0IHsgJCBhcyBzZWxlY3RvciwgRE9NdGFzdGljIH0gZnJvbSAnLi9zZWxlY3Rvci9pbmRleCc7XG5pbXBvcnQgeyBleHRlbmQgfSBmcm9tICcuL3V0aWwnO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbihhcGkpIHtcblxuICAvKipcbiAgICogUHJvdmlkZSBzdWJjbGFzcyBmb3IgY2xhc3NlcyBvciBjb21wb25lbnRzIHRvIGV4dGVuZCBmcm9tLlxuICAgKiBUaGUgb3Bwb3NpdGUgYW5kIHN1Y2Nlc3NvciBvZiBwbHVnaW5zIChubyBuZWVkIHRvIGV4dGVuZCBgJC5mbmAgYW55bW9yZSwgY29tcGxldGUgY29udHJvbCkuXG4gICAqXG4gICAqIEByZXR1cm4ge0NsYXNzfSBUaGUgY2xhc3MgdG8gZXh0ZW5kIGZyb20sIGluY2x1ZGluZyBhbGwgYCQuZm5gIG1ldGhvZHMuXG4gICAqIEBleGFtcGxlXG4gICAqICAgICBpbXBvcnQgeyBCYXNlQ2xhc3MgfSBmcm9tICAnZG9tdGFzdGljJztcbiAgICpcbiAgICogICAgIGNsYXNzIE15Q29tcG9uZW50IGV4dGVuZHMgQmFzZUNsYXNzIHtcbiAgICogICAgICAgICBkb1NvbWV0aGluZygpIHtcbiAgICogICAgICAgICAgICAgcmV0dXJuIHRoaXMuYWRkQ2xhc3MoJy5mb28nKTtcbiAgICogICAgICAgICB9XG4gICAqICAgICB9XG4gICAqXG4gICAqICAgICBsZXQgY29tcG9uZW50ID0gbmV3IE15Q29tcG9uZW50KCdib2R5Jyk7XG4gICAqICAgICBjb21wb25lbnQuZG9Tb21ldGhpbmcoKTtcbiAgICpcbiAgICogQGV4YW1wbGVcbiAgICogICAgIGltcG9ydCAkIGZyb20gICdkb210YXN0aWMnO1xuICAgKlxuICAgKiAgICAgY2xhc3MgTXlDb21wb25lbnQgZXh0ZW5kcyAkLkJhc2VDbGFzcyB7XG4gICAqICAgICAgICAgcHJvZ3Jlc3ModmFsdWUpIHtcbiAgICogICAgICAgICAgICAgcmV0dXJuIHRoaXMuYXR0cignZGF0YS1wcm9ncmVzcycsIHZhbHVlKTtcbiAgICogICAgICAgICB9XG4gICAqICAgICB9XG4gICAqXG4gICAqICAgICBsZXQgY29tcG9uZW50ID0gbmV3IE15Q29tcG9uZW50KGRvY3VtZW50LmJvZHkpO1xuICAgKiAgICAgY29tcG9uZW50LnByb2dyZXNzKCdpdmUnKS5hcHBlbmQoJzxwPmVuaGFuY2VtZW50PC9wPicpO1xuICAgKi9cblxuICBjbGFzcyBCYXNlQ2xhc3Mge1xuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgRE9NdGFzdGljLmNhbGwodGhpcywgc2VsZWN0b3IoLi4uYXJndW1lbnRzKSk7XG4gICAgfVxuICB9XG4gIGV4dGVuZChCYXNlQ2xhc3MucHJvdG90eXBlLCBhcGkpO1xuICByZXR1cm4gQmFzZUNsYXNzO1xufVxuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/domtastic/src/baseClass.js\n");

/***/ }),

/***/ "./node_modules/domtastic/src/css.js":
/*!*******************************************!*\
  !*** ./node_modules/domtastic/src/css.js ***!
  \*******************************************/
/*! exports provided: css */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"css\", function() { return css; });\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util */ \"./node_modules/domtastic/src/util.js\");\n/**\n * @module CSS\n */\n\n\n\nconst isNumeric = value => !isNaN(parseFloat(value)) && isFinite(value);\n\nconst camelize = value => value.replace(/-([\\da-z])/gi, (matches, letter) => letter.toUpperCase());\n\nconst dasherize = value => value.replace(/([a-z\\d])([A-Z])/g, '$1-$2').toLowerCase();\n\n/**\n * Get the value of a style property for the first element, or set one or more style properties for each element in the collection.\n *\n * @param {String|Object} key The name of the style property to get or set. Or an object containing key-value pairs to set as style properties.\n * @param {String} [value] The value of the style property to set.\n * @return {Object} The wrapped collection\n * @chainable\n * @example\n *     $('.item').css('padding-left'); // get\n *     $('.item').css('color', '#f00'); // set\n *     $('.item').css({'border-width': '1px', display: 'inline-block'}); // set multiple\n */\n\nconst css = function(key, value) {\n\n  let styleProps, prop, val;\n\n  if(typeof key === 'string') {\n    key = camelize(key);\n\n    if(typeof value === 'undefined') {\n      let element = this.nodeType ? this : this[0];\n      if(element) {\n        val = element.style[key];\n        return isNumeric(val) ? parseFloat(val) : val;\n      }\n      return undefined;\n    }\n\n    styleProps = {};\n    styleProps[key] = value;\n  } else {\n    styleProps = key;\n    for(prop in styleProps) {\n      val = styleProps[prop];\n      delete styleProps[prop];\n      styleProps[camelize(prop)] = val;\n    }\n  }\n\n  Object(_util__WEBPACK_IMPORTED_MODULE_0__[\"each\"])(this, element => {\n    for(prop in styleProps) {\n      if(styleProps[prop] || styleProps[prop] === 0) {\n        element.style[prop] = styleProps[prop];\n      } else {\n        element.style.removeProperty(dasherize(prop));\n      }\n    }\n  });\n\n  return this;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZG9tdGFzdGljL3NyYy9jc3MuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZG9tdGFzdGljL3NyYy9jc3MuanM/OWQxYSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBtb2R1bGUgQ1NTXG4gKi9cblxuaW1wb3J0IHsgZWFjaCB9IGZyb20gJy4vdXRpbCc7XG5cbmNvbnN0IGlzTnVtZXJpYyA9IHZhbHVlID0+ICFpc05hTihwYXJzZUZsb2F0KHZhbHVlKSkgJiYgaXNGaW5pdGUodmFsdWUpO1xuXG5jb25zdCBjYW1lbGl6ZSA9IHZhbHVlID0+IHZhbHVlLnJlcGxhY2UoLy0oW1xcZGEtel0pL2dpLCAobWF0Y2hlcywgbGV0dGVyKSA9PiBsZXR0ZXIudG9VcHBlckNhc2UoKSk7XG5cbmNvbnN0IGRhc2hlcml6ZSA9IHZhbHVlID0+IHZhbHVlLnJlcGxhY2UoLyhbYS16XFxkXSkoW0EtWl0pL2csICckMS0kMicpLnRvTG93ZXJDYXNlKCk7XG5cbi8qKlxuICogR2V0IHRoZSB2YWx1ZSBvZiBhIHN0eWxlIHByb3BlcnR5IGZvciB0aGUgZmlyc3QgZWxlbWVudCwgb3Igc2V0IG9uZSBvciBtb3JlIHN0eWxlIHByb3BlcnRpZXMgZm9yIGVhY2ggZWxlbWVudCBpbiB0aGUgY29sbGVjdGlvbi5cbiAqXG4gKiBAcGFyYW0ge1N0cmluZ3xPYmplY3R9IGtleSBUaGUgbmFtZSBvZiB0aGUgc3R5bGUgcHJvcGVydHkgdG8gZ2V0IG9yIHNldC4gT3IgYW4gb2JqZWN0IGNvbnRhaW5pbmcga2V5LXZhbHVlIHBhaXJzIHRvIHNldCBhcyBzdHlsZSBwcm9wZXJ0aWVzLlxuICogQHBhcmFtIHtTdHJpbmd9IFt2YWx1ZV0gVGhlIHZhbHVlIG9mIHRoZSBzdHlsZSBwcm9wZXJ0eSB0byBzZXQuXG4gKiBAcmV0dXJuIHtPYmplY3R9IFRoZSB3cmFwcGVkIGNvbGxlY3Rpb25cbiAqIEBjaGFpbmFibGVcbiAqIEBleGFtcGxlXG4gKiAgICAgJCgnLml0ZW0nKS5jc3MoJ3BhZGRpbmctbGVmdCcpOyAvLyBnZXRcbiAqICAgICAkKCcuaXRlbScpLmNzcygnY29sb3InLCAnI2YwMCcpOyAvLyBzZXRcbiAqICAgICAkKCcuaXRlbScpLmNzcyh7J2JvcmRlci13aWR0aCc6ICcxcHgnLCBkaXNwbGF5OiAnaW5saW5lLWJsb2NrJ30pOyAvLyBzZXQgbXVsdGlwbGVcbiAqL1xuXG5leHBvcnQgY29uc3QgY3NzID0gZnVuY3Rpb24oa2V5LCB2YWx1ZSkge1xuXG4gIGxldCBzdHlsZVByb3BzLCBwcm9wLCB2YWw7XG5cbiAgaWYodHlwZW9mIGtleSA9PT0gJ3N0cmluZycpIHtcbiAgICBrZXkgPSBjYW1lbGl6ZShrZXkpO1xuXG4gICAgaWYodHlwZW9mIHZhbHVlID09PSAndW5kZWZpbmVkJykge1xuICAgICAgbGV0IGVsZW1lbnQgPSB0aGlzLm5vZGVUeXBlID8gdGhpcyA6IHRoaXNbMF07XG4gICAgICBpZihlbGVtZW50KSB7XG4gICAgICAgIHZhbCA9IGVsZW1lbnQuc3R5bGVba2V5XTtcbiAgICAgICAgcmV0dXJuIGlzTnVtZXJpYyh2YWwpID8gcGFyc2VGbG9hdCh2YWwpIDogdmFsO1xuICAgICAgfVxuICAgICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgICB9XG5cbiAgICBzdHlsZVByb3BzID0ge307XG4gICAgc3R5bGVQcm9wc1trZXldID0gdmFsdWU7XG4gIH0gZWxzZSB7XG4gICAgc3R5bGVQcm9wcyA9IGtleTtcbiAgICBmb3IocHJvcCBpbiBzdHlsZVByb3BzKSB7XG4gICAgICB2YWwgPSBzdHlsZVByb3BzW3Byb3BdO1xuICAgICAgZGVsZXRlIHN0eWxlUHJvcHNbcHJvcF07XG4gICAgICBzdHlsZVByb3BzW2NhbWVsaXplKHByb3ApXSA9IHZhbDtcbiAgICB9XG4gIH1cblxuICBlYWNoKHRoaXMsIGVsZW1lbnQgPT4ge1xuICAgIGZvcihwcm9wIGluIHN0eWxlUHJvcHMpIHtcbiAgICAgIGlmKHN0eWxlUHJvcHNbcHJvcF0gfHwgc3R5bGVQcm9wc1twcm9wXSA9PT0gMCkge1xuICAgICAgICBlbGVtZW50LnN0eWxlW3Byb3BdID0gc3R5bGVQcm9wc1twcm9wXTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGVsZW1lbnQuc3R5bGUucmVtb3ZlUHJvcGVydHkoZGFzaGVyaXplKHByb3ApKTtcbiAgICAgIH1cbiAgICB9XG4gIH0pO1xuXG4gIHJldHVybiB0aGlzO1xufTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/domtastic/src/css.js\n");

/***/ }),

/***/ "./node_modules/domtastic/src/dom/attr.js":
/*!************************************************!*\
  !*** ./node_modules/domtastic/src/dom/attr.js ***!
  \************************************************/
/*! exports provided: attr, removeAttr */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"attr\", function() { return attr; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"removeAttr\", function() { return removeAttr; });\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util */ \"./node_modules/domtastic/src/util.js\");\n/**\n * @module Attr\n */\n\n\n\n/**\n * Get the value of an attribute for the first element, or set one or more attributes for each element in the collection.\n *\n * @param {String|Object} key The name of the attribute to get or set. Or an object containing key-value pairs to set as attributes.\n * @param {String} [value] The value of the attribute to set.\n * @return {Object} The wrapped collection\n * @chainable\n * @example\n *     $('.item').attr('attrName'); // get\n *     $('.item').attr('attrName', 'attrValue'); // set\n *     $('.item').attr({attr1: 'value1', 'attr-2': 'value2'}); // set multiple\n */\n\nconst attr = function(key, value) {\n\n  if(typeof key === 'string' && typeof value === 'undefined') {\n    const element = this.nodeType ? this : this[0];\n    return element ? element.getAttribute(key) : undefined;\n  }\n\n  return Object(_util__WEBPACK_IMPORTED_MODULE_0__[\"each\"])(this, element => {\n    if(typeof key === 'object') {\n      for(let attr in key) {\n        element.setAttribute(attr, key[attr]);\n      }\n    } else {\n      element.setAttribute(key, value);\n    }\n  });\n};\n\n/**\n * Remove attribute from each element in the collection.\n *\n * @param {String} key Attribute name\n * @return {Object} The wrapped collection\n * @chainable\n * @example\n *     $('.items').removeAttr('attrName');\n */\n\nconst removeAttr = function(key) {\n  return Object(_util__WEBPACK_IMPORTED_MODULE_0__[\"each\"])(this, element => element.removeAttribute(key));\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZG9tdGFzdGljL3NyYy9kb20vYXR0ci5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kb210YXN0aWMvc3JjL2RvbS9hdHRyLmpzPzlkZTIiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbW9kdWxlIEF0dHJcbiAqL1xuXG5pbXBvcnQgeyBlYWNoIH0gZnJvbSAnLi4vdXRpbCc7XG5cbi8qKlxuICogR2V0IHRoZSB2YWx1ZSBvZiBhbiBhdHRyaWJ1dGUgZm9yIHRoZSBmaXJzdCBlbGVtZW50LCBvciBzZXQgb25lIG9yIG1vcmUgYXR0cmlidXRlcyBmb3IgZWFjaCBlbGVtZW50IGluIHRoZSBjb2xsZWN0aW9uLlxuICpcbiAqIEBwYXJhbSB7U3RyaW5nfE9iamVjdH0ga2V5IFRoZSBuYW1lIG9mIHRoZSBhdHRyaWJ1dGUgdG8gZ2V0IG9yIHNldC4gT3IgYW4gb2JqZWN0IGNvbnRhaW5pbmcga2V5LXZhbHVlIHBhaXJzIHRvIHNldCBhcyBhdHRyaWJ1dGVzLlxuICogQHBhcmFtIHtTdHJpbmd9IFt2YWx1ZV0gVGhlIHZhbHVlIG9mIHRoZSBhdHRyaWJ1dGUgdG8gc2V0LlxuICogQHJldHVybiB7T2JqZWN0fSBUaGUgd3JhcHBlZCBjb2xsZWN0aW9uXG4gKiBAY2hhaW5hYmxlXG4gKiBAZXhhbXBsZVxuICogICAgICQoJy5pdGVtJykuYXR0cignYXR0ck5hbWUnKTsgLy8gZ2V0XG4gKiAgICAgJCgnLml0ZW0nKS5hdHRyKCdhdHRyTmFtZScsICdhdHRyVmFsdWUnKTsgLy8gc2V0XG4gKiAgICAgJCgnLml0ZW0nKS5hdHRyKHthdHRyMTogJ3ZhbHVlMScsICdhdHRyLTInOiAndmFsdWUyJ30pOyAvLyBzZXQgbXVsdGlwbGVcbiAqL1xuXG5leHBvcnQgY29uc3QgYXR0ciA9IGZ1bmN0aW9uKGtleSwgdmFsdWUpIHtcblxuICBpZih0eXBlb2Yga2V5ID09PSAnc3RyaW5nJyAmJiB0eXBlb2YgdmFsdWUgPT09ICd1bmRlZmluZWQnKSB7XG4gICAgY29uc3QgZWxlbWVudCA9IHRoaXMubm9kZVR5cGUgPyB0aGlzIDogdGhpc1swXTtcbiAgICByZXR1cm4gZWxlbWVudCA/IGVsZW1lbnQuZ2V0QXR0cmlidXRlKGtleSkgOiB1bmRlZmluZWQ7XG4gIH1cblxuICByZXR1cm4gZWFjaCh0aGlzLCBlbGVtZW50ID0+IHtcbiAgICBpZih0eXBlb2Yga2V5ID09PSAnb2JqZWN0Jykge1xuICAgICAgZm9yKGxldCBhdHRyIGluIGtleSkge1xuICAgICAgICBlbGVtZW50LnNldEF0dHJpYnV0ZShhdHRyLCBrZXlbYXR0cl0pO1xuICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICBlbGVtZW50LnNldEF0dHJpYnV0ZShrZXksIHZhbHVlKTtcbiAgICB9XG4gIH0pO1xufTtcblxuLyoqXG4gKiBSZW1vdmUgYXR0cmlidXRlIGZyb20gZWFjaCBlbGVtZW50IGluIHRoZSBjb2xsZWN0aW9uLlxuICpcbiAqIEBwYXJhbSB7U3RyaW5nfSBrZXkgQXR0cmlidXRlIG5hbWVcbiAqIEByZXR1cm4ge09iamVjdH0gVGhlIHdyYXBwZWQgY29sbGVjdGlvblxuICogQGNoYWluYWJsZVxuICogQGV4YW1wbGVcbiAqICAgICAkKCcuaXRlbXMnKS5yZW1vdmVBdHRyKCdhdHRyTmFtZScpO1xuICovXG5cbmV4cG9ydCBjb25zdCByZW1vdmVBdHRyID0gZnVuY3Rpb24oa2V5KSB7XG4gIHJldHVybiBlYWNoKHRoaXMsIGVsZW1lbnQgPT4gZWxlbWVudC5yZW1vdmVBdHRyaWJ1dGUoa2V5KSk7XG59O1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/domtastic/src/dom/attr.js\n");

/***/ }),

/***/ "./node_modules/domtastic/src/dom/class.js":
/*!*************************************************!*\
  !*** ./node_modules/domtastic/src/dom/class.js ***!
  \*************************************************/
/*! exports provided: addClass, removeClass, toggleClass, hasClass */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"addClass\", function() { return addClass; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"removeClass\", function() { return removeClass; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"toggleClass\", function() { return toggleClass; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"hasClass\", function() { return hasClass; });\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util */ \"./node_modules/domtastic/src/util.js\");\n/**\n * @module Class\n */\n\n\n\n/**\n * Add a class to the element(s)\n *\n * @param {String} value Space-separated class name(s) to add to the element(s).\n * @return {Object} The wrapped collection\n * @chainable\n * @example\n *     $('.item').addClass('bar');\n *     $('.item').addClass('bar foo');\n */\n\nconst addClass = function(value) {\n  if(value && value.length) {\n    Object(_util__WEBPACK_IMPORTED_MODULE_0__[\"each\"])(value.split(' '), _each.bind(this, 'add'));\n  }\n  return this;\n};\n\n/**\n * Remove a class from the element(s)\n *\n * @param {String} value Space-separated class name(s) to remove from the element(s).\n * @return {Object} The wrapped collection\n * @chainable\n * @example\n *     $('.items').removeClass('bar');\n *     $('.items').removeClass('bar foo');\n */\n\nconst removeClass = function(value) {\n  if(value && value.length) {\n    Object(_util__WEBPACK_IMPORTED_MODULE_0__[\"each\"])(value.split(' '), _each.bind(this, 'remove'));\n  }\n  return this;\n};\n\n/**\n * Toggle a class at the element(s)\n *\n * @param {String} value Space-separated class name(s) to toggle at the element(s).\n * @param {Boolean} [state] A Boolean value to determine whether the class should be added or removed.\n * @return {Object} The wrapped collection\n * @chainable\n * @example\n *     $('.item').toggleClass('bar');\n *     $('.item').toggleClass('bar foo');\n *     $('.item').toggleClass('bar', true);\n */\n\nconst toggleClass = function(value, state) {\n  if(value && value.length) {\n    const action = typeof state === 'boolean' ? state ? 'add' : 'remove' : 'toggle';\n    Object(_util__WEBPACK_IMPORTED_MODULE_0__[\"each\"])(value.split(' '), _each.bind(this, action));\n  }\n  return this;\n};\n\n/**\n * Check if the element(s) have a class.\n *\n * @param {String} value Check if the DOM element contains the class name. When applied to multiple elements,\n * returns `true` if _any_ of them contains the class name.\n * @return {Boolean} Whether the element's class attribute contains the class name.\n * @example\n *     $('.item').hasClass('bar');\n */\n\nconst hasClass = function(value) {\n  return (this.nodeType ? [this] : this).some(element => element.classList.contains(value));\n};\n\n/**\n * Specialized iteration, applying `fn` of the classList API to each element.\n *\n * @param {String} fnName\n * @param {String} className\n * @private\n */\n\nconst _each = function(fnName, className) {\n  return Object(_util__WEBPACK_IMPORTED_MODULE_0__[\"each\"])(this, element => element.classList[fnName](className));\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZG9tdGFzdGljL3NyYy9kb20vY2xhc3MuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZG9tdGFzdGljL3NyYy9kb20vY2xhc3MuanM/Yzg4NiJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBtb2R1bGUgQ2xhc3NcbiAqL1xuXG5pbXBvcnQgeyBlYWNoIH0gZnJvbSAnLi4vdXRpbCc7XG5cbi8qKlxuICogQWRkIGEgY2xhc3MgdG8gdGhlIGVsZW1lbnQocylcbiAqXG4gKiBAcGFyYW0ge1N0cmluZ30gdmFsdWUgU3BhY2Utc2VwYXJhdGVkIGNsYXNzIG5hbWUocykgdG8gYWRkIHRvIHRoZSBlbGVtZW50KHMpLlxuICogQHJldHVybiB7T2JqZWN0fSBUaGUgd3JhcHBlZCBjb2xsZWN0aW9uXG4gKiBAY2hhaW5hYmxlXG4gKiBAZXhhbXBsZVxuICogICAgICQoJy5pdGVtJykuYWRkQ2xhc3MoJ2JhcicpO1xuICogICAgICQoJy5pdGVtJykuYWRkQ2xhc3MoJ2JhciBmb28nKTtcbiAqL1xuXG5leHBvcnQgY29uc3QgYWRkQ2xhc3MgPSBmdW5jdGlvbih2YWx1ZSkge1xuICBpZih2YWx1ZSAmJiB2YWx1ZS5sZW5ndGgpIHtcbiAgICBlYWNoKHZhbHVlLnNwbGl0KCcgJyksIF9lYWNoLmJpbmQodGhpcywgJ2FkZCcpKTtcbiAgfVxuICByZXR1cm4gdGhpcztcbn07XG5cbi8qKlxuICogUmVtb3ZlIGEgY2xhc3MgZnJvbSB0aGUgZWxlbWVudChzKVxuICpcbiAqIEBwYXJhbSB7U3RyaW5nfSB2YWx1ZSBTcGFjZS1zZXBhcmF0ZWQgY2xhc3MgbmFtZShzKSB0byByZW1vdmUgZnJvbSB0aGUgZWxlbWVudChzKS5cbiAqIEByZXR1cm4ge09iamVjdH0gVGhlIHdyYXBwZWQgY29sbGVjdGlvblxuICogQGNoYWluYWJsZVxuICogQGV4YW1wbGVcbiAqICAgICAkKCcuaXRlbXMnKS5yZW1vdmVDbGFzcygnYmFyJyk7XG4gKiAgICAgJCgnLml0ZW1zJykucmVtb3ZlQ2xhc3MoJ2JhciBmb28nKTtcbiAqL1xuXG5leHBvcnQgY29uc3QgcmVtb3ZlQ2xhc3MgPSBmdW5jdGlvbih2YWx1ZSkge1xuICBpZih2YWx1ZSAmJiB2YWx1ZS5sZW5ndGgpIHtcbiAgICBlYWNoKHZhbHVlLnNwbGl0KCcgJyksIF9lYWNoLmJpbmQodGhpcywgJ3JlbW92ZScpKTtcbiAgfVxuICByZXR1cm4gdGhpcztcbn07XG5cbi8qKlxuICogVG9nZ2xlIGEgY2xhc3MgYXQgdGhlIGVsZW1lbnQocylcbiAqXG4gKiBAcGFyYW0ge1N0cmluZ30gdmFsdWUgU3BhY2Utc2VwYXJhdGVkIGNsYXNzIG5hbWUocykgdG8gdG9nZ2xlIGF0IHRoZSBlbGVtZW50KHMpLlxuICogQHBhcmFtIHtCb29sZWFufSBbc3RhdGVdIEEgQm9vbGVhbiB2YWx1ZSB0byBkZXRlcm1pbmUgd2hldGhlciB0aGUgY2xhc3Mgc2hvdWxkIGJlIGFkZGVkIG9yIHJlbW92ZWQuXG4gKiBAcmV0dXJuIHtPYmplY3R9IFRoZSB3cmFwcGVkIGNvbGxlY3Rpb25cbiAqIEBjaGFpbmFibGVcbiAqIEBleGFtcGxlXG4gKiAgICAgJCgnLml0ZW0nKS50b2dnbGVDbGFzcygnYmFyJyk7XG4gKiAgICAgJCgnLml0ZW0nKS50b2dnbGVDbGFzcygnYmFyIGZvbycpO1xuICogICAgICQoJy5pdGVtJykudG9nZ2xlQ2xhc3MoJ2JhcicsIHRydWUpO1xuICovXG5cbmV4cG9ydCBjb25zdCB0b2dnbGVDbGFzcyA9IGZ1bmN0aW9uKHZhbHVlLCBzdGF0ZSkge1xuICBpZih2YWx1ZSAmJiB2YWx1ZS5sZW5ndGgpIHtcbiAgICBjb25zdCBhY3Rpb24gPSB0eXBlb2Ygc3RhdGUgPT09ICdib29sZWFuJyA/IHN0YXRlID8gJ2FkZCcgOiAncmVtb3ZlJyA6ICd0b2dnbGUnO1xuICAgIGVhY2godmFsdWUuc3BsaXQoJyAnKSwgX2VhY2guYmluZCh0aGlzLCBhY3Rpb24pKTtcbiAgfVxuICByZXR1cm4gdGhpcztcbn07XG5cbi8qKlxuICogQ2hlY2sgaWYgdGhlIGVsZW1lbnQocykgaGF2ZSBhIGNsYXNzLlxuICpcbiAqIEBwYXJhbSB7U3RyaW5nfSB2YWx1ZSBDaGVjayBpZiB0aGUgRE9NIGVsZW1lbnQgY29udGFpbnMgdGhlIGNsYXNzIG5hbWUuIFdoZW4gYXBwbGllZCB0byBtdWx0aXBsZSBlbGVtZW50cyxcbiAqIHJldHVybnMgYHRydWVgIGlmIF9hbnlfIG9mIHRoZW0gY29udGFpbnMgdGhlIGNsYXNzIG5hbWUuXG4gKiBAcmV0dXJuIHtCb29sZWFufSBXaGV0aGVyIHRoZSBlbGVtZW50J3MgY2xhc3MgYXR0cmlidXRlIGNvbnRhaW5zIHRoZSBjbGFzcyBuYW1lLlxuICogQGV4YW1wbGVcbiAqICAgICAkKCcuaXRlbScpLmhhc0NsYXNzKCdiYXInKTtcbiAqL1xuXG5leHBvcnQgY29uc3QgaGFzQ2xhc3MgPSBmdW5jdGlvbih2YWx1ZSkge1xuICByZXR1cm4gKHRoaXMubm9kZVR5cGUgPyBbdGhpc10gOiB0aGlzKS5zb21lKGVsZW1lbnQgPT4gZWxlbWVudC5jbGFzc0xpc3QuY29udGFpbnModmFsdWUpKTtcbn07XG5cbi8qKlxuICogU3BlY2lhbGl6ZWQgaXRlcmF0aW9uLCBhcHBseWluZyBgZm5gIG9mIHRoZSBjbGFzc0xpc3QgQVBJIHRvIGVhY2ggZWxlbWVudC5cbiAqXG4gKiBAcGFyYW0ge1N0cmluZ30gZm5OYW1lXG4gKiBAcGFyYW0ge1N0cmluZ30gY2xhc3NOYW1lXG4gKiBAcHJpdmF0ZVxuICovXG5cbmNvbnN0IF9lYWNoID0gZnVuY3Rpb24oZm5OYW1lLCBjbGFzc05hbWUpIHtcbiAgcmV0dXJuIGVhY2godGhpcywgZWxlbWVudCA9PiBlbGVtZW50LmNsYXNzTGlzdFtmbk5hbWVdKGNsYXNzTmFtZSkpO1xufTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/domtastic/src/dom/class.js\n");

/***/ }),

/***/ "./node_modules/domtastic/src/dom/contains.js":
/*!****************************************************!*\
  !*** ./node_modules/domtastic/src/dom/contains.js ***!
  \****************************************************/
/*! exports provided: contains */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"contains\", function() { return contains; });\n/**\n * @module contains\n */\n\n/**\n * Test whether an element contains another element in the DOM.\n *\n * @param {Element} container The element that may contain the other element.\n * @param {Element} element The element that may be a descendant of the other element.\n * @return {Boolean} Whether the `container` element contains the `element`.\n * @example\n *     $.contains(parentElement, childElement); // true/false\n */\n\nconst contains = (container, element) => {\n  if(!container || !element || container === element) {\n    return false;\n  } else if(container.contains) {\n    return container.contains(element);\n  } else if(container.compareDocumentPosition) {\n    return !(container.compareDocumentPosition(element) & Node.DOCUMENT_POSITION_DISCONNECTED);\n  }\n  return false;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZG9tdGFzdGljL3NyYy9kb20vY29udGFpbnMuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZG9tdGFzdGljL3NyYy9kb20vY29udGFpbnMuanM/NGY4MyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBtb2R1bGUgY29udGFpbnNcbiAqL1xuXG4vKipcbiAqIFRlc3Qgd2hldGhlciBhbiBlbGVtZW50IGNvbnRhaW5zIGFub3RoZXIgZWxlbWVudCBpbiB0aGUgRE9NLlxuICpcbiAqIEBwYXJhbSB7RWxlbWVudH0gY29udGFpbmVyIFRoZSBlbGVtZW50IHRoYXQgbWF5IGNvbnRhaW4gdGhlIG90aGVyIGVsZW1lbnQuXG4gKiBAcGFyYW0ge0VsZW1lbnR9IGVsZW1lbnQgVGhlIGVsZW1lbnQgdGhhdCBtYXkgYmUgYSBkZXNjZW5kYW50IG9mIHRoZSBvdGhlciBlbGVtZW50LlxuICogQHJldHVybiB7Qm9vbGVhbn0gV2hldGhlciB0aGUgYGNvbnRhaW5lcmAgZWxlbWVudCBjb250YWlucyB0aGUgYGVsZW1lbnRgLlxuICogQGV4YW1wbGVcbiAqICAgICAkLmNvbnRhaW5zKHBhcmVudEVsZW1lbnQsIGNoaWxkRWxlbWVudCk7IC8vIHRydWUvZmFsc2VcbiAqL1xuXG5leHBvcnQgY29uc3QgY29udGFpbnMgPSAoY29udGFpbmVyLCBlbGVtZW50KSA9PiB7XG4gIGlmKCFjb250YWluZXIgfHwgIWVsZW1lbnQgfHwgY29udGFpbmVyID09PSBlbGVtZW50KSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9IGVsc2UgaWYoY29udGFpbmVyLmNvbnRhaW5zKSB7XG4gICAgcmV0dXJuIGNvbnRhaW5lci5jb250YWlucyhlbGVtZW50KTtcbiAgfSBlbHNlIGlmKGNvbnRhaW5lci5jb21wYXJlRG9jdW1lbnRQb3NpdGlvbikge1xuICAgIHJldHVybiAhKGNvbnRhaW5lci5jb21wYXJlRG9jdW1lbnRQb3NpdGlvbihlbGVtZW50KSAmIE5vZGUuRE9DVU1FTlRfUE9TSVRJT05fRElTQ09OTkVDVEVEKTtcbiAgfVxuICByZXR1cm4gZmFsc2U7XG59O1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/domtastic/src/dom/contains.js\n");

/***/ }),

/***/ "./node_modules/domtastic/src/dom/data.js":
/*!************************************************!*\
  !*** ./node_modules/domtastic/src/dom/data.js ***!
  \************************************************/
/*! exports provided: data, prop */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"data\", function() { return data; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"prop\", function() { return prop; });\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util */ \"./node_modules/domtastic/src/util.js\");\n/**\n * @module Data\n */\n\n\n\nconst isSupportsDataSet = typeof document !== 'undefined' && 'dataset' in document.documentElement;\nconst DATAKEYPROP = isSupportsDataSet ? 'dataset' : '__DOMTASTIC_DATA__';\n\nconst camelize = str => str.replace(/-+(.)?/g, (match, char) => char ? char.toUpperCase() : '');\n\n/**\n * Get data from first element, or set data for each element in the collection.\n *\n * @param {String} key The key for the data to get or set.\n * @param {String} [value] The data to set.\n * @return {Object} The wrapped collection\n * @chainable\n * @example\n *     $('.item').data('attrName'); // get\n *     $('.item').data('attrName', {any: 'data'}); // set\n */\n\nconst data = function(key, value) {\n\n  if(typeof key === 'string' && typeof value === 'undefined') {\n    const element = this.nodeType ? this : this[0];\n    return element && DATAKEYPROP in element ? element[DATAKEYPROP][camelize(key)] : undefined;\n  }\n\n  return Object(_util__WEBPACK_IMPORTED_MODULE_0__[\"each\"])(this, element => {\n    if(!isSupportsDataSet) {\n      element[DATAKEYPROP] = element[DATAKEYPROP] || {};\n    }\n\n    element[DATAKEYPROP][camelize(key)] = value;\n  });\n};\n\n/**\n * Get property from first element, or set property on each element in the collection.\n *\n * @param {String} key The name of the property to get or set.\n * @param {String} [value] The value of the property to set.\n * @return {Object} The wrapped collection\n * @chainable\n * @example\n *     $('.item').prop('attrName'); // get\n *     $('.item').prop('attrName', 'attrValue'); // set\n */\n\nconst prop = function(key, value) {\n\n  if(typeof key === 'string' && typeof value === 'undefined') {\n    const element = this.nodeType ? this : this[0];\n    return element && element ? element[key] : undefined;\n  }\n\n  return Object(_util__WEBPACK_IMPORTED_MODULE_0__[\"each\"])(this, element => element[key] = value);\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZG9tdGFzdGljL3NyYy9kb20vZGF0YS5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kb210YXN0aWMvc3JjL2RvbS9kYXRhLmpzPzRkNTIiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbW9kdWxlIERhdGFcbiAqL1xuXG5pbXBvcnQgeyBlYWNoIH0gZnJvbSAnLi4vdXRpbCc7XG5cbmNvbnN0IGlzU3VwcG9ydHNEYXRhU2V0ID0gdHlwZW9mIGRvY3VtZW50ICE9PSAndW5kZWZpbmVkJyAmJiAnZGF0YXNldCcgaW4gZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50O1xuY29uc3QgREFUQUtFWVBST1AgPSBpc1N1cHBvcnRzRGF0YVNldCA/ICdkYXRhc2V0JyA6ICdfX0RPTVRBU1RJQ19EQVRBX18nO1xuXG5jb25zdCBjYW1lbGl6ZSA9IHN0ciA9PiBzdHIucmVwbGFjZSgvLSsoLik/L2csIChtYXRjaCwgY2hhcikgPT4gY2hhciA/IGNoYXIudG9VcHBlckNhc2UoKSA6ICcnKTtcblxuLyoqXG4gKiBHZXQgZGF0YSBmcm9tIGZpcnN0IGVsZW1lbnQsIG9yIHNldCBkYXRhIGZvciBlYWNoIGVsZW1lbnQgaW4gdGhlIGNvbGxlY3Rpb24uXG4gKlxuICogQHBhcmFtIHtTdHJpbmd9IGtleSBUaGUga2V5IGZvciB0aGUgZGF0YSB0byBnZXQgb3Igc2V0LlxuICogQHBhcmFtIHtTdHJpbmd9IFt2YWx1ZV0gVGhlIGRhdGEgdG8gc2V0LlxuICogQHJldHVybiB7T2JqZWN0fSBUaGUgd3JhcHBlZCBjb2xsZWN0aW9uXG4gKiBAY2hhaW5hYmxlXG4gKiBAZXhhbXBsZVxuICogICAgICQoJy5pdGVtJykuZGF0YSgnYXR0ck5hbWUnKTsgLy8gZ2V0XG4gKiAgICAgJCgnLml0ZW0nKS5kYXRhKCdhdHRyTmFtZScsIHthbnk6ICdkYXRhJ30pOyAvLyBzZXRcbiAqL1xuXG5leHBvcnQgY29uc3QgZGF0YSA9IGZ1bmN0aW9uKGtleSwgdmFsdWUpIHtcblxuICBpZih0eXBlb2Yga2V5ID09PSAnc3RyaW5nJyAmJiB0eXBlb2YgdmFsdWUgPT09ICd1bmRlZmluZWQnKSB7XG4gICAgY29uc3QgZWxlbWVudCA9IHRoaXMubm9kZVR5cGUgPyB0aGlzIDogdGhpc1swXTtcbiAgICByZXR1cm4gZWxlbWVudCAmJiBEQVRBS0VZUFJPUCBpbiBlbGVtZW50ID8gZWxlbWVudFtEQVRBS0VZUFJPUF1bY2FtZWxpemUoa2V5KV0gOiB1bmRlZmluZWQ7XG4gIH1cblxuICByZXR1cm4gZWFjaCh0aGlzLCBlbGVtZW50ID0+IHtcbiAgICBpZighaXNTdXBwb3J0c0RhdGFTZXQpIHtcbiAgICAgIGVsZW1lbnRbREFUQUtFWVBST1BdID0gZWxlbWVudFtEQVRBS0VZUFJPUF0gfHwge307XG4gICAgfVxuXG4gICAgZWxlbWVudFtEQVRBS0VZUFJPUF1bY2FtZWxpemUoa2V5KV0gPSB2YWx1ZTtcbiAgfSk7XG59O1xuXG4vKipcbiAqIEdldCBwcm9wZXJ0eSBmcm9tIGZpcnN0IGVsZW1lbnQsIG9yIHNldCBwcm9wZXJ0eSBvbiBlYWNoIGVsZW1lbnQgaW4gdGhlIGNvbGxlY3Rpb24uXG4gKlxuICogQHBhcmFtIHtTdHJpbmd9IGtleSBUaGUgbmFtZSBvZiB0aGUgcHJvcGVydHkgdG8gZ2V0IG9yIHNldC5cbiAqIEBwYXJhbSB7U3RyaW5nfSBbdmFsdWVdIFRoZSB2YWx1ZSBvZiB0aGUgcHJvcGVydHkgdG8gc2V0LlxuICogQHJldHVybiB7T2JqZWN0fSBUaGUgd3JhcHBlZCBjb2xsZWN0aW9uXG4gKiBAY2hhaW5hYmxlXG4gKiBAZXhhbXBsZVxuICogICAgICQoJy5pdGVtJykucHJvcCgnYXR0ck5hbWUnKTsgLy8gZ2V0XG4gKiAgICAgJCgnLml0ZW0nKS5wcm9wKCdhdHRyTmFtZScsICdhdHRyVmFsdWUnKTsgLy8gc2V0XG4gKi9cblxuZXhwb3J0IGNvbnN0IHByb3AgPSBmdW5jdGlvbihrZXksIHZhbHVlKSB7XG5cbiAgaWYodHlwZW9mIGtleSA9PT0gJ3N0cmluZycgJiYgdHlwZW9mIHZhbHVlID09PSAndW5kZWZpbmVkJykge1xuICAgIGNvbnN0IGVsZW1lbnQgPSB0aGlzLm5vZGVUeXBlID8gdGhpcyA6IHRoaXNbMF07XG4gICAgcmV0dXJuIGVsZW1lbnQgJiYgZWxlbWVudCA/IGVsZW1lbnRba2V5XSA6IHVuZGVmaW5lZDtcbiAgfVxuXG4gIHJldHVybiBlYWNoKHRoaXMsIGVsZW1lbnQgPT4gZWxlbWVudFtrZXldID0gdmFsdWUpO1xufTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/domtastic/src/dom/data.js\n");

/***/ }),

/***/ "./node_modules/domtastic/src/dom/extra.js":
/*!*************************************************!*\
  !*** ./node_modules/domtastic/src/dom/extra.js ***!
  \*************************************************/
/*! exports provided: appendTo, empty, remove, replaceWith, text, val */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"appendTo\", function() { return appendTo; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"empty\", function() { return empty; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"remove\", function() { return remove; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"replaceWith\", function() { return replaceWith; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"text\", function() { return text; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"val\", function() { return val; });\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util */ \"./node_modules/domtastic/src/util.js\");\n/* harmony import */ var _index__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./index */ \"./node_modules/domtastic/src/dom/index.js\");\n/* harmony import */ var _selector_index__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../selector/index */ \"./node_modules/domtastic/src/selector/index.js\");\n/**\n * @module DOM (extra)\n */\n\n\n\n\n\n/**\n * Append each element in the collection to the specified element(s).\n *\n * @param {Node|NodeList|Object} element What to append the element(s) to. Clones elements as necessary.\n * @return {Object} The wrapped collection\n * @chainable\n * @example\n *     $('.item').appendTo(container);\n */\n\nconst appendTo = function(element) {\n  const context = typeof element === 'string' ? Object(_selector_index__WEBPACK_IMPORTED_MODULE_2__[\"$\"])(element) : element;\n  _index__WEBPACK_IMPORTED_MODULE_1__[\"append\"].call(context, this);\n  return this;\n};\n\n/*\n * Empty each element in the collection.\n *\n * @return {Object} The wrapped collection\n * @chainable\n * @example\n *     $('.item').empty();\n */\n\nconst empty = function() {\n  return Object(_util__WEBPACK_IMPORTED_MODULE_0__[\"each\"])(this, element => element.innerHTML = '');\n};\n\n/**\n * Remove the collection from the DOM.\n *\n * @return {Array} Array containing the removed elements\n * @example\n *     $('.item').remove();\n */\n\nconst remove = function() {\n  return Object(_util__WEBPACK_IMPORTED_MODULE_0__[\"each\"])(this, element => {\n    if(element.parentNode) {\n      element.parentNode.removeChild(element);\n    }\n  });\n};\n\n/**\n * Replace each element in the collection with the provided new content, and return the array of elements that were replaced.\n *\n * @return {Array} Array containing the replaced elements\n */\n\nconst replaceWith = function() {\n  return _index__WEBPACK_IMPORTED_MODULE_1__[\"before\"].apply(this, arguments).remove();\n};\n\n/**\n * Get the `textContent` from the first, or set the `textContent` of each element in the collection.\n *\n * @param {String} [value]\n * @return {Object} The wrapped collection\n * @chainable\n * @example\n *     $('.item').text('New content');\n */\n\nconst text = function(value) {\n\n  if(value === undefined) {\n    return this[0].textContent;\n  }\n\n  return Object(_util__WEBPACK_IMPORTED_MODULE_0__[\"each\"])(this, element => element.textContent = '' + value);\n};\n\n/**\n * Get the `value` from the first, or set the `value` of each element in the collection.\n *\n * @param {String} [value]\n * @return {Object} The wrapped collection\n * @chainable\n * @example\n *     $('input.firstName').val('New value');\n */\n\nconst val = function(value) {\n\n  if(value === undefined) {\n    return this.length > 0 ? this[0].value : undefined;\n  }\n\n  return Object(_util__WEBPACK_IMPORTED_MODULE_0__[\"each\"])(this, element => element.value = value);\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZG9tdGFzdGljL3NyYy9kb20vZXh0cmEuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZG9tdGFzdGljL3NyYy9kb20vZXh0cmEuanM/OTg2YSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBtb2R1bGUgRE9NIChleHRyYSlcbiAqL1xuXG5pbXBvcnQgeyBlYWNoIH0gZnJvbSAnLi4vdXRpbCc7XG5pbXBvcnQgeyBhcHBlbmQsIGJlZm9yZSB9IGZyb20gJy4vaW5kZXgnO1xuaW1wb3J0IHsgJCB9IGZyb20gJy4uL3NlbGVjdG9yL2luZGV4JztcblxuLyoqXG4gKiBBcHBlbmQgZWFjaCBlbGVtZW50IGluIHRoZSBjb2xsZWN0aW9uIHRvIHRoZSBzcGVjaWZpZWQgZWxlbWVudChzKS5cbiAqXG4gKiBAcGFyYW0ge05vZGV8Tm9kZUxpc3R8T2JqZWN0fSBlbGVtZW50IFdoYXQgdG8gYXBwZW5kIHRoZSBlbGVtZW50KHMpIHRvLiBDbG9uZXMgZWxlbWVudHMgYXMgbmVjZXNzYXJ5LlxuICogQHJldHVybiB7T2JqZWN0fSBUaGUgd3JhcHBlZCBjb2xsZWN0aW9uXG4gKiBAY2hhaW5hYmxlXG4gKiBAZXhhbXBsZVxuICogICAgICQoJy5pdGVtJykuYXBwZW5kVG8oY29udGFpbmVyKTtcbiAqL1xuXG5leHBvcnQgY29uc3QgYXBwZW5kVG8gPSBmdW5jdGlvbihlbGVtZW50KSB7XG4gIGNvbnN0IGNvbnRleHQgPSB0eXBlb2YgZWxlbWVudCA9PT0gJ3N0cmluZycgPyAkKGVsZW1lbnQpIDogZWxlbWVudDtcbiAgYXBwZW5kLmNhbGwoY29udGV4dCwgdGhpcyk7XG4gIHJldHVybiB0aGlzO1xufTtcblxuLypcbiAqIEVtcHR5IGVhY2ggZWxlbWVudCBpbiB0aGUgY29sbGVjdGlvbi5cbiAqXG4gKiBAcmV0dXJuIHtPYmplY3R9IFRoZSB3cmFwcGVkIGNvbGxlY3Rpb25cbiAqIEBjaGFpbmFibGVcbiAqIEBleGFtcGxlXG4gKiAgICAgJCgnLml0ZW0nKS5lbXB0eSgpO1xuICovXG5cbmV4cG9ydCBjb25zdCBlbXB0eSA9IGZ1bmN0aW9uKCkge1xuICByZXR1cm4gZWFjaCh0aGlzLCBlbGVtZW50ID0+IGVsZW1lbnQuaW5uZXJIVE1MID0gJycpO1xufTtcblxuLyoqXG4gKiBSZW1vdmUgdGhlIGNvbGxlY3Rpb24gZnJvbSB0aGUgRE9NLlxuICpcbiAqIEByZXR1cm4ge0FycmF5fSBBcnJheSBjb250YWluaW5nIHRoZSByZW1vdmVkIGVsZW1lbnRzXG4gKiBAZXhhbXBsZVxuICogICAgICQoJy5pdGVtJykucmVtb3ZlKCk7XG4gKi9cblxuZXhwb3J0IGNvbnN0IHJlbW92ZSA9IGZ1bmN0aW9uKCkge1xuICByZXR1cm4gZWFjaCh0aGlzLCBlbGVtZW50ID0+IHtcbiAgICBpZihlbGVtZW50LnBhcmVudE5vZGUpIHtcbiAgICAgIGVsZW1lbnQucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChlbGVtZW50KTtcbiAgICB9XG4gIH0pO1xufTtcblxuLyoqXG4gKiBSZXBsYWNlIGVhY2ggZWxlbWVudCBpbiB0aGUgY29sbGVjdGlvbiB3aXRoIHRoZSBwcm92aWRlZCBuZXcgY29udGVudCwgYW5kIHJldHVybiB0aGUgYXJyYXkgb2YgZWxlbWVudHMgdGhhdCB3ZXJlIHJlcGxhY2VkLlxuICpcbiAqIEByZXR1cm4ge0FycmF5fSBBcnJheSBjb250YWluaW5nIHRoZSByZXBsYWNlZCBlbGVtZW50c1xuICovXG5cbmV4cG9ydCBjb25zdCByZXBsYWNlV2l0aCA9IGZ1bmN0aW9uKCkge1xuICByZXR1cm4gYmVmb3JlLmFwcGx5KHRoaXMsIGFyZ3VtZW50cykucmVtb3ZlKCk7XG59O1xuXG4vKipcbiAqIEdldCB0aGUgYHRleHRDb250ZW50YCBmcm9tIHRoZSBmaXJzdCwgb3Igc2V0IHRoZSBgdGV4dENvbnRlbnRgIG9mIGVhY2ggZWxlbWVudCBpbiB0aGUgY29sbGVjdGlvbi5cbiAqXG4gKiBAcGFyYW0ge1N0cmluZ30gW3ZhbHVlXVxuICogQHJldHVybiB7T2JqZWN0fSBUaGUgd3JhcHBlZCBjb2xsZWN0aW9uXG4gKiBAY2hhaW5hYmxlXG4gKiBAZXhhbXBsZVxuICogICAgICQoJy5pdGVtJykudGV4dCgnTmV3IGNvbnRlbnQnKTtcbiAqL1xuXG5leHBvcnQgY29uc3QgdGV4dCA9IGZ1bmN0aW9uKHZhbHVlKSB7XG5cbiAgaWYodmFsdWUgPT09IHVuZGVmaW5lZCkge1xuICAgIHJldHVybiB0aGlzWzBdLnRleHRDb250ZW50O1xuICB9XG5cbiAgcmV0dXJuIGVhY2godGhpcywgZWxlbWVudCA9PiBlbGVtZW50LnRleHRDb250ZW50ID0gJycgKyB2YWx1ZSk7XG59O1xuXG4vKipcbiAqIEdldCB0aGUgYHZhbHVlYCBmcm9tIHRoZSBmaXJzdCwgb3Igc2V0IHRoZSBgdmFsdWVgIG9mIGVhY2ggZWxlbWVudCBpbiB0aGUgY29sbGVjdGlvbi5cbiAqXG4gKiBAcGFyYW0ge1N0cmluZ30gW3ZhbHVlXVxuICogQHJldHVybiB7T2JqZWN0fSBUaGUgd3JhcHBlZCBjb2xsZWN0aW9uXG4gKiBAY2hhaW5hYmxlXG4gKiBAZXhhbXBsZVxuICogICAgICQoJ2lucHV0LmZpcnN0TmFtZScpLnZhbCgnTmV3IHZhbHVlJyk7XG4gKi9cblxuZXhwb3J0IGNvbnN0IHZhbCA9IGZ1bmN0aW9uKHZhbHVlKSB7XG5cbiAgaWYodmFsdWUgPT09IHVuZGVmaW5lZCkge1xuICAgIHJldHVybiB0aGlzLmxlbmd0aCA+IDAgPyB0aGlzWzBdLnZhbHVlIDogdW5kZWZpbmVkO1xuICB9XG5cbiAgcmV0dXJuIGVhY2godGhpcywgZWxlbWVudCA9PiBlbGVtZW50LnZhbHVlID0gdmFsdWUpO1xufTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/domtastic/src/dom/extra.js\n");

/***/ }),

/***/ "./node_modules/domtastic/src/dom/html.js":
/*!************************************************!*\
  !*** ./node_modules/domtastic/src/dom/html.js ***!
  \************************************************/
/*! exports provided: html */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"html\", function() { return html; });\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util */ \"./node_modules/domtastic/src/util.js\");\n/**\n * @module HTML\n */\n\n\n\n/*\n * Get the HTML contents of the first element, or set the HTML contents for each element in the collection.\n *\n * @param {String} [fragment] HTML fragment to set for the element. If this argument is omitted, the HTML contents are returned.\n * @return {Object} The wrapped collection\n * @chainable\n * @example\n *     $('.item').html();\n *     $('.item').html('<span>more</span>');\n */\n\nconst html = function(fragment) {\n\n  if(fragment === undefined) {\n    const element = this.nodeType ? this : this[0];\n    return element ? element.innerHTML : undefined;\n  }\n\n  return Object(_util__WEBPACK_IMPORTED_MODULE_0__[\"each\"])(this, element => element.innerHTML = fragment);\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZG9tdGFzdGljL3NyYy9kb20vaHRtbC5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kb210YXN0aWMvc3JjL2RvbS9odG1sLmpzPzEzOTYiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbW9kdWxlIEhUTUxcbiAqL1xuXG5pbXBvcnQgeyBlYWNoIH0gZnJvbSAnLi4vdXRpbCc7XG5cbi8qXG4gKiBHZXQgdGhlIEhUTUwgY29udGVudHMgb2YgdGhlIGZpcnN0IGVsZW1lbnQsIG9yIHNldCB0aGUgSFRNTCBjb250ZW50cyBmb3IgZWFjaCBlbGVtZW50IGluIHRoZSBjb2xsZWN0aW9uLlxuICpcbiAqIEBwYXJhbSB7U3RyaW5nfSBbZnJhZ21lbnRdIEhUTUwgZnJhZ21lbnQgdG8gc2V0IGZvciB0aGUgZWxlbWVudC4gSWYgdGhpcyBhcmd1bWVudCBpcyBvbWl0dGVkLCB0aGUgSFRNTCBjb250ZW50cyBhcmUgcmV0dXJuZWQuXG4gKiBAcmV0dXJuIHtPYmplY3R9IFRoZSB3cmFwcGVkIGNvbGxlY3Rpb25cbiAqIEBjaGFpbmFibGVcbiAqIEBleGFtcGxlXG4gKiAgICAgJCgnLml0ZW0nKS5odG1sKCk7XG4gKiAgICAgJCgnLml0ZW0nKS5odG1sKCc8c3Bhbj5tb3JlPC9zcGFuPicpO1xuICovXG5cbmV4cG9ydCBjb25zdCBodG1sID0gZnVuY3Rpb24oZnJhZ21lbnQpIHtcblxuICBpZihmcmFnbWVudCA9PT0gdW5kZWZpbmVkKSB7XG4gICAgY29uc3QgZWxlbWVudCA9IHRoaXMubm9kZVR5cGUgPyB0aGlzIDogdGhpc1swXTtcbiAgICByZXR1cm4gZWxlbWVudCA/IGVsZW1lbnQuaW5uZXJIVE1MIDogdW5kZWZpbmVkO1xuICB9XG5cbiAgcmV0dXJuIGVhY2godGhpcywgZWxlbWVudCA9PiBlbGVtZW50LmlubmVySFRNTCA9IGZyYWdtZW50KTtcbn07XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/domtastic/src/dom/html.js\n");

/***/ }),

/***/ "./node_modules/domtastic/src/dom/index.js":
/*!*************************************************!*\
  !*** ./node_modules/domtastic/src/dom/index.js ***!
  \*************************************************/
/*! exports provided: append, prepend, before, after, clone, _clone, _each */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"append\", function() { return append; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"prepend\", function() { return prepend; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"before\", function() { return before; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"after\", function() { return after; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"clone\", function() { return clone; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"_clone\", function() { return _clone; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"_each\", function() { return _each; });\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util */ \"./node_modules/domtastic/src/util.js\");\n/* harmony import */ var _selector_index__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../selector/index */ \"./node_modules/domtastic/src/selector/index.js\");\n/**\n * @module DOM\n */\n\n\n\n\nconst forEach = Array.prototype.forEach;\n\n/**\n * Append element(s) to each element in the collection.\n *\n * @param {String|Node|NodeList|Object} element What to append to the element(s).\n * Clones elements as necessary.\n * @return {Object} The wrapped collection\n * @chainable\n * @example\n *     $('.item').append('<p>more</p>');\n */\n\nconst append = function(element) {\n  if(this instanceof Node) {\n    if(typeof element === 'string') {\n      this.insertAdjacentHTML('beforeend', element);\n    } else {\n      if(element instanceof Node) {\n        this.appendChild(element);\n      } else {\n        const elements = element instanceof NodeList ? Object(_util__WEBPACK_IMPORTED_MODULE_0__[\"toArray\"])(element) : element;\n        forEach.call(elements, this.appendChild.bind(this));\n      }\n    }\n  } else {\n    _each(this, append, element);\n  }\n  return this;\n};\n\n/**\n * Place element(s) at the beginning of each element in the collection.\n *\n * @param {String|Node|NodeList|Object} element What to place at the beginning of the element(s).\n * Clones elements as necessary.\n * @return {Object} The wrapped collection\n * @chainable\n * @example\n *     $('.item').prepend('<span>start</span>');\n */\n\nconst prepend = function(element) {\n  if(this instanceof Node) {\n    if(typeof element === 'string') {\n      this.insertAdjacentHTML('afterbegin', element);\n    } else {\n      if(element instanceof Node) {\n        this.insertBefore(element, this.firstChild);\n      } else {\n        let elements = element instanceof NodeList ? Object(_util__WEBPACK_IMPORTED_MODULE_0__[\"toArray\"])(element) : element;\n        forEach.call(elements.reverse(), prepend.bind(this));\n      }\n    }\n  } else {\n    _each(this, prepend, element);\n  }\n  return this;\n};\n\n/**\n * Place element(s) before each element in the collection.\n *\n * @param {String|Node|NodeList|Object} element What to place as sibling(s) before to the element(s).\n * Clones elements as necessary.\n * @return {Object} The wrapped collection\n * @chainable\n * @example\n *     $('.items').before('<p>prefix</p>');\n */\n\nconst before = function(element) {\n  if(this instanceof Node) {\n    if(typeof element === 'string') {\n      this.insertAdjacentHTML('beforebegin', element);\n    } else {\n      if(element instanceof Node) {\n        this.parentNode.insertBefore(element, this);\n      } else {\n        const elements = element instanceof NodeList ? Object(_util__WEBPACK_IMPORTED_MODULE_0__[\"toArray\"])(element) : element;\n        forEach.call(elements, before.bind(this));\n      }\n    }\n  } else {\n    _each(this, before, element);\n  }\n  return this;\n};\n\n/**\n * Place element(s) after each element in the collection.\n *\n * @param {String|Node|NodeList|Object} element What to place as sibling(s) after to the element(s). Clones elements as necessary.\n * @return {Object} The wrapped collection\n * @chainable\n * @example\n *     $('.items').after('<span>suf</span><span>fix</span>');\n */\n\nconst after = function(element) {\n  if(this instanceof Node) {\n    if(typeof element === 'string') {\n      this.insertAdjacentHTML('afterend', element);\n    } else {\n      if(element instanceof Node) {\n        this.parentNode.insertBefore(element, this.nextSibling);\n      } else {\n        const elements = element instanceof NodeList ? Object(_util__WEBPACK_IMPORTED_MODULE_0__[\"toArray\"])(element) : element;\n        forEach.call(elements.reverse(), after.bind(this));\n      }\n    }\n  } else {\n    _each(this, after, element);\n  }\n  return this;\n};\n\n/**\n * Clone a wrapped object.\n *\n * @return {Object} Wrapped collection of cloned nodes.\n * @example\n *     $(element).clone();\n */\n\nconst clone = function() {\n  return Object(_selector_index__WEBPACK_IMPORTED_MODULE_1__[\"$\"])(_clone(this));\n};\n\n/**\n * Clone an object\n *\n * @param {String|Node|NodeList|Array} element The element(s) to clone.\n * @return {String|Node|NodeList|Array} The cloned element(s)\n * @private\n */\n\nconst _clone = element => {\n  if(typeof element === 'string') {\n    return element;\n  } else if(element instanceof Node) {\n    return element.cloneNode(true);\n  } else if('length' in element) {\n    return [].map.call(element, el => el.cloneNode(true));\n  }\n  return element;\n};\n\n/**\n * Specialized iteration, applying `fn` in reversed manner to a clone of each element, but the provided one.\n *\n * @param {NodeList|Array} collection\n * @param {Function} fn\n * @param {Node} element\n * @private\n */\n\nconst _each = (collection, fn, element) => {\n  let l = collection.length;\n  while(l--) {\n    const elm = l === 0 ? element : _clone(element);\n    fn.call(collection[l], elm);\n  }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZG9tdGFzdGljL3NyYy9kb20vaW5kZXguanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZG9tdGFzdGljL3NyYy9kb20vaW5kZXguanM/NmQzNyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBtb2R1bGUgRE9NXG4gKi9cblxuaW1wb3J0IHsgdG9BcnJheSB9IGZyb20gJy4uL3V0aWwnO1xuaW1wb3J0IHsgJCB9IGZyb20gJy4uL3NlbGVjdG9yL2luZGV4JztcblxuY29uc3QgZm9yRWFjaCA9IEFycmF5LnByb3RvdHlwZS5mb3JFYWNoO1xuXG4vKipcbiAqIEFwcGVuZCBlbGVtZW50KHMpIHRvIGVhY2ggZWxlbWVudCBpbiB0aGUgY29sbGVjdGlvbi5cbiAqXG4gKiBAcGFyYW0ge1N0cmluZ3xOb2RlfE5vZGVMaXN0fE9iamVjdH0gZWxlbWVudCBXaGF0IHRvIGFwcGVuZCB0byB0aGUgZWxlbWVudChzKS5cbiAqIENsb25lcyBlbGVtZW50cyBhcyBuZWNlc3NhcnkuXG4gKiBAcmV0dXJuIHtPYmplY3R9IFRoZSB3cmFwcGVkIGNvbGxlY3Rpb25cbiAqIEBjaGFpbmFibGVcbiAqIEBleGFtcGxlXG4gKiAgICAgJCgnLml0ZW0nKS5hcHBlbmQoJzxwPm1vcmU8L3A+Jyk7XG4gKi9cblxuZXhwb3J0IGNvbnN0IGFwcGVuZCA9IGZ1bmN0aW9uKGVsZW1lbnQpIHtcbiAgaWYodGhpcyBpbnN0YW5jZW9mIE5vZGUpIHtcbiAgICBpZih0eXBlb2YgZWxlbWVudCA9PT0gJ3N0cmluZycpIHtcbiAgICAgIHRoaXMuaW5zZXJ0QWRqYWNlbnRIVE1MKCdiZWZvcmVlbmQnLCBlbGVtZW50KTtcbiAgICB9IGVsc2Uge1xuICAgICAgaWYoZWxlbWVudCBpbnN0YW5jZW9mIE5vZGUpIHtcbiAgICAgICAgdGhpcy5hcHBlbmRDaGlsZChlbGVtZW50KTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGNvbnN0IGVsZW1lbnRzID0gZWxlbWVudCBpbnN0YW5jZW9mIE5vZGVMaXN0ID8gdG9BcnJheShlbGVtZW50KSA6IGVsZW1lbnQ7XG4gICAgICAgIGZvckVhY2guY2FsbChlbGVtZW50cywgdGhpcy5hcHBlbmRDaGlsZC5iaW5kKHRoaXMpKTtcbiAgICAgIH1cbiAgICB9XG4gIH0gZWxzZSB7XG4gICAgX2VhY2godGhpcywgYXBwZW5kLCBlbGVtZW50KTtcbiAgfVxuICByZXR1cm4gdGhpcztcbn07XG5cbi8qKlxuICogUGxhY2UgZWxlbWVudChzKSBhdCB0aGUgYmVnaW5uaW5nIG9mIGVhY2ggZWxlbWVudCBpbiB0aGUgY29sbGVjdGlvbi5cbiAqXG4gKiBAcGFyYW0ge1N0cmluZ3xOb2RlfE5vZGVMaXN0fE9iamVjdH0gZWxlbWVudCBXaGF0IHRvIHBsYWNlIGF0IHRoZSBiZWdpbm5pbmcgb2YgdGhlIGVsZW1lbnQocykuXG4gKiBDbG9uZXMgZWxlbWVudHMgYXMgbmVjZXNzYXJ5LlxuICogQHJldHVybiB7T2JqZWN0fSBUaGUgd3JhcHBlZCBjb2xsZWN0aW9uXG4gKiBAY2hhaW5hYmxlXG4gKiBAZXhhbXBsZVxuICogICAgICQoJy5pdGVtJykucHJlcGVuZCgnPHNwYW4+c3RhcnQ8L3NwYW4+Jyk7XG4gKi9cblxuZXhwb3J0IGNvbnN0IHByZXBlbmQgPSBmdW5jdGlvbihlbGVtZW50KSB7XG4gIGlmKHRoaXMgaW5zdGFuY2VvZiBOb2RlKSB7XG4gICAgaWYodHlwZW9mIGVsZW1lbnQgPT09ICdzdHJpbmcnKSB7XG4gICAgICB0aGlzLmluc2VydEFkamFjZW50SFRNTCgnYWZ0ZXJiZWdpbicsIGVsZW1lbnQpO1xuICAgIH0gZWxzZSB7XG4gICAgICBpZihlbGVtZW50IGluc3RhbmNlb2YgTm9kZSkge1xuICAgICAgICB0aGlzLmluc2VydEJlZm9yZShlbGVtZW50LCB0aGlzLmZpcnN0Q2hpbGQpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgbGV0IGVsZW1lbnRzID0gZWxlbWVudCBpbnN0YW5jZW9mIE5vZGVMaXN0ID8gdG9BcnJheShlbGVtZW50KSA6IGVsZW1lbnQ7XG4gICAgICAgIGZvckVhY2guY2FsbChlbGVtZW50cy5yZXZlcnNlKCksIHByZXBlbmQuYmluZCh0aGlzKSk7XG4gICAgICB9XG4gICAgfVxuICB9IGVsc2Uge1xuICAgIF9lYWNoKHRoaXMsIHByZXBlbmQsIGVsZW1lbnQpO1xuICB9XG4gIHJldHVybiB0aGlzO1xufTtcblxuLyoqXG4gKiBQbGFjZSBlbGVtZW50KHMpIGJlZm9yZSBlYWNoIGVsZW1lbnQgaW4gdGhlIGNvbGxlY3Rpb24uXG4gKlxuICogQHBhcmFtIHtTdHJpbmd8Tm9kZXxOb2RlTGlzdHxPYmplY3R9IGVsZW1lbnQgV2hhdCB0byBwbGFjZSBhcyBzaWJsaW5nKHMpIGJlZm9yZSB0byB0aGUgZWxlbWVudChzKS5cbiAqIENsb25lcyBlbGVtZW50cyBhcyBuZWNlc3NhcnkuXG4gKiBAcmV0dXJuIHtPYmplY3R9IFRoZSB3cmFwcGVkIGNvbGxlY3Rpb25cbiAqIEBjaGFpbmFibGVcbiAqIEBleGFtcGxlXG4gKiAgICAgJCgnLml0ZW1zJykuYmVmb3JlKCc8cD5wcmVmaXg8L3A+Jyk7XG4gKi9cblxuZXhwb3J0IGNvbnN0IGJlZm9yZSA9IGZ1bmN0aW9uKGVsZW1lbnQpIHtcbiAgaWYodGhpcyBpbnN0YW5jZW9mIE5vZGUpIHtcbiAgICBpZih0eXBlb2YgZWxlbWVudCA9PT0gJ3N0cmluZycpIHtcbiAgICAgIHRoaXMuaW5zZXJ0QWRqYWNlbnRIVE1MKCdiZWZvcmViZWdpbicsIGVsZW1lbnQpO1xuICAgIH0gZWxzZSB7XG4gICAgICBpZihlbGVtZW50IGluc3RhbmNlb2YgTm9kZSkge1xuICAgICAgICB0aGlzLnBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKGVsZW1lbnQsIHRoaXMpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgY29uc3QgZWxlbWVudHMgPSBlbGVtZW50IGluc3RhbmNlb2YgTm9kZUxpc3QgPyB0b0FycmF5KGVsZW1lbnQpIDogZWxlbWVudDtcbiAgICAgICAgZm9yRWFjaC5jYWxsKGVsZW1lbnRzLCBiZWZvcmUuYmluZCh0aGlzKSk7XG4gICAgICB9XG4gICAgfVxuICB9IGVsc2Uge1xuICAgIF9lYWNoKHRoaXMsIGJlZm9yZSwgZWxlbWVudCk7XG4gIH1cbiAgcmV0dXJuIHRoaXM7XG59O1xuXG4vKipcbiAqIFBsYWNlIGVsZW1lbnQocykgYWZ0ZXIgZWFjaCBlbGVtZW50IGluIHRoZSBjb2xsZWN0aW9uLlxuICpcbiAqIEBwYXJhbSB7U3RyaW5nfE5vZGV8Tm9kZUxpc3R8T2JqZWN0fSBlbGVtZW50IFdoYXQgdG8gcGxhY2UgYXMgc2libGluZyhzKSBhZnRlciB0byB0aGUgZWxlbWVudChzKS4gQ2xvbmVzIGVsZW1lbnRzIGFzIG5lY2Vzc2FyeS5cbiAqIEByZXR1cm4ge09iamVjdH0gVGhlIHdyYXBwZWQgY29sbGVjdGlvblxuICogQGNoYWluYWJsZVxuICogQGV4YW1wbGVcbiAqICAgICAkKCcuaXRlbXMnKS5hZnRlcignPHNwYW4+c3VmPC9zcGFuPjxzcGFuPmZpeDwvc3Bhbj4nKTtcbiAqL1xuXG5leHBvcnQgY29uc3QgYWZ0ZXIgPSBmdW5jdGlvbihlbGVtZW50KSB7XG4gIGlmKHRoaXMgaW5zdGFuY2VvZiBOb2RlKSB7XG4gICAgaWYodHlwZW9mIGVsZW1lbnQgPT09ICdzdHJpbmcnKSB7XG4gICAgICB0aGlzLmluc2VydEFkamFjZW50SFRNTCgnYWZ0ZXJlbmQnLCBlbGVtZW50KTtcbiAgICB9IGVsc2Uge1xuICAgICAgaWYoZWxlbWVudCBpbnN0YW5jZW9mIE5vZGUpIHtcbiAgICAgICAgdGhpcy5wYXJlbnROb2RlLmluc2VydEJlZm9yZShlbGVtZW50LCB0aGlzLm5leHRTaWJsaW5nKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGNvbnN0IGVsZW1lbnRzID0gZWxlbWVudCBpbnN0YW5jZW9mIE5vZGVMaXN0ID8gdG9BcnJheShlbGVtZW50KSA6IGVsZW1lbnQ7XG4gICAgICAgIGZvckVhY2guY2FsbChlbGVtZW50cy5yZXZlcnNlKCksIGFmdGVyLmJpbmQodGhpcykpO1xuICAgICAgfVxuICAgIH1cbiAgfSBlbHNlIHtcbiAgICBfZWFjaCh0aGlzLCBhZnRlciwgZWxlbWVudCk7XG4gIH1cbiAgcmV0dXJuIHRoaXM7XG59O1xuXG4vKipcbiAqIENsb25lIGEgd3JhcHBlZCBvYmplY3QuXG4gKlxuICogQHJldHVybiB7T2JqZWN0fSBXcmFwcGVkIGNvbGxlY3Rpb24gb2YgY2xvbmVkIG5vZGVzLlxuICogQGV4YW1wbGVcbiAqICAgICAkKGVsZW1lbnQpLmNsb25lKCk7XG4gKi9cblxuZXhwb3J0IGNvbnN0IGNsb25lID0gZnVuY3Rpb24oKSB7XG4gIHJldHVybiAkKF9jbG9uZSh0aGlzKSk7XG59O1xuXG4vKipcbiAqIENsb25lIGFuIG9iamVjdFxuICpcbiAqIEBwYXJhbSB7U3RyaW5nfE5vZGV8Tm9kZUxpc3R8QXJyYXl9IGVsZW1lbnQgVGhlIGVsZW1lbnQocykgdG8gY2xvbmUuXG4gKiBAcmV0dXJuIHtTdHJpbmd8Tm9kZXxOb2RlTGlzdHxBcnJheX0gVGhlIGNsb25lZCBlbGVtZW50KHMpXG4gKiBAcHJpdmF0ZVxuICovXG5cbmV4cG9ydCBjb25zdCBfY2xvbmUgPSBlbGVtZW50ID0+IHtcbiAgaWYodHlwZW9mIGVsZW1lbnQgPT09ICdzdHJpbmcnKSB7XG4gICAgcmV0dXJuIGVsZW1lbnQ7XG4gIH0gZWxzZSBpZihlbGVtZW50IGluc3RhbmNlb2YgTm9kZSkge1xuICAgIHJldHVybiBlbGVtZW50LmNsb25lTm9kZSh0cnVlKTtcbiAgfSBlbHNlIGlmKCdsZW5ndGgnIGluIGVsZW1lbnQpIHtcbiAgICByZXR1cm4gW10ubWFwLmNhbGwoZWxlbWVudCwgZWwgPT4gZWwuY2xvbmVOb2RlKHRydWUpKTtcbiAgfVxuICByZXR1cm4gZWxlbWVudDtcbn07XG5cbi8qKlxuICogU3BlY2lhbGl6ZWQgaXRlcmF0aW9uLCBhcHBseWluZyBgZm5gIGluIHJldmVyc2VkIG1hbm5lciB0byBhIGNsb25lIG9mIGVhY2ggZWxlbWVudCwgYnV0IHRoZSBwcm92aWRlZCBvbmUuXG4gKlxuICogQHBhcmFtIHtOb2RlTGlzdHxBcnJheX0gY29sbGVjdGlvblxuICogQHBhcmFtIHtGdW5jdGlvbn0gZm5cbiAqIEBwYXJhbSB7Tm9kZX0gZWxlbWVudFxuICogQHByaXZhdGVcbiAqL1xuXG5leHBvcnQgY29uc3QgX2VhY2ggPSAoY29sbGVjdGlvbiwgZm4sIGVsZW1lbnQpID0+IHtcbiAgbGV0IGwgPSBjb2xsZWN0aW9uLmxlbmd0aDtcbiAgd2hpbGUobC0tKSB7XG4gICAgY29uc3QgZWxtID0gbCA9PT0gMCA/IGVsZW1lbnQgOiBfY2xvbmUoZWxlbWVudCk7XG4gICAgZm4uY2FsbChjb2xsZWN0aW9uW2xdLCBlbG0pO1xuICB9XG59O1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/domtastic/src/dom/index.js\n");

/***/ }),

/***/ "./node_modules/domtastic/src/event/index.js":
/*!***************************************************!*\
  !*** ./node_modules/domtastic/src/event/index.js ***!
  \***************************************************/
/*! exports provided: on, off, one, getHandlers, clearHandlers, proxyHandler, delegateHandler, bind, unbind */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"on\", function() { return on; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"off\", function() { return off; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"one\", function() { return one; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getHandlers\", function() { return getHandlers; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"clearHandlers\", function() { return clearHandlers; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"proxyHandler\", function() { return proxyHandler; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"delegateHandler\", function() { return delegateHandler; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"bind\", function() { return bind; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"unbind\", function() { return unbind; });\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util */ \"./node_modules/domtastic/src/util.js\");\n/* harmony import */ var _selector_closest__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../selector/closest */ \"./node_modules/domtastic/src/selector/closest.js\");\n/**\n * @module Events\n */\n\n\n\n\n/**\n * Shorthand for `addEventListener`. Supports event delegation if a filter (`selector`) is provided.\n *\n * @param {String} eventNames List of space-separated event types to be added to the element(s)\n * @param {String} [selector] Selector to filter descendants that delegate the event to this element.\n * @param {Function} handler Event handler\n * @param {Boolean} useCapture=false\n * @param {Boolean} once=false\n * @return {Object} The wrapped collection\n * @chainable\n * @example\n *     $('.item').on('click', callback);\n *     $('.container').on('click focus', '.item', handler);\n */\n\nconst on = function(eventNames, selector, handler, useCapture, once) {\n\n  if(typeof selector === 'function') {\n    handler = selector;\n    selector = null;\n  }\n\n  let parts,\n    namespace,\n    eventListener;\n\n  eventNames.split(' ').forEach(eventName => {\n\n    parts = eventName.split('.');\n    eventName = parts[0] || null;\n    namespace = parts[1] || null;\n\n    eventListener = proxyHandler(handler);\n\n    Object(_util__WEBPACK_IMPORTED_MODULE_0__[\"each\"])(this, element => {\n\n      if(selector) {\n        eventListener = delegateHandler.bind(element, selector, eventListener);\n      }\n\n      if(once) {\n        const listener = eventListener;\n        eventListener = event => {\n          off.call(element, eventNames, selector, handler, useCapture);\n          listener.call(element, event);\n        };\n      }\n\n      element.addEventListener(eventName, eventListener, useCapture || false);\n\n      getHandlers(element).push({\n        eventName,\n        handler,\n        eventListener,\n        selector,\n        namespace\n      });\n    });\n\n  }, this);\n\n  return this;\n};\n\n/**\n * Shorthand for `removeEventListener`.\n *\n * @param {String} eventNames List of space-separated event types to be removed from the element(s)\n * @param {String} [selector] Selector to filter descendants that undelegate the event to this element.\n * @param {Function} handler Event handler\n * @param {Boolean} useCapture=false\n * @return {Object} The wrapped collection\n * @chainable\n * @example\n *     $('.item').off('click', callback);\n *     $('#my-element').off('myEvent myOtherEvent');\n *     $('.item').off();\n */\n\nconst off = function(eventNames = '', selector, handler, useCapture) {\n\n  if(typeof selector === 'function') {\n    handler = selector;\n    selector = null;\n  }\n\n  let parts,\n    namespace,\n    handlers;\n\n  eventNames.split(' ').forEach(eventName => {\n\n    parts = eventName.split('.');\n    eventName = parts[0] || null;\n    namespace = parts[1] || null;\n\n    return Object(_util__WEBPACK_IMPORTED_MODULE_0__[\"each\"])(this, element => {\n\n      handlers = getHandlers(element);\n\n      Object(_util__WEBPACK_IMPORTED_MODULE_0__[\"each\"])(handlers.filter(item => {\n        return (\n          (!eventName || item.eventName === eventName) &&\n          (!namespace || item.namespace === namespace) &&\n          (!handler || item.handler === handler) &&\n          (!selector || item.selector === selector)\n        );\n      }), item => {\n        element.removeEventListener(item.eventName, item.eventListener, useCapture || false);\n        handlers.splice(handlers.indexOf(item), 1);\n      });\n\n      if(!eventName && !namespace && !selector && !handler) {\n        clearHandlers(element);\n      } else if(handlers.length === 0) {\n        clearHandlers(element);\n      }\n\n    });\n\n  }, this);\n\n  return this;\n};\n\n/**\n * Add event listener and execute the handler at most once per element.\n *\n * @param eventNames\n * @param selector\n * @param handler\n * @param useCapture\n * @return {Object} The wrapped collection\n * @chainable\n * @example\n *     $('.item').one('click', callback);\n */\n\nconst one = function(eventNames, selector, handler, useCapture) {\n  return on.call(this, eventNames, selector, handler, useCapture, 1);\n};\n\n/**\n * Get event handlers from an element\n *\n * @private\n * @param {Node} element\n * @return {Array}\n */\n\nconst eventKeyProp = '__domtastic_event__';\nlet id = 1;\nlet handlers = {};\nlet unusedKeys = [];\n\nconst getHandlers = element => {\n  if(!element[eventKeyProp]) {\n    element[eventKeyProp] = unusedKeys.length === 0 ? ++id : unusedKeys.pop();\n  }\n  const key = element[eventKeyProp];\n  return handlers[key] || (handlers[key] = []);\n};\n\n/**\n * Clear event handlers for an element\n *\n * @private\n * @param {Node} element\n */\n\nconst clearHandlers = element => {\n  const key = element[eventKeyProp];\n  if(handlers[key]) {\n    handlers[key] = null;\n    element[eventKeyProp] = null;\n    unusedKeys.push(key);\n  }\n};\n\n/**\n * Function to create a handler that augments the event object with some extra methods,\n * and executes the callback with the event and the event data (i.e. `event.detail`).\n *\n * @private\n * @param handler Callback to execute as `handler(event, data)`\n * @return {Function}\n */\n\nconst proxyHandler = handler => function(event) {\n  return handler.call(this, augmentEvent(event));\n};\n\nconst eventMethods = {\n  preventDefault: 'isDefaultPrevented',\n  stopImmediatePropagation: 'isImmediatePropagationStopped',\n  stopPropagation: 'isPropagationStopped'\n};\nconst returnTrue = () => true;\nconst returnFalse = () => false;\n\n/**\n * Attempt to augment events and implement something closer to DOM Level 3 Events.\n *\n * @private\n * @param {Object} event\n * @return {Function}\n */\n\nconst augmentEvent = event => {\n  if(!event.isDefaultPrevented || event.stopImmediatePropagation || event.stopPropagation) {\n    for(const methodName in eventMethods) {\n      (function(methodName, testMethodName, originalMethod) {\n        event[methodName] = function() {\n          this[testMethodName] = returnTrue;\n          return originalMethod && originalMethod.apply(this, arguments);\n        };\n        event[testMethodName] = returnFalse;\n      }(methodName, eventMethods[methodName], event[methodName]));\n    }\n    if(event._preventDefault) {\n      event.preventDefault();\n    }\n  }\n  return event;\n};\n\n/**\n * Function to test whether delegated events match the provided `selector` (filter),\n * if the event propagation was stopped, and then actually call the provided event handler.\n * Use `this` instead of `event.currentTarget` on the event object.\n *\n * @private\n * @param {String} selector Selector to filter descendants that undelegate the event to this element.\n * @param {Function} handler Event handler\n * @param {Event} event\n */\n\nconst delegateHandler = function(selector, handler, event) {\n  const eventTarget = event._target || event.target;\n  const currentTarget = _selector_closest__WEBPACK_IMPORTED_MODULE_1__[\"closest\"].call([eventTarget], selector, this)[0];\n  if(currentTarget && currentTarget !== this) {\n    if(currentTarget === eventTarget || !(event.isPropagationStopped && event.isPropagationStopped())) {\n      handler.call(currentTarget, event);\n    }\n  }\n};\n\nconst bind = on;\nconst unbind = off;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/domtastic/src/event/index.js\n");

/***/ }),

/***/ "./node_modules/domtastic/src/event/ready.js":
/*!***************************************************!*\
  !*** ./node_modules/domtastic/src/event/ready.js ***!
  \***************************************************/
/*! exports provided: ready */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ready\", function() { return ready; });\n/**\n * @module Ready\n */\n\n/**\n * Execute callback when `DOMContentLoaded` fires for `document`, or immediately if called afterwards.\n *\n * @param handler Callback to execute when initial DOM content is loaded.\n * @return {Object} The wrapped collection\n * @chainable\n * @example\n *     $(document).ready(callback);\n */\n\nconst ready = function(handler) {\n  if(/complete|loaded|interactive/.test(document.readyState) && document.body) {\n    handler();\n  } else {\n    document.addEventListener('DOMContentLoaded', handler, false);\n  }\n  return this;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZG9tdGFzdGljL3NyYy9ldmVudC9yZWFkeS5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kb210YXN0aWMvc3JjL2V2ZW50L3JlYWR5LmpzP2UyNTkiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbW9kdWxlIFJlYWR5XG4gKi9cblxuLyoqXG4gKiBFeGVjdXRlIGNhbGxiYWNrIHdoZW4gYERPTUNvbnRlbnRMb2FkZWRgIGZpcmVzIGZvciBgZG9jdW1lbnRgLCBvciBpbW1lZGlhdGVseSBpZiBjYWxsZWQgYWZ0ZXJ3YXJkcy5cbiAqXG4gKiBAcGFyYW0gaGFuZGxlciBDYWxsYmFjayB0byBleGVjdXRlIHdoZW4gaW5pdGlhbCBET00gY29udGVudCBpcyBsb2FkZWQuXG4gKiBAcmV0dXJuIHtPYmplY3R9IFRoZSB3cmFwcGVkIGNvbGxlY3Rpb25cbiAqIEBjaGFpbmFibGVcbiAqIEBleGFtcGxlXG4gKiAgICAgJChkb2N1bWVudCkucmVhZHkoY2FsbGJhY2spO1xuICovXG5cbmV4cG9ydCBjb25zdCByZWFkeSA9IGZ1bmN0aW9uKGhhbmRsZXIpIHtcbiAgaWYoL2NvbXBsZXRlfGxvYWRlZHxpbnRlcmFjdGl2ZS8udGVzdChkb2N1bWVudC5yZWFkeVN0YXRlKSAmJiBkb2N1bWVudC5ib2R5KSB7XG4gICAgaGFuZGxlcigpO1xuICB9IGVsc2Uge1xuICAgIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ0RPTUNvbnRlbnRMb2FkZWQnLCBoYW5kbGVyLCBmYWxzZSk7XG4gIH1cbiAgcmV0dXJuIHRoaXM7XG59O1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/domtastic/src/event/ready.js\n");

/***/ }),

/***/ "./node_modules/domtastic/src/event/trigger.js":
/*!*****************************************************!*\
  !*** ./node_modules/domtastic/src/event/trigger.js ***!
  \*****************************************************/
/*! exports provided: trigger, triggerHandler */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"trigger\", function() { return trigger; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"triggerHandler\", function() { return triggerHandler; });\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util */ \"./node_modules/domtastic/src/util.js\");\n/* harmony import */ var _dom_contains__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../dom/contains */ \"./node_modules/domtastic/src/dom/contains.js\");\n/**\n * @module trigger\n */\n\n\n\n\nconst reMouseEvent = /^(mouse(down|up|over|out|enter|leave|move)|contextmenu|(dbl)?click)$/;\nconst reKeyEvent = /^key(down|press|up)$/;\n\n/**\n * Trigger event at element(s)\n *\n * @param {String} type Type of the event\n * @param {Object} data Data to be sent with the event (`params.detail` will be set to this).\n * @param {Object} [params] Event parameters (optional)\n * @param {Boolean} params.bubbles=true Does the event bubble up through the DOM or not.\n * @param {Boolean} params.cancelable=true Is the event cancelable or not.\n * @param {Mixed} params.detail=undefined Additional information about the event.\n * @return {Object} The wrapped collection\n * @chainable\n * @example\n *     $('.item').trigger('anyEventType');\n */\n\nconst trigger = function(type, data, {bubbles = true, cancelable = true, preventDefault = false} = {}) {\n\n  const EventConstructor = getEventConstructor(type);\n  const event = new EventConstructor(type, {\n    bubbles,\n    cancelable,\n    preventDefault,\n    detail: data\n  });\n\n  event._preventDefault = preventDefault;\n\n  return Object(_util__WEBPACK_IMPORTED_MODULE_0__[\"each\"])(this, element => {\n    if(!bubbles || isEventBubblingInDetachedTree || isAttachedToDocument(element)) {\n      dispatchEvent(element, event);\n    } else {\n      triggerForPath(element, type, {\n        bubbles,\n        cancelable,\n        preventDefault,\n        detail: data\n      });\n    }\n  });\n};\n\nconst getEventConstructor = type => isSupportsOtherEventConstructors ? (reMouseEvent.test(type) ? MouseEvent : (reKeyEvent.test(type) ? KeyboardEvent : CustomEvent)) : CustomEvent;\n\n/**\n * Trigger event at first element in the collection. Similar to `trigger()`, except:\n *\n * - Event does not bubble\n * - Default event behavior is prevented\n * - Only triggers handler for first matching element\n *\n * @param {String} type Type of the event\n * @param {Object} data Data to be sent with the event\n * @example\n *     $('form').triggerHandler('submit');\n */\n\nconst triggerHandler = function(type, data) {\n  if(this[0]) {\n    trigger.call(this[0], type, data, {\n      bubbles: false,\n      preventDefault: true\n    });\n  }\n};\n\n/**\n * Check whether the element is attached to or detached from) the document\n *\n * @private\n * @param {Node} element Element to test\n * @return {Boolean}\n */\n\nconst isAttachedToDocument = element => {\n  if(element === window || element === document) {\n    return true;\n  }\n  return Object(_dom_contains__WEBPACK_IMPORTED_MODULE_1__[\"contains\"])(element.ownerDocument.documentElement, element);\n};\n\n/**\n * Dispatch the event at the element and its ancestors.\n * Required to support delegated events in browsers that don't bubble events in detached DOM trees.\n *\n * @private\n * @param {Node} element First element to dispatch the event at\n * @param {String} type Type of the event\n * @param {Object} [params] Event parameters (optional)\n * @param {Boolean} params.bubbles=true Does the event bubble up through the DOM or not.\n * Will be set to false (but shouldn't matter since events don't bubble anyway).\n * @param {Boolean} params.cancelable=true Is the event cancelable or not.\n * @param {Mixed} params.detail=undefined Additional information about the event.\n */\n\nconst triggerForPath = (element, type, params = {}) => {\n  params.bubbles = false;\n  const event = new CustomEvent(type, params);\n  event._target = element;\n  do {\n    dispatchEvent(element, event);\n  } while(element = element.parentNode); // eslint-disable-line no-cond-assign\n};\n\n/**\n * Dispatch event to element, but call direct event methods instead if available\n * (e.g. \"blur()\", \"submit()\") and if the event is non-cancelable.\n *\n * @private\n * @param {Node} element Element to dispatch the event at\n * @param {Object} event Event to dispatch\n */\n\nconst directEventMethods = ['blur', 'focus', 'select', 'submit'];\n\nconst dispatchEvent = (element, event) => {\n  if(directEventMethods.indexOf(event.type) !== -1 && typeof element[event.type] === 'function' && !event._preventDefault && !event.cancelable) {\n    element[event.type]();\n  } else {\n    element.dispatchEvent(event);\n  }\n};\n\n/**\n * Polyfill for CustomEvent, borrowed from [MDN](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent/CustomEvent#Polyfill).\n * Needed to support IE (9, 10, 11) & PhantomJS\n */\n\n(() => {\n  const CustomEvent = function(event, params = {\n    bubbles: false,\n    cancelable: false,\n    detail: undefined\n  }) {\n    let customEvent = document.createEvent('CustomEvent');\n    customEvent.initCustomEvent(event, params.bubbles, params.cancelable, params.detail);\n    return customEvent;\n  };\n\n  CustomEvent.prototype = _util__WEBPACK_IMPORTED_MODULE_0__[\"win\"].CustomEvent && _util__WEBPACK_IMPORTED_MODULE_0__[\"win\"].CustomEvent.prototype;\n  _util__WEBPACK_IMPORTED_MODULE_0__[\"win\"].CustomEvent = CustomEvent;\n\n})();\n\n/*\n * Are events bubbling in detached DOM trees?\n * @private\n */\n\nconst isEventBubblingInDetachedTree = (() =>{\n  let isBubbling = false;\n  const doc = _util__WEBPACK_IMPORTED_MODULE_0__[\"win\"].document;\n  if(doc) {\n    const parent = doc.createElement('div');\n    const child = parent.cloneNode();\n    parent.appendChild(child);\n    parent.addEventListener('e', function() {\n      isBubbling = true;\n    });\n    child.dispatchEvent(new CustomEvent('e', {bubbles: true}));\n  }\n  return isBubbling;\n})();\n\nconst isSupportsOtherEventConstructors = (() => {\n  try {\n    new MouseEvent('click');\n  } catch(e) {\n    return false;\n  }\n  return true;\n})();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/domtastic/src/event/trigger.js\n");

/***/ }),

/***/ "./node_modules/domtastic/src/index.js":
/*!*********************************************!*\
  !*** ./node_modules/domtastic/src/index.js ***!
  \*********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util */ \"./node_modules/domtastic/src/util.js\");\n/* harmony import */ var _array__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./array */ \"./node_modules/domtastic/src/array.js\");\n/* harmony import */ var _baseClass__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./baseClass */ \"./node_modules/domtastic/src/baseClass.js\");\n/* harmony import */ var _css__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./css */ \"./node_modules/domtastic/src/css.js\");\n/* harmony import */ var _dom_index__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./dom/index */ \"./node_modules/domtastic/src/dom/index.js\");\n/* harmony import */ var _dom_attr__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./dom/attr */ \"./node_modules/domtastic/src/dom/attr.js\");\n/* harmony import */ var _dom_class__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./dom/class */ \"./node_modules/domtastic/src/dom/class.js\");\n/* harmony import */ var _dom_contains__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./dom/contains */ \"./node_modules/domtastic/src/dom/contains.js\");\n/* harmony import */ var _dom_data__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./dom/data */ \"./node_modules/domtastic/src/dom/data.js\");\n/* harmony import */ var _dom_extra__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./dom/extra */ \"./node_modules/domtastic/src/dom/extra.js\");\n/* harmony import */ var _dom_html__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./dom/html */ \"./node_modules/domtastic/src/dom/html.js\");\n/* harmony import */ var _event_index__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./event/index */ \"./node_modules/domtastic/src/event/index.js\");\n/* harmony import */ var _event_trigger__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./event/trigger */ \"./node_modules/domtastic/src/event/trigger.js\");\n/* harmony import */ var _event_ready__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./event/ready */ \"./node_modules/domtastic/src/event/ready.js\");\n/* harmony import */ var _noconflict__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./noconflict */ \"./node_modules/domtastic/src/noconflict.js\");\n/* harmony import */ var _selector_index__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./selector/index */ \"./node_modules/domtastic/src/selector/index.js\");\n/* harmony import */ var _selector_closest__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./selector/closest */ \"./node_modules/domtastic/src/selector/closest.js\");\n/* harmony import */ var _selector_extra__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./selector/extra */ \"./node_modules/domtastic/src/selector/extra.js\");\n/* harmony import */ var _type__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./type */ \"./node_modules/domtastic/src/type.js\");\n/**\n * @module API\n */\n\n\n\nconst api = {};\nlet $ = {};\n\n// Import modules to build up the API\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nif(typeof _selector_index__WEBPACK_IMPORTED_MODULE_15__ !== 'undefined') {\n  $ = _selector_index__WEBPACK_IMPORTED_MODULE_15__[\"$\"];\n  $.matches = _selector_index__WEBPACK_IMPORTED_MODULE_15__[\"matches\"];\n  api.find = _selector_index__WEBPACK_IMPORTED_MODULE_15__[\"find\"];\n}\n\nObject(_util__WEBPACK_IMPORTED_MODULE_0__[\"extend\"])($, _dom_contains__WEBPACK_IMPORTED_MODULE_7__, _noconflict__WEBPACK_IMPORTED_MODULE_14__, _type__WEBPACK_IMPORTED_MODULE_18__);\nObject(_util__WEBPACK_IMPORTED_MODULE_0__[\"extend\"])(api, _array__WEBPACK_IMPORTED_MODULE_1__, _css__WEBPACK_IMPORTED_MODULE_3__, _dom_attr__WEBPACK_IMPORTED_MODULE_5__, _dom_index__WEBPACK_IMPORTED_MODULE_4__, _dom_class__WEBPACK_IMPORTED_MODULE_6__, _dom_data__WEBPACK_IMPORTED_MODULE_8__, _dom_extra__WEBPACK_IMPORTED_MODULE_9__, _dom_html__WEBPACK_IMPORTED_MODULE_10__, _event_index__WEBPACK_IMPORTED_MODULE_11__, _event_trigger__WEBPACK_IMPORTED_MODULE_12__, _event_ready__WEBPACK_IMPORTED_MODULE_13__, _selector_closest__WEBPACK_IMPORTED_MODULE_16__, _selector_extra__WEBPACK_IMPORTED_MODULE_17__);\n\n$.fn = api;\n\n// Version\n\n$.version = '__VERSION__';\n\n// Util\n\n$.extend = _util__WEBPACK_IMPORTED_MODULE_0__[\"extend\"];\n\n// Provide base class to extend from\n\nif(typeof _baseClass__WEBPACK_IMPORTED_MODULE_2__[\"default\"] !== 'undefined') {\n  $.BaseClass = Object(_baseClass__WEBPACK_IMPORTED_MODULE_2__[\"default\"])($.fn);\n}\n\n// Export interface\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ($);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZG9tdGFzdGljL3NyYy9pbmRleC5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kb210YXN0aWMvc3JjL2luZGV4LmpzP2ZjZjIiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbW9kdWxlIEFQSVxuICovXG5cbmltcG9ydCB7IGV4dGVuZCB9IGZyb20gJy4vdXRpbCc7XG5cbmNvbnN0IGFwaSA9IHt9O1xubGV0ICQgPSB7fTtcblxuLy8gSW1wb3J0IG1vZHVsZXMgdG8gYnVpbGQgdXAgdGhlIEFQSVxuXG5pbXBvcnQgKiBhcyBhcnJheSBmcm9tICcuL2FycmF5JztcbmltcG9ydCBCYXNlQ2xhc3MgZnJvbSAnLi9iYXNlQ2xhc3MnO1xuaW1wb3J0ICogYXMgY3NzIGZyb20gJy4vY3NzJztcbmltcG9ydCAqIGFzIGRvbSBmcm9tICcuL2RvbS9pbmRleCc7XG5pbXBvcnQgKiBhcyBkb21fYXR0ciBmcm9tICcuL2RvbS9hdHRyJztcbmltcG9ydCAqIGFzIGRvbV9jbGFzcyBmcm9tICcuL2RvbS9jbGFzcyc7XG5pbXBvcnQgKiBhcyBkb21fY29udGFpbnMgZnJvbSAnLi9kb20vY29udGFpbnMnO1xuaW1wb3J0ICogYXMgZG9tX2RhdGEgZnJvbSAnLi9kb20vZGF0YSc7XG5pbXBvcnQgKiBhcyBkb21fZXh0cmEgZnJvbSAnLi9kb20vZXh0cmEnO1xuaW1wb3J0ICogYXMgZG9tX2h0bWwgZnJvbSAnLi9kb20vaHRtbCc7XG5pbXBvcnQgKiBhcyBldmVudCBmcm9tICcuL2V2ZW50L2luZGV4JztcbmltcG9ydCAqIGFzIGV2ZW50X3RyaWdnZXIgZnJvbSAnLi9ldmVudC90cmlnZ2VyJztcbmltcG9ydCAqIGFzIGV2ZW50X3JlYWR5IGZyb20gJy4vZXZlbnQvcmVhZHknO1xuaW1wb3J0ICogYXMgbm9jb25mbGljdCBmcm9tICcuL25vY29uZmxpY3QnO1xuaW1wb3J0ICogYXMgc2VsZWN0b3IgZnJvbSAnLi9zZWxlY3Rvci9pbmRleCc7XG5pbXBvcnQgKiBhcyBzZWxlY3Rvcl9jbG9zZXN0IGZyb20gJy4vc2VsZWN0b3IvY2xvc2VzdCc7XG5pbXBvcnQgKiBhcyBzZWxlY3Rvcl9leHRyYSBmcm9tICcuL3NlbGVjdG9yL2V4dHJhJztcbmltcG9ydCAqIGFzIHR5cGUgZnJvbSAnLi90eXBlJztcblxuaWYodHlwZW9mIHNlbGVjdG9yICE9PSAndW5kZWZpbmVkJykge1xuICAkID0gc2VsZWN0b3IuJDtcbiAgJC5tYXRjaGVzID0gc2VsZWN0b3IubWF0Y2hlcztcbiAgYXBpLmZpbmQgPSBzZWxlY3Rvci5maW5kO1xufVxuXG5leHRlbmQoJCwgZG9tX2NvbnRhaW5zLCBub2NvbmZsaWN0LCB0eXBlKTtcbmV4dGVuZChhcGksIGFycmF5LCBjc3MsIGRvbV9hdHRyLCBkb20sIGRvbV9jbGFzcywgZG9tX2RhdGEsIGRvbV9leHRyYSwgZG9tX2h0bWwsIGV2ZW50LCBldmVudF90cmlnZ2VyLCBldmVudF9yZWFkeSwgc2VsZWN0b3JfY2xvc2VzdCwgc2VsZWN0b3JfZXh0cmEpO1xuXG4kLmZuID0gYXBpO1xuXG4vLyBWZXJzaW9uXG5cbiQudmVyc2lvbiA9ICdfX1ZFUlNJT05fXyc7XG5cbi8vIFV0aWxcblxuJC5leHRlbmQgPSBleHRlbmQ7XG5cbi8vIFByb3ZpZGUgYmFzZSBjbGFzcyB0byBleHRlbmQgZnJvbVxuXG5pZih0eXBlb2YgQmFzZUNsYXNzICE9PSAndW5kZWZpbmVkJykge1xuICAkLkJhc2VDbGFzcyA9IEJhc2VDbGFzcygkLmZuKTtcbn1cblxuLy8gRXhwb3J0IGludGVyZmFjZVxuXG5leHBvcnQgZGVmYXVsdCAkO1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/domtastic/src/index.js\n");

/***/ }),

/***/ "./node_modules/domtastic/src/noconflict.js":
/*!**************************************************!*\
  !*** ./node_modules/domtastic/src/noconflict.js ***!
  \**************************************************/
/*! exports provided: noConflict */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"noConflict\", function() { return noConflict; });\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util */ \"./node_modules/domtastic/src/util.js\");\n/**\n * @module noConflict\n */\n\n\n\n/*\n * Save the previous value of the global `$` variable, so that it can be restored later on.\n * @private\n */\n\nconst previousLib = _util__WEBPACK_IMPORTED_MODULE_0__[\"win\"].$;\n\n/**\n * In case another library sets the global `$` variable before DOMtastic does,\n * this method can be used to return the global `$` to that other library.\n *\n * @return {Object} Reference to DOMtastic.\n * @example\n *     var domtastic = $.noConflict();\n */\n\nconst noConflict = function() {\n  _util__WEBPACK_IMPORTED_MODULE_0__[\"win\"].$ = previousLib;\n  return this;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZG9tdGFzdGljL3NyYy9ub2NvbmZsaWN0LmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2RvbXRhc3RpYy9zcmMvbm9jb25mbGljdC5qcz9jZWQ4Il0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQG1vZHVsZSBub0NvbmZsaWN0XG4gKi9cblxuaW1wb3J0IHsgd2luIH0gZnJvbSAnLi91dGlsJztcblxuLypcbiAqIFNhdmUgdGhlIHByZXZpb3VzIHZhbHVlIG9mIHRoZSBnbG9iYWwgYCRgIHZhcmlhYmxlLCBzbyB0aGF0IGl0IGNhbiBiZSByZXN0b3JlZCBsYXRlciBvbi5cbiAqIEBwcml2YXRlXG4gKi9cblxuY29uc3QgcHJldmlvdXNMaWIgPSB3aW4uJDtcblxuLyoqXG4gKiBJbiBjYXNlIGFub3RoZXIgbGlicmFyeSBzZXRzIHRoZSBnbG9iYWwgYCRgIHZhcmlhYmxlIGJlZm9yZSBET010YXN0aWMgZG9lcyxcbiAqIHRoaXMgbWV0aG9kIGNhbiBiZSB1c2VkIHRvIHJldHVybiB0aGUgZ2xvYmFsIGAkYCB0byB0aGF0IG90aGVyIGxpYnJhcnkuXG4gKlxuICogQHJldHVybiB7T2JqZWN0fSBSZWZlcmVuY2UgdG8gRE9NdGFzdGljLlxuICogQGV4YW1wbGVcbiAqICAgICB2YXIgZG9tdGFzdGljID0gJC5ub0NvbmZsaWN0KCk7XG4gKi9cblxuZXhwb3J0IGNvbnN0IG5vQ29uZmxpY3QgPSBmdW5jdGlvbigpIHtcbiAgd2luLiQgPSBwcmV2aW91c0xpYjtcbiAgcmV0dXJuIHRoaXM7XG59O1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/domtastic/src/noconflict.js\n");

/***/ }),

/***/ "./node_modules/domtastic/src/selector/closest.js":
/*!********************************************************!*\
  !*** ./node_modules/domtastic/src/selector/closest.js ***!
  \********************************************************/
/*! exports provided: closest */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"closest\", function() { return closest; });\n/* harmony import */ var _index__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index */ \"./node_modules/domtastic/src/selector/index.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util */ \"./node_modules/domtastic/src/util.js\");\n/**\n * @module closest\n */\n\n\n\n\n/**\n * Return the closest element matching the selector (starting by itself) for each element in the collection.\n *\n * @param {String} selector Filter\n * @param {Object} [context] If provided, matching elements must be a descendant of this element\n * @return {Object} New wrapped collection (containing zero or one element)\n * @chainable\n * @example\n *     $('.selector').closest('.container');\n */\n\nconst closest = (() => {\n\n  const closest = function(selector, context) {\n    const nodes = [];\n    Object(_util__WEBPACK_IMPORTED_MODULE_1__[\"each\"])(this, node => {\n      while(node && node !== context) {\n        if(Object(_index__WEBPACK_IMPORTED_MODULE_0__[\"matches\"])(node, selector)) {\n          nodes.push(node);\n          break;\n        }\n        node = node.parentElement;\n      }\n    });\n    return Object(_index__WEBPACK_IMPORTED_MODULE_0__[\"$\"])(Object(_util__WEBPACK_IMPORTED_MODULE_1__[\"uniq\"])(nodes));\n  };\n\n  return typeof Element === 'undefined' || !Element.prototype.closest ? closest : function(selector, context) {\n    if(!context) {\n      const nodes = [];\n      Object(_util__WEBPACK_IMPORTED_MODULE_1__[\"each\"])(this, node => {\n        const n = node.closest(selector);\n        if(n) {\n          nodes.push(n);\n        }\n      });\n      return Object(_index__WEBPACK_IMPORTED_MODULE_0__[\"$\"])(Object(_util__WEBPACK_IMPORTED_MODULE_1__[\"uniq\"])(nodes));\n    } else {\n      return closest.call(this, selector, context);\n    }\n  };\n})();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZG9tdGFzdGljL3NyYy9zZWxlY3Rvci9jbG9zZXN0LmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2RvbXRhc3RpYy9zcmMvc2VsZWN0b3IvY2xvc2VzdC5qcz82NDJhIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQG1vZHVsZSBjbG9zZXN0XG4gKi9cblxuaW1wb3J0IHsgJCwgbWF0Y2hlcyB9IGZyb20gJy4vaW5kZXgnO1xuaW1wb3J0IHsgZWFjaCwgdW5pcSB9IGZyb20gJy4uL3V0aWwnO1xuXG4vKipcbiAqIFJldHVybiB0aGUgY2xvc2VzdCBlbGVtZW50IG1hdGNoaW5nIHRoZSBzZWxlY3RvciAoc3RhcnRpbmcgYnkgaXRzZWxmKSBmb3IgZWFjaCBlbGVtZW50IGluIHRoZSBjb2xsZWN0aW9uLlxuICpcbiAqIEBwYXJhbSB7U3RyaW5nfSBzZWxlY3RvciBGaWx0ZXJcbiAqIEBwYXJhbSB7T2JqZWN0fSBbY29udGV4dF0gSWYgcHJvdmlkZWQsIG1hdGNoaW5nIGVsZW1lbnRzIG11c3QgYmUgYSBkZXNjZW5kYW50IG9mIHRoaXMgZWxlbWVudFxuICogQHJldHVybiB7T2JqZWN0fSBOZXcgd3JhcHBlZCBjb2xsZWN0aW9uIChjb250YWluaW5nIHplcm8gb3Igb25lIGVsZW1lbnQpXG4gKiBAY2hhaW5hYmxlXG4gKiBAZXhhbXBsZVxuICogICAgICQoJy5zZWxlY3RvcicpLmNsb3Nlc3QoJy5jb250YWluZXInKTtcbiAqL1xuXG5leHBvcnQgY29uc3QgY2xvc2VzdCA9ICgoKSA9PiB7XG5cbiAgY29uc3QgY2xvc2VzdCA9IGZ1bmN0aW9uKHNlbGVjdG9yLCBjb250ZXh0KSB7XG4gICAgY29uc3Qgbm9kZXMgPSBbXTtcbiAgICBlYWNoKHRoaXMsIG5vZGUgPT4ge1xuICAgICAgd2hpbGUobm9kZSAmJiBub2RlICE9PSBjb250ZXh0KSB7XG4gICAgICAgIGlmKG1hdGNoZXMobm9kZSwgc2VsZWN0b3IpKSB7XG4gICAgICAgICAgbm9kZXMucHVzaChub2RlKTtcbiAgICAgICAgICBicmVhaztcbiAgICAgICAgfVxuICAgICAgICBub2RlID0gbm9kZS5wYXJlbnRFbGVtZW50O1xuICAgICAgfVxuICAgIH0pO1xuICAgIHJldHVybiAkKHVuaXEobm9kZXMpKTtcbiAgfTtcblxuICByZXR1cm4gdHlwZW9mIEVsZW1lbnQgPT09ICd1bmRlZmluZWQnIHx8ICFFbGVtZW50LnByb3RvdHlwZS5jbG9zZXN0ID8gY2xvc2VzdCA6IGZ1bmN0aW9uKHNlbGVjdG9yLCBjb250ZXh0KSB7XG4gICAgaWYoIWNvbnRleHQpIHtcbiAgICAgIGNvbnN0IG5vZGVzID0gW107XG4gICAgICBlYWNoKHRoaXMsIG5vZGUgPT4ge1xuICAgICAgICBjb25zdCBuID0gbm9kZS5jbG9zZXN0KHNlbGVjdG9yKTtcbiAgICAgICAgaWYobikge1xuICAgICAgICAgIG5vZGVzLnB1c2gobik7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgICAgcmV0dXJuICQodW5pcShub2RlcykpO1xuICAgIH0gZWxzZSB7XG4gICAgICByZXR1cm4gY2xvc2VzdC5jYWxsKHRoaXMsIHNlbGVjdG9yLCBjb250ZXh0KTtcbiAgICB9XG4gIH07XG59KSgpO1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/domtastic/src/selector/closest.js\n");

/***/ }),

/***/ "./node_modules/domtastic/src/selector/extra.js":
/*!******************************************************!*\
  !*** ./node_modules/domtastic/src/selector/extra.js ***!
  \******************************************************/
/*! exports provided: children, concat, contents, eq, first, get, parent, siblings, slice */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"children\", function() { return children; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"concat\", function() { return concat; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"contents\", function() { return contents; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"eq\", function() { return eq; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"first\", function() { return first; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"get\", function() { return get; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"parent\", function() { return parent; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"siblings\", function() { return siblings; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"slice\", function() { return slice; });\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util */ \"./node_modules/domtastic/src/util.js\");\n/* harmony import */ var _index__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./index */ \"./node_modules/domtastic/src/selector/index.js\");\n/**\n * @module Selector (extra)\n */\n\n\n\n\n/**\n * Return children of each element in the collection, optionally filtered by a selector.\n *\n * @param {String} [selector] Filter\n * @return {Object} New wrapped collection\n * @chainable\n * @example\n *     $('.selector').children();\n *     $('.selector').children('.filter');\n */\n\nconst children = function(selector) {\n  const nodes = [];\n  Object(_util__WEBPACK_IMPORTED_MODULE_0__[\"each\"])(this, element => {\n    if(element.children) {\n      Object(_util__WEBPACK_IMPORTED_MODULE_0__[\"each\"])(element.children, child => {\n        if(!selector || (selector && Object(_index__WEBPACK_IMPORTED_MODULE_1__[\"matches\"])(child, selector))) {\n          nodes.push(child);\n        }\n      });\n    }\n  });\n  return Object(_index__WEBPACK_IMPORTED_MODULE_1__[\"$\"])(nodes);\n};\n\n/**\n * Add the elements of a wrapped collection to another.\n *\n * @param {String|Node|NodeList|Array} selector Query selector, `Node`, `NodeList`, array of elements, or HTML fragment string.\n * @return {Object} The extended wrapped collection\n * @example\n *     $('.items').concat($('.more-items));\n *     $('.items').concat('.more-items);\n *     $('.items').concat('<div>more</div>');\n */\n\nconst concat = function(selector) {\n  Object(_util__WEBPACK_IMPORTED_MODULE_0__[\"each\"])(Object(_index__WEBPACK_IMPORTED_MODULE_1__[\"$\"])(selector), element => {\n    if([].indexOf.call(this, element) === -1) {\n      [].push.call(this, element);\n    }\n  });\n  return this;\n};\n\n/**\n * Return child nodes of each element in the collection, including text and comment nodes.\n *\n * @return {Object} New wrapped collection\n * @example\n *     $('.selector').contents();\n */\n\nconst contents = function() {\n  const nodes = [];\n  Object(_util__WEBPACK_IMPORTED_MODULE_0__[\"each\"])(this, element => nodes.push.apply(nodes, Object(_util__WEBPACK_IMPORTED_MODULE_0__[\"toArray\"])(element.childNodes)));\n  return Object(_index__WEBPACK_IMPORTED_MODULE_1__[\"$\"])(nodes);\n};\n\n/**\n * Return a collection containing only the one at the specified index.\n *\n * @param {Number} index\n * @return {Object} New wrapped collection\n * @chainable\n * @example\n *     $('.items').eq(1)\n *     // The second item; result is the same as doing $($('.items')[1]);\n */\n\nconst eq = function(index) {\n  return slice.call(this, index, index + 1);\n};\n\n/**\n * Return a collection containing only the first item.\n *\n * @return {Object} New wrapped collection\n * @chainable\n * @example\n *     $('.items').first()\n *     // The first item; result is the same as doing $($('.items')[0]);\n */\n\nconst first = function() {\n  return slice.call(this, 0, 1);\n};\n\n/**\n * Return the DOM element at the specified index.\n *\n * @param {Number} index\n * @return {Node} Element at the specified index\n * @example\n *     $('.items').get(1)\n *     // The second element; result is the same as doing $('.items')[1];\n */\n\nconst get = function(index) {\n  return this[index];\n};\n\n/**\n * Return the parent elements of each element in the collection, optionally filtered by a selector.\n *\n * @param {String} [selector] Filter\n * @return {Object} New wrapped collection\n * @chainable\n * @example\n *     $('.selector').parent();\n *     $('.selector').parent('.filter');\n */\n\nconst parent = function(selector) {\n  const nodes = [];\n  Object(_util__WEBPACK_IMPORTED_MODULE_0__[\"each\"])(this, element => {\n    if(!selector || (selector && Object(_index__WEBPACK_IMPORTED_MODULE_1__[\"matches\"])(element.parentNode, selector))) {\n      nodes.push(element.parentNode);\n    }\n  });\n  return Object(_index__WEBPACK_IMPORTED_MODULE_1__[\"$\"])(nodes);\n};\n\n/**\n * Return the sibling elements of each element in the collection, optionally filtered by a selector.\n *\n * @param {String} [selector] Filter\n * @return {Object} New wrapped collection\n * @chainable\n * @example\n *     $('.selector').siblings();\n *     $('.selector').siblings('.filter');\n */\n\nconst siblings = function(selector) {\n  const nodes = [];\n  Object(_util__WEBPACK_IMPORTED_MODULE_0__[\"each\"])(this, element => Object(_util__WEBPACK_IMPORTED_MODULE_0__[\"each\"])(element.parentNode.children, sibling => {\n    if(sibling !== element && (!selector || (selector && Object(_index__WEBPACK_IMPORTED_MODULE_1__[\"matches\"])(sibling, selector)))) {\n      nodes.push(sibling);\n    }\n  }));\n  return Object(_index__WEBPACK_IMPORTED_MODULE_1__[\"$\"])(nodes);\n};\n\n/**\n * Create a new, sliced collection.\n *\n * @param {Number} start\n * @param {Number} end\n * @return {Object} New wrapped collection\n * @example\n *     $('.items').slice(1, 3)\n *     // New wrapped collection containing the second, third, and fourth element.\n */\n\nconst slice = function(start, end) { // eslint-disable-line no-unused-vars\n  return Object(_index__WEBPACK_IMPORTED_MODULE_1__[\"$\"])([].slice.apply(this, arguments));\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZG9tdGFzdGljL3NyYy9zZWxlY3Rvci9leHRyYS5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kb210YXN0aWMvc3JjL3NlbGVjdG9yL2V4dHJhLmpzPzYxYTUiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbW9kdWxlIFNlbGVjdG9yIChleHRyYSlcbiAqL1xuXG5pbXBvcnQgeyBlYWNoLCB0b0FycmF5IH0gZnJvbSAnLi4vdXRpbCc7XG5pbXBvcnQgeyAkLCBtYXRjaGVzIH0gZnJvbSAnLi9pbmRleCc7XG5cbi8qKlxuICogUmV0dXJuIGNoaWxkcmVuIG9mIGVhY2ggZWxlbWVudCBpbiB0aGUgY29sbGVjdGlvbiwgb3B0aW9uYWxseSBmaWx0ZXJlZCBieSBhIHNlbGVjdG9yLlxuICpcbiAqIEBwYXJhbSB7U3RyaW5nfSBbc2VsZWN0b3JdIEZpbHRlclxuICogQHJldHVybiB7T2JqZWN0fSBOZXcgd3JhcHBlZCBjb2xsZWN0aW9uXG4gKiBAY2hhaW5hYmxlXG4gKiBAZXhhbXBsZVxuICogICAgICQoJy5zZWxlY3RvcicpLmNoaWxkcmVuKCk7XG4gKiAgICAgJCgnLnNlbGVjdG9yJykuY2hpbGRyZW4oJy5maWx0ZXInKTtcbiAqL1xuXG5leHBvcnQgY29uc3QgY2hpbGRyZW4gPSBmdW5jdGlvbihzZWxlY3Rvcikge1xuICBjb25zdCBub2RlcyA9IFtdO1xuICBlYWNoKHRoaXMsIGVsZW1lbnQgPT4ge1xuICAgIGlmKGVsZW1lbnQuY2hpbGRyZW4pIHtcbiAgICAgIGVhY2goZWxlbWVudC5jaGlsZHJlbiwgY2hpbGQgPT4ge1xuICAgICAgICBpZighc2VsZWN0b3IgfHwgKHNlbGVjdG9yICYmIG1hdGNoZXMoY2hpbGQsIHNlbGVjdG9yKSkpIHtcbiAgICAgICAgICBub2Rlcy5wdXNoKGNoaWxkKTtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgfVxuICB9KTtcbiAgcmV0dXJuICQobm9kZXMpO1xufTtcblxuLyoqXG4gKiBBZGQgdGhlIGVsZW1lbnRzIG9mIGEgd3JhcHBlZCBjb2xsZWN0aW9uIHRvIGFub3RoZXIuXG4gKlxuICogQHBhcmFtIHtTdHJpbmd8Tm9kZXxOb2RlTGlzdHxBcnJheX0gc2VsZWN0b3IgUXVlcnkgc2VsZWN0b3IsIGBOb2RlYCwgYE5vZGVMaXN0YCwgYXJyYXkgb2YgZWxlbWVudHMsIG9yIEhUTUwgZnJhZ21lbnQgc3RyaW5nLlxuICogQHJldHVybiB7T2JqZWN0fSBUaGUgZXh0ZW5kZWQgd3JhcHBlZCBjb2xsZWN0aW9uXG4gKiBAZXhhbXBsZVxuICogICAgICQoJy5pdGVtcycpLmNvbmNhdCgkKCcubW9yZS1pdGVtcykpO1xuICogICAgICQoJy5pdGVtcycpLmNvbmNhdCgnLm1vcmUtaXRlbXMpO1xuICogICAgICQoJy5pdGVtcycpLmNvbmNhdCgnPGRpdj5tb3JlPC9kaXY+Jyk7XG4gKi9cblxuZXhwb3J0IGNvbnN0IGNvbmNhdCA9IGZ1bmN0aW9uKHNlbGVjdG9yKSB7XG4gIGVhY2goJChzZWxlY3RvciksIGVsZW1lbnQgPT4ge1xuICAgIGlmKFtdLmluZGV4T2YuY2FsbCh0aGlzLCBlbGVtZW50KSA9PT0gLTEpIHtcbiAgICAgIFtdLnB1c2guY2FsbCh0aGlzLCBlbGVtZW50KTtcbiAgICB9XG4gIH0pO1xuICByZXR1cm4gdGhpcztcbn07XG5cbi8qKlxuICogUmV0dXJuIGNoaWxkIG5vZGVzIG9mIGVhY2ggZWxlbWVudCBpbiB0aGUgY29sbGVjdGlvbiwgaW5jbHVkaW5nIHRleHQgYW5kIGNvbW1lbnQgbm9kZXMuXG4gKlxuICogQHJldHVybiB7T2JqZWN0fSBOZXcgd3JhcHBlZCBjb2xsZWN0aW9uXG4gKiBAZXhhbXBsZVxuICogICAgICQoJy5zZWxlY3RvcicpLmNvbnRlbnRzKCk7XG4gKi9cblxuZXhwb3J0IGNvbnN0IGNvbnRlbnRzID0gZnVuY3Rpb24oKSB7XG4gIGNvbnN0IG5vZGVzID0gW107XG4gIGVhY2godGhpcywgZWxlbWVudCA9PiBub2Rlcy5wdXNoLmFwcGx5KG5vZGVzLCB0b0FycmF5KGVsZW1lbnQuY2hpbGROb2RlcykpKTtcbiAgcmV0dXJuICQobm9kZXMpO1xufTtcblxuLyoqXG4gKiBSZXR1cm4gYSBjb2xsZWN0aW9uIGNvbnRhaW5pbmcgb25seSB0aGUgb25lIGF0IHRoZSBzcGVjaWZpZWQgaW5kZXguXG4gKlxuICogQHBhcmFtIHtOdW1iZXJ9IGluZGV4XG4gKiBAcmV0dXJuIHtPYmplY3R9IE5ldyB3cmFwcGVkIGNvbGxlY3Rpb25cbiAqIEBjaGFpbmFibGVcbiAqIEBleGFtcGxlXG4gKiAgICAgJCgnLml0ZW1zJykuZXEoMSlcbiAqICAgICAvLyBUaGUgc2Vjb25kIGl0ZW07IHJlc3VsdCBpcyB0aGUgc2FtZSBhcyBkb2luZyAkKCQoJy5pdGVtcycpWzFdKTtcbiAqL1xuXG5leHBvcnQgY29uc3QgZXEgPSBmdW5jdGlvbihpbmRleCkge1xuICByZXR1cm4gc2xpY2UuY2FsbCh0aGlzLCBpbmRleCwgaW5kZXggKyAxKTtcbn07XG5cbi8qKlxuICogUmV0dXJuIGEgY29sbGVjdGlvbiBjb250YWluaW5nIG9ubHkgdGhlIGZpcnN0IGl0ZW0uXG4gKlxuICogQHJldHVybiB7T2JqZWN0fSBOZXcgd3JhcHBlZCBjb2xsZWN0aW9uXG4gKiBAY2hhaW5hYmxlXG4gKiBAZXhhbXBsZVxuICogICAgICQoJy5pdGVtcycpLmZpcnN0KClcbiAqICAgICAvLyBUaGUgZmlyc3QgaXRlbTsgcmVzdWx0IGlzIHRoZSBzYW1lIGFzIGRvaW5nICQoJCgnLml0ZW1zJylbMF0pO1xuICovXG5cbmV4cG9ydCBjb25zdCBmaXJzdCA9IGZ1bmN0aW9uKCkge1xuICByZXR1cm4gc2xpY2UuY2FsbCh0aGlzLCAwLCAxKTtcbn07XG5cbi8qKlxuICogUmV0dXJuIHRoZSBET00gZWxlbWVudCBhdCB0aGUgc3BlY2lmaWVkIGluZGV4LlxuICpcbiAqIEBwYXJhbSB7TnVtYmVyfSBpbmRleFxuICogQHJldHVybiB7Tm9kZX0gRWxlbWVudCBhdCB0aGUgc3BlY2lmaWVkIGluZGV4XG4gKiBAZXhhbXBsZVxuICogICAgICQoJy5pdGVtcycpLmdldCgxKVxuICogICAgIC8vIFRoZSBzZWNvbmQgZWxlbWVudDsgcmVzdWx0IGlzIHRoZSBzYW1lIGFzIGRvaW5nICQoJy5pdGVtcycpWzFdO1xuICovXG5cbmV4cG9ydCBjb25zdCBnZXQgPSBmdW5jdGlvbihpbmRleCkge1xuICByZXR1cm4gdGhpc1tpbmRleF07XG59O1xuXG4vKipcbiAqIFJldHVybiB0aGUgcGFyZW50IGVsZW1lbnRzIG9mIGVhY2ggZWxlbWVudCBpbiB0aGUgY29sbGVjdGlvbiwgb3B0aW9uYWxseSBmaWx0ZXJlZCBieSBhIHNlbGVjdG9yLlxuICpcbiAqIEBwYXJhbSB7U3RyaW5nfSBbc2VsZWN0b3JdIEZpbHRlclxuICogQHJldHVybiB7T2JqZWN0fSBOZXcgd3JhcHBlZCBjb2xsZWN0aW9uXG4gKiBAY2hhaW5hYmxlXG4gKiBAZXhhbXBsZVxuICogICAgICQoJy5zZWxlY3RvcicpLnBhcmVudCgpO1xuICogICAgICQoJy5zZWxlY3RvcicpLnBhcmVudCgnLmZpbHRlcicpO1xuICovXG5cbmV4cG9ydCBjb25zdCBwYXJlbnQgPSBmdW5jdGlvbihzZWxlY3Rvcikge1xuICBjb25zdCBub2RlcyA9IFtdO1xuICBlYWNoKHRoaXMsIGVsZW1lbnQgPT4ge1xuICAgIGlmKCFzZWxlY3RvciB8fCAoc2VsZWN0b3IgJiYgbWF0Y2hlcyhlbGVtZW50LnBhcmVudE5vZGUsIHNlbGVjdG9yKSkpIHtcbiAgICAgIG5vZGVzLnB1c2goZWxlbWVudC5wYXJlbnROb2RlKTtcbiAgICB9XG4gIH0pO1xuICByZXR1cm4gJChub2Rlcyk7XG59O1xuXG4vKipcbiAqIFJldHVybiB0aGUgc2libGluZyBlbGVtZW50cyBvZiBlYWNoIGVsZW1lbnQgaW4gdGhlIGNvbGxlY3Rpb24sIG9wdGlvbmFsbHkgZmlsdGVyZWQgYnkgYSBzZWxlY3Rvci5cbiAqXG4gKiBAcGFyYW0ge1N0cmluZ30gW3NlbGVjdG9yXSBGaWx0ZXJcbiAqIEByZXR1cm4ge09iamVjdH0gTmV3IHdyYXBwZWQgY29sbGVjdGlvblxuICogQGNoYWluYWJsZVxuICogQGV4YW1wbGVcbiAqICAgICAkKCcuc2VsZWN0b3InKS5zaWJsaW5ncygpO1xuICogICAgICQoJy5zZWxlY3RvcicpLnNpYmxpbmdzKCcuZmlsdGVyJyk7XG4gKi9cblxuZXhwb3J0IGNvbnN0IHNpYmxpbmdzID0gZnVuY3Rpb24oc2VsZWN0b3IpIHtcbiAgY29uc3Qgbm9kZXMgPSBbXTtcbiAgZWFjaCh0aGlzLCBlbGVtZW50ID0+IGVhY2goZWxlbWVudC5wYXJlbnROb2RlLmNoaWxkcmVuLCBzaWJsaW5nID0+IHtcbiAgICBpZihzaWJsaW5nICE9PSBlbGVtZW50ICYmICghc2VsZWN0b3IgfHwgKHNlbGVjdG9yICYmIG1hdGNoZXMoc2libGluZywgc2VsZWN0b3IpKSkpIHtcbiAgICAgIG5vZGVzLnB1c2goc2libGluZyk7XG4gICAgfVxuICB9KSk7XG4gIHJldHVybiAkKG5vZGVzKTtcbn07XG5cbi8qKlxuICogQ3JlYXRlIGEgbmV3LCBzbGljZWQgY29sbGVjdGlvbi5cbiAqXG4gKiBAcGFyYW0ge051bWJlcn0gc3RhcnRcbiAqIEBwYXJhbSB7TnVtYmVyfSBlbmRcbiAqIEByZXR1cm4ge09iamVjdH0gTmV3IHdyYXBwZWQgY29sbGVjdGlvblxuICogQGV4YW1wbGVcbiAqICAgICAkKCcuaXRlbXMnKS5zbGljZSgxLCAzKVxuICogICAgIC8vIE5ldyB3cmFwcGVkIGNvbGxlY3Rpb24gY29udGFpbmluZyB0aGUgc2Vjb25kLCB0aGlyZCwgYW5kIGZvdXJ0aCBlbGVtZW50LlxuICovXG5cbmV4cG9ydCBjb25zdCBzbGljZSA9IGZ1bmN0aW9uKHN0YXJ0LCBlbmQpIHsgLy8gZXNsaW50LWRpc2FibGUtbGluZSBuby11bnVzZWQtdmFyc1xuICByZXR1cm4gJChbXS5zbGljZS5hcHBseSh0aGlzLCBhcmd1bWVudHMpKTtcbn07XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/domtastic/src/selector/extra.js\n");

/***/ }),

/***/ "./node_modules/domtastic/src/selector/index.js":
/*!******************************************************!*\
  !*** ./node_modules/domtastic/src/selector/index.js ***!
  \******************************************************/
/*! exports provided: $, find, matches, DOMtastic */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"$\", function() { return $; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"find\", function() { return find; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"matches\", function() { return matches; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"DOMtastic\", function() { return DOMtastic; });\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util */ \"./node_modules/domtastic/src/util.js\");\n/**\n * @module Selector\n */\n\n\n\nlet isPrototypeSet = false;\n\nconst reFragment = /^\\s*<(\\w+|!)[^>]*>/;\nconst reSingleTag = /^<(\\w+)\\s*\\/?>(?:<\\/\\1>|)$/;\nconst reSimpleSelector = /^[.#]?[\\w-]*$/;\n\n/*\n * Versatile wrapper for `querySelectorAll`.\n *\n * @param {String|Node|NodeList|Array} selector Query selector, `Node`, `NodeList`, array of elements, or HTML fragment string.\n * @param {String|Node|NodeList} context=document The context for the selector to query elements.\n * @return {Object} The wrapped collection\n * @chainable\n * @example\n *     var $items = $(.items');\n * @example\n *     var $element = $(domElement);\n * @example\n *     var $list = $(nodeList, document.body);\n * @example\n *     var $element = $('<p>evergreen</p>');\n */\n\nconst domtastic = function domtastic(selector, context = document) {\n\n  let collection;\n\n  if(!selector) {\n\n    collection = document.querySelectorAll(null);\n\n  } else if(selector instanceof DOMtastic) {\n\n    return selector;\n\n  } else if(typeof selector !== 'string') {\n\n    collection = selector.nodeType || selector === window ? [selector] : selector;\n\n  } else if(reFragment.test(selector)) {\n\n    collection = createFragment(selector);\n\n  } else {\n\n    context = typeof context === 'string' ? document.querySelector(context) : context.length ? context[0] : context;\n\n    collection = querySelector(selector, context);\n\n  }\n\n  return wrap(collection);\n\n};\n\nconst $ = domtastic;\n\n/*\n * Find descendants matching the provided `selector` for each element in the collection.\n *\n * @param {String|Node|NodeList|Array} selector Query selector, `Node`, `NodeList`, array of elements, or HTML fragment string.\n * @return {Object} The wrapped collection\n * @example\n *     $('.selector').find('.deep').$('.deepest');\n */\n\nconst find = function(selector) {\n  const nodes = [];\n  Object(_util__WEBPACK_IMPORTED_MODULE_0__[\"each\"])(this, node => Object(_util__WEBPACK_IMPORTED_MODULE_0__[\"each\"])(querySelector(selector, node), child => {\n    if(nodes.indexOf(child) === -1) {\n      nodes.push(child);\n    }\n  }));\n  return $(nodes);\n};\n\n/*\n * Returns `true` if the element would be selected by the specified selector string; otherwise, returns `false`.\n *\n * @param {Node} element Element to test\n * @param {String} selector Selector to match against element\n * @return {Boolean}\n *\n * @example\n *     $.matches(element, '.match');\n */\n\nconst matches = (() => {\n  const context = typeof Element !== 'undefined' ? Element.prototype : _util__WEBPACK_IMPORTED_MODULE_0__[\"win\"];\n  const _matches = context.matches || context.matchesSelector || context.mozMatchesSelector || context.msMatchesSelector || context.oMatchesSelector || context.webkitMatchesSelector;\n  return (element, selector) => _matches.call(element, selector);\n})();\n\n/*\n * Use the faster `getElementById`, `getElementsByClassName` or `getElementsByTagName` over `querySelectorAll` if possible.\n *\n * @private\n * @param {String} selector Query selector.\n * @param {Node} context The context for the selector to query elements.\n * @return {Object} NodeList, HTMLCollection, or Array of matching elements (depending on method used).\n */\n\nconst querySelector = (selector, context) => {\n\n  const isSimpleSelector = reSimpleSelector.test(selector);\n\n  if(isSimpleSelector) {\n    if(selector[0] === '#') {\n      const element = (context.getElementById ? context : document).getElementById(selector.slice(1));\n      return element ? [element] : [];\n    }\n    if(selector[0] === '.') {\n      return context.getElementsByClassName(selector.slice(1));\n    }\n    return context.getElementsByTagName(selector);\n  }\n\n  return context.querySelectorAll(selector);\n\n};\n\n/*\n * Create DOM fragment from an HTML string\n *\n * @private\n * @param {String} html String representing HTML.\n * @return {NodeList}\n */\n\nconst createFragment = html => {\n\n  if(reSingleTag.test(html)) {\n    return [document.createElement(RegExp.$1)];\n  }\n\n  const elements = [];\n  const container = document.createElement('div');\n  const children = container.childNodes;\n\n  container.innerHTML = html;\n\n  for(let i = 0, l = children.length; i < l; i++) {\n    elements.push(children[i]);\n  }\n\n  return elements;\n};\n\n/*\n * Calling `$(selector)` returns a wrapped collection of elements.\n *\n * @private\n * @param {NodeList|Array} collection Element(s) to wrap.\n * @return Object) The wrapped collection\n */\n\nconst wrap = collection => {\n\n  if(!isPrototypeSet) {\n    DOMtastic.prototype = $.fn;\n    DOMtastic.prototype.constructor = DOMtastic;\n    isPrototypeSet = true;\n  }\n\n  return new DOMtastic(collection);\n};\n\n/*\n * Constructor for the Object.prototype strategy\n *\n * @constructor\n * @private\n * @param {NodeList|Array} collection Element(s) to wrap.\n */\n\nconst DOMtastic = function DOMtastic(collection) {\n  let i = 0;\n  const length = collection.length;\n  for(; i < length;) {\n    this[i] = collection[i++];\n  }\n  this.length = length;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/domtastic/src/selector/index.js\n");

/***/ }),

/***/ "./node_modules/domtastic/src/type.js":
/*!********************************************!*\
  !*** ./node_modules/domtastic/src/type.js ***!
  \********************************************/
/*! exports provided: isFunction, isArray */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isFunction\", function() { return isFunction; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isArray\", function() { return isArray; });\n/**\n * @module Type\n */\n\n/*\n * Determine if the argument passed is a Javascript function object.\n *\n * @param {Object} [obj] Object to test whether or not it is a function.\n * @return {boolean}\n * @example\n *     $.isFunction(function(){}); // true\n * @example\n *     $.isFunction({}); // false\n */\n\nconst isFunction = obj => typeof obj === 'function';\n\n/*\n * Determine whether the argument is an array.\n *\n * @param {Object} [obj] Object to test whether or not it is an array.\n * @return {boolean}\n * @example\n *     $.isArray([]); // true\n * @example\n *     $.isArray({}); // false\n */\n\nconst isArray = Array.isArray;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZG9tdGFzdGljL3NyYy90eXBlLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2RvbXRhc3RpYy9zcmMvdHlwZS5qcz9jZjNjIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQG1vZHVsZSBUeXBlXG4gKi9cblxuLypcbiAqIERldGVybWluZSBpZiB0aGUgYXJndW1lbnQgcGFzc2VkIGlzIGEgSmF2YXNjcmlwdCBmdW5jdGlvbiBvYmplY3QuXG4gKlxuICogQHBhcmFtIHtPYmplY3R9IFtvYmpdIE9iamVjdCB0byB0ZXN0IHdoZXRoZXIgb3Igbm90IGl0IGlzIGEgZnVuY3Rpb24uXG4gKiBAcmV0dXJuIHtib29sZWFufVxuICogQGV4YW1wbGVcbiAqICAgICAkLmlzRnVuY3Rpb24oZnVuY3Rpb24oKXt9KTsgLy8gdHJ1ZVxuICogQGV4YW1wbGVcbiAqICAgICAkLmlzRnVuY3Rpb24oe30pOyAvLyBmYWxzZVxuICovXG5cbmV4cG9ydCBjb25zdCBpc0Z1bmN0aW9uID0gb2JqID0+IHR5cGVvZiBvYmogPT09ICdmdW5jdGlvbic7XG5cbi8qXG4gKiBEZXRlcm1pbmUgd2hldGhlciB0aGUgYXJndW1lbnQgaXMgYW4gYXJyYXkuXG4gKlxuICogQHBhcmFtIHtPYmplY3R9IFtvYmpdIE9iamVjdCB0byB0ZXN0IHdoZXRoZXIgb3Igbm90IGl0IGlzIGFuIGFycmF5LlxuICogQHJldHVybiB7Ym9vbGVhbn1cbiAqIEBleGFtcGxlXG4gKiAgICAgJC5pc0FycmF5KFtdKTsgLy8gdHJ1ZVxuICogQGV4YW1wbGVcbiAqICAgICAkLmlzQXJyYXkoe30pOyAvLyBmYWxzZVxuICovXG5cbmV4cG9ydCBjb25zdCBpc0FycmF5ID0gQXJyYXkuaXNBcnJheTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/domtastic/src/type.js\n");

/***/ }),

/***/ "./node_modules/domtastic/src/util.js":
/*!********************************************!*\
  !*** ./node_modules/domtastic/src/util.js ***!
  \********************************************/
/*! exports provided: win, toArray, each, extend, uniq */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"win\", function() { return win; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"toArray\", function() { return toArray; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"each\", function() { return each; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"extend\", function() { return extend; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"uniq\", function() { return uniq; });\n/*\n * @module Util\n */\n\n/*\n * Reference to the window object\n * @private\n */\n\nconst win = typeof window !== 'undefined' ? window : {};\n\n/**\n * Convert `NodeList` to `Array`.\n *\n * @param {NodeList|Array} collection\n * @return {Array}\n * @private\n */\n\nconst toArray = collection => {\n  const length = collection.length;\n  const result = new Array(length);\n  for(let i = 0; i < length; i++) {\n    result[i] = collection[i];\n  }\n  return result;\n};\n\n/**\n * Faster alternative to [].forEach method\n *\n * @param {Node|NodeList|Array} collection\n * @param {Function} callback\n * @return {Node|NodeList|Array}\n * @private\n */\n\nconst each = (collection, callback, thisArg) => {\n  const length = collection.length;\n  if(length !== undefined && collection.nodeType === undefined) {\n    for(let i = 0; i < length; i++) {\n      callback.call(thisArg, collection[i], i, collection);\n    }\n  } else {\n    callback.call(thisArg, collection, 0, collection);\n  }\n  return collection;\n};\n\n/**\n * Assign enumerable properties from source object(s) to target object\n *\n * @method extend\n * @param {Object} target Object to extend\n * @param {Object} [source] Object to extend from\n * @return {Object} Extended object\n * @example\n *     $.extend({a: 1}, {b: 2}); // {a: 1, b: 2}\n * @example\n *     $.extend({a: 1}, {b: 2}, {a: 3}); // {a: 3, b: 2}\n */\n\nconst extend = (target, ...sources) => {\n  sources.forEach(src => {\n    for(let prop in src) {\n      target[prop] = src[prop];\n    }\n  });\n  return target;\n};\n\n/**\n * Return the collection without duplicates\n *\n * @param collection Collection to remove duplicates from\n * @return {Node|NodeList|Array}\n * @private\n */\n\nconst uniq = collection => collection.filter((item, index) => collection.indexOf(item) === index);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZG9tdGFzdGljL3NyYy91dGlsLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2RvbXRhc3RpYy9zcmMvdXRpbC5qcz8yNDk1Il0sInNvdXJjZXNDb250ZW50IjpbIi8qXG4gKiBAbW9kdWxlIFV0aWxcbiAqL1xuXG4vKlxuICogUmVmZXJlbmNlIHRvIHRoZSB3aW5kb3cgb2JqZWN0XG4gKiBAcHJpdmF0ZVxuICovXG5cbmV4cG9ydCBjb25zdCB3aW4gPSB0eXBlb2Ygd2luZG93ICE9PSAndW5kZWZpbmVkJyA/IHdpbmRvdyA6IHt9O1xuXG4vKipcbiAqIENvbnZlcnQgYE5vZGVMaXN0YCB0byBgQXJyYXlgLlxuICpcbiAqIEBwYXJhbSB7Tm9kZUxpc3R8QXJyYXl9IGNvbGxlY3Rpb25cbiAqIEByZXR1cm4ge0FycmF5fVxuICogQHByaXZhdGVcbiAqL1xuXG5leHBvcnQgY29uc3QgdG9BcnJheSA9IGNvbGxlY3Rpb24gPT4ge1xuICBjb25zdCBsZW5ndGggPSBjb2xsZWN0aW9uLmxlbmd0aDtcbiAgY29uc3QgcmVzdWx0ID0gbmV3IEFycmF5KGxlbmd0aCk7XG4gIGZvcihsZXQgaSA9IDA7IGkgPCBsZW5ndGg7IGkrKykge1xuICAgIHJlc3VsdFtpXSA9IGNvbGxlY3Rpb25baV07XG4gIH1cbiAgcmV0dXJuIHJlc3VsdDtcbn07XG5cbi8qKlxuICogRmFzdGVyIGFsdGVybmF0aXZlIHRvIFtdLmZvckVhY2ggbWV0aG9kXG4gKlxuICogQHBhcmFtIHtOb2RlfE5vZGVMaXN0fEFycmF5fSBjb2xsZWN0aW9uXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBjYWxsYmFja1xuICogQHJldHVybiB7Tm9kZXxOb2RlTGlzdHxBcnJheX1cbiAqIEBwcml2YXRlXG4gKi9cblxuZXhwb3J0IGNvbnN0IGVhY2ggPSAoY29sbGVjdGlvbiwgY2FsbGJhY2ssIHRoaXNBcmcpID0+IHtcbiAgY29uc3QgbGVuZ3RoID0gY29sbGVjdGlvbi5sZW5ndGg7XG4gIGlmKGxlbmd0aCAhPT0gdW5kZWZpbmVkICYmIGNvbGxlY3Rpb24ubm9kZVR5cGUgPT09IHVuZGVmaW5lZCkge1xuICAgIGZvcihsZXQgaSA9IDA7IGkgPCBsZW5ndGg7IGkrKykge1xuICAgICAgY2FsbGJhY2suY2FsbCh0aGlzQXJnLCBjb2xsZWN0aW9uW2ldLCBpLCBjb2xsZWN0aW9uKTtcbiAgICB9XG4gIH0gZWxzZSB7XG4gICAgY2FsbGJhY2suY2FsbCh0aGlzQXJnLCBjb2xsZWN0aW9uLCAwLCBjb2xsZWN0aW9uKTtcbiAgfVxuICByZXR1cm4gY29sbGVjdGlvbjtcbn07XG5cbi8qKlxuICogQXNzaWduIGVudW1lcmFibGUgcHJvcGVydGllcyBmcm9tIHNvdXJjZSBvYmplY3QocykgdG8gdGFyZ2V0IG9iamVjdFxuICpcbiAqIEBtZXRob2QgZXh0ZW5kXG4gKiBAcGFyYW0ge09iamVjdH0gdGFyZ2V0IE9iamVjdCB0byBleHRlbmRcbiAqIEBwYXJhbSB7T2JqZWN0fSBbc291cmNlXSBPYmplY3QgdG8gZXh0ZW5kIGZyb21cbiAqIEByZXR1cm4ge09iamVjdH0gRXh0ZW5kZWQgb2JqZWN0XG4gKiBAZXhhbXBsZVxuICogICAgICQuZXh0ZW5kKHthOiAxfSwge2I6IDJ9KTsgLy8ge2E6IDEsIGI6IDJ9XG4gKiBAZXhhbXBsZVxuICogICAgICQuZXh0ZW5kKHthOiAxfSwge2I6IDJ9LCB7YTogM30pOyAvLyB7YTogMywgYjogMn1cbiAqL1xuXG5leHBvcnQgY29uc3QgZXh0ZW5kID0gKHRhcmdldCwgLi4uc291cmNlcykgPT4ge1xuICBzb3VyY2VzLmZvckVhY2goc3JjID0+IHtcbiAgICBmb3IobGV0IHByb3AgaW4gc3JjKSB7XG4gICAgICB0YXJnZXRbcHJvcF0gPSBzcmNbcHJvcF07XG4gICAgfVxuICB9KTtcbiAgcmV0dXJuIHRhcmdldDtcbn07XG5cbi8qKlxuICogUmV0dXJuIHRoZSBjb2xsZWN0aW9uIHdpdGhvdXQgZHVwbGljYXRlc1xuICpcbiAqIEBwYXJhbSBjb2xsZWN0aW9uIENvbGxlY3Rpb24gdG8gcmVtb3ZlIGR1cGxpY2F0ZXMgZnJvbVxuICogQHJldHVybiB7Tm9kZXxOb2RlTGlzdHxBcnJheX1cbiAqIEBwcml2YXRlXG4gKi9cblxuZXhwb3J0IGNvbnN0IHVuaXEgPSBjb2xsZWN0aW9uID0+IGNvbGxlY3Rpb24uZmlsdGVyKChpdGVtLCBpbmRleCkgPT4gY29sbGVjdGlvbi5pbmRleE9mKGl0ZW0pID09PSBpbmRleCk7XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/domtastic/src/util.js\n");

/***/ }),

/***/ "./node_modules/smoothscroll/smoothscroll.js":
/*!***************************************************!*\
  !*** ./node_modules/smoothscroll/smoothscroll.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;(function (root, smoothScroll) {\n  'use strict';\n\n  // Support RequireJS and CommonJS/NodeJS module formats.\n  // Attach smoothScroll to the `window` when executed as a <script>.\n\n  // RequireJS\n  if (true) {\n    !(__WEBPACK_AMD_DEFINE_FACTORY__ = (smoothScroll),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) :\n\t\t\t\t__WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n  // CommonJS\n  } else {}\n\n})(this, function(){\n'use strict';\n\n// Do not initialize smoothScroll when running server side, handle it in client:\nif (typeof window !== 'object') return;\n\n// We do not want this script to be applied in browsers that do not support those\n// That means no smoothscroll on IE9 and below.\nif(document.querySelectorAll === void 0 || window.pageYOffset === void 0 || history.pushState === void 0) { return; }\n\n// Get the top position of an element in the document\nvar getTop = function(element, start) {\n    // return value of html.getBoundingClientRect().top ... IE : 0, other browsers : -pageYOffset\n    if(element.nodeName === 'HTML') return -start\n    return element.getBoundingClientRect().top + start\n}\n// ease in out function thanks to:\n// http://blog.greweb.fr/2012/02/bezier-curve-based-easing-functions-from-concept-to-implementation/\nvar easeInOutCubic = function (t) { return t<.5 ? 4*t*t*t : (t-1)*(2*t-2)*(2*t-2)+1 }\n\n// calculate the scroll position we should be in\n// given the start and end point of the scroll\n// the time elapsed from the beginning of the scroll\n// and the total duration of the scroll (default 500ms)\nvar position = function(start, end, elapsed, duration) {\n    if (elapsed > duration) return end;\n    return start + (end - start) * easeInOutCubic(elapsed / duration); // <-- you can change the easing funtion there\n    // return start + (end - start) * (elapsed / duration); // <-- this would give a linear scroll\n}\n\n// we use requestAnimationFrame to be called by the browser before every repaint\n// if the first argument is an element then scroll to the top of this element\n// if the first argument is numeric then scroll to this location\n// if the callback exist, it is called when the scrolling is finished\n// if context is set then scroll that element, else scroll window\nvar smoothScroll = function(el, duration, callback, context){\n    duration = duration || 500;\n    context = context || window;\n    var start = context.scrollTop || window.pageYOffset;\n\n    if (typeof el === 'number') {\n      var end = parseInt(el);\n    } else {\n      var end = getTop(el, start);\n    }\n\n    var clock = Date.now();\n    var requestAnimationFrame = window.requestAnimationFrame ||\n        window.mozRequestAnimationFrame || window.webkitRequestAnimationFrame ||\n        function(fn){window.setTimeout(fn, 15);};\n\n    var step = function(){\n        var elapsed = Date.now() - clock;\n        if (context !== window) {\n          context.scrollTop = position(start, end, elapsed, duration);\n        }\n        else {\n          window.scroll(0, position(start, end, elapsed, duration));\n        }\n\n        if (elapsed > duration) {\n            if (typeof callback === 'function') {\n                callback(el);\n            }\n        } else {\n            requestAnimationFrame(step);\n        }\n    }\n    step();\n}\n\nvar linkHandler = function(ev) {\n    if (!ev.defaultPrevented) {\n        ev.preventDefault();\n\n        if (location.hash !== this.hash) window.history.pushState(null, null, this.hash)\n        // using the history api to solve issue #1 - back doesn't work\n        // most browser don't update :target when the history api is used:\n        // THIS IS A BUG FROM THE BROWSERS.\n        // change the scrolling duration in this call\n        var node = document.getElementById(this.hash.substring(1))\n        if (!node) return; // Do not scroll to non-existing node\n\n        smoothScroll(node, 500, function (el) {\n            location.replace('#' + el.id)\n            // this will cause the :target to be activated.\n        });\n    }\n}\n\n// We look for all the internal links in the documents and attach the smoothscroll function\ndocument.addEventListener(\"DOMContentLoaded\", function () {\n    var internal = document.querySelectorAll('a[href^=\"#\"]:not([href=\"#\"])'), a;\n    for(var i=internal.length; a=internal[--i];){\n        a.addEventListener(\"click\", linkHandler, false);\n    }\n});\n\n// return smoothscroll API\nreturn smoothScroll;\n\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvc21vb3Roc2Nyb2xsL3Ntb290aHNjcm9sbC5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9zbW9vdGhzY3JvbGwvc21vb3Roc2Nyb2xsLmpzPzc0NzEiXSwic291cmNlc0NvbnRlbnQiOlsiKGZ1bmN0aW9uIChyb290LCBzbW9vdGhTY3JvbGwpIHtcbiAgJ3VzZSBzdHJpY3QnO1xuXG4gIC8vIFN1cHBvcnQgUmVxdWlyZUpTIGFuZCBDb21tb25KUy9Ob2RlSlMgbW9kdWxlIGZvcm1hdHMuXG4gIC8vIEF0dGFjaCBzbW9vdGhTY3JvbGwgdG8gdGhlIGB3aW5kb3dgIHdoZW4gZXhlY3V0ZWQgYXMgYSA8c2NyaXB0Pi5cblxuICAvLyBSZXF1aXJlSlNcbiAgaWYgKHR5cGVvZiBkZWZpbmUgPT09ICdmdW5jdGlvbicgJiYgZGVmaW5lLmFtZCkge1xuICAgIGRlZmluZShzbW9vdGhTY3JvbGwpO1xuXG4gIC8vIENvbW1vbkpTXG4gIH0gZWxzZSBpZiAodHlwZW9mIGV4cG9ydHMgPT09ICdvYmplY3QnICYmIHR5cGVvZiBtb2R1bGUgPT09ICdvYmplY3QnKSB7XG4gICAgbW9kdWxlLmV4cG9ydHMgPSBzbW9vdGhTY3JvbGwoKTtcblxuICB9IGVsc2Uge1xuICAgIHJvb3Quc21vb3RoU2Nyb2xsID0gc21vb3RoU2Nyb2xsKCk7XG4gIH1cblxufSkodGhpcywgZnVuY3Rpb24oKXtcbid1c2Ugc3RyaWN0JztcblxuLy8gRG8gbm90IGluaXRpYWxpemUgc21vb3RoU2Nyb2xsIHdoZW4gcnVubmluZyBzZXJ2ZXIgc2lkZSwgaGFuZGxlIGl0IGluIGNsaWVudDpcbmlmICh0eXBlb2Ygd2luZG93ICE9PSAnb2JqZWN0JykgcmV0dXJuO1xuXG4vLyBXZSBkbyBub3Qgd2FudCB0aGlzIHNjcmlwdCB0byBiZSBhcHBsaWVkIGluIGJyb3dzZXJzIHRoYXQgZG8gbm90IHN1cHBvcnQgdGhvc2Vcbi8vIFRoYXQgbWVhbnMgbm8gc21vb3Roc2Nyb2xsIG9uIElFOSBhbmQgYmVsb3cuXG5pZihkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsID09PSB2b2lkIDAgfHwgd2luZG93LnBhZ2VZT2Zmc2V0ID09PSB2b2lkIDAgfHwgaGlzdG9yeS5wdXNoU3RhdGUgPT09IHZvaWQgMCkgeyByZXR1cm47IH1cblxuLy8gR2V0IHRoZSB0b3AgcG9zaXRpb24gb2YgYW4gZWxlbWVudCBpbiB0aGUgZG9jdW1lbnRcbnZhciBnZXRUb3AgPSBmdW5jdGlvbihlbGVtZW50LCBzdGFydCkge1xuICAgIC8vIHJldHVybiB2YWx1ZSBvZiBodG1sLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpLnRvcCAuLi4gSUUgOiAwLCBvdGhlciBicm93c2VycyA6IC1wYWdlWU9mZnNldFxuICAgIGlmKGVsZW1lbnQubm9kZU5hbWUgPT09ICdIVE1MJykgcmV0dXJuIC1zdGFydFxuICAgIHJldHVybiBlbGVtZW50LmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpLnRvcCArIHN0YXJ0XG59XG4vLyBlYXNlIGluIG91dCBmdW5jdGlvbiB0aGFua3MgdG86XG4vLyBodHRwOi8vYmxvZy5ncmV3ZWIuZnIvMjAxMi8wMi9iZXppZXItY3VydmUtYmFzZWQtZWFzaW5nLWZ1bmN0aW9ucy1mcm9tLWNvbmNlcHQtdG8taW1wbGVtZW50YXRpb24vXG52YXIgZWFzZUluT3V0Q3ViaWMgPSBmdW5jdGlvbiAodCkgeyByZXR1cm4gdDwuNSA/IDQqdCp0KnQgOiAodC0xKSooMip0LTIpKigyKnQtMikrMSB9XG5cbi8vIGNhbGN1bGF0ZSB0aGUgc2Nyb2xsIHBvc2l0aW9uIHdlIHNob3VsZCBiZSBpblxuLy8gZ2l2ZW4gdGhlIHN0YXJ0IGFuZCBlbmQgcG9pbnQgb2YgdGhlIHNjcm9sbFxuLy8gdGhlIHRpbWUgZWxhcHNlZCBmcm9tIHRoZSBiZWdpbm5pbmcgb2YgdGhlIHNjcm9sbFxuLy8gYW5kIHRoZSB0b3RhbCBkdXJhdGlvbiBvZiB0aGUgc2Nyb2xsIChkZWZhdWx0IDUwMG1zKVxudmFyIHBvc2l0aW9uID0gZnVuY3Rpb24oc3RhcnQsIGVuZCwgZWxhcHNlZCwgZHVyYXRpb24pIHtcbiAgICBpZiAoZWxhcHNlZCA+IGR1cmF0aW9uKSByZXR1cm4gZW5kO1xuICAgIHJldHVybiBzdGFydCArIChlbmQgLSBzdGFydCkgKiBlYXNlSW5PdXRDdWJpYyhlbGFwc2VkIC8gZHVyYXRpb24pOyAvLyA8LS0geW91IGNhbiBjaGFuZ2UgdGhlIGVhc2luZyBmdW50aW9uIHRoZXJlXG4gICAgLy8gcmV0dXJuIHN0YXJ0ICsgKGVuZCAtIHN0YXJ0KSAqIChlbGFwc2VkIC8gZHVyYXRpb24pOyAvLyA8LS0gdGhpcyB3b3VsZCBnaXZlIGEgbGluZWFyIHNjcm9sbFxufVxuXG4vLyB3ZSB1c2UgcmVxdWVzdEFuaW1hdGlvbkZyYW1lIHRvIGJlIGNhbGxlZCBieSB0aGUgYnJvd3NlciBiZWZvcmUgZXZlcnkgcmVwYWludFxuLy8gaWYgdGhlIGZpcnN0IGFyZ3VtZW50IGlzIGFuIGVsZW1lbnQgdGhlbiBzY3JvbGwgdG8gdGhlIHRvcCBvZiB0aGlzIGVsZW1lbnRcbi8vIGlmIHRoZSBmaXJzdCBhcmd1bWVudCBpcyBudW1lcmljIHRoZW4gc2Nyb2xsIHRvIHRoaXMgbG9jYXRpb25cbi8vIGlmIHRoZSBjYWxsYmFjayBleGlzdCwgaXQgaXMgY2FsbGVkIHdoZW4gdGhlIHNjcm9sbGluZyBpcyBmaW5pc2hlZFxuLy8gaWYgY29udGV4dCBpcyBzZXQgdGhlbiBzY3JvbGwgdGhhdCBlbGVtZW50LCBlbHNlIHNjcm9sbCB3aW5kb3dcbnZhciBzbW9vdGhTY3JvbGwgPSBmdW5jdGlvbihlbCwgZHVyYXRpb24sIGNhbGxiYWNrLCBjb250ZXh0KXtcbiAgICBkdXJhdGlvbiA9IGR1cmF0aW9uIHx8IDUwMDtcbiAgICBjb250ZXh0ID0gY29udGV4dCB8fCB3aW5kb3c7XG4gICAgdmFyIHN0YXJ0ID0gY29udGV4dC5zY3JvbGxUb3AgfHwgd2luZG93LnBhZ2VZT2Zmc2V0O1xuXG4gICAgaWYgKHR5cGVvZiBlbCA9PT0gJ251bWJlcicpIHtcbiAgICAgIHZhciBlbmQgPSBwYXJzZUludChlbCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHZhciBlbmQgPSBnZXRUb3AoZWwsIHN0YXJ0KTtcbiAgICB9XG5cbiAgICB2YXIgY2xvY2sgPSBEYXRlLm5vdygpO1xuICAgIHZhciByZXF1ZXN0QW5pbWF0aW9uRnJhbWUgPSB3aW5kb3cucmVxdWVzdEFuaW1hdGlvbkZyYW1lIHx8XG4gICAgICAgIHdpbmRvdy5tb3pSZXF1ZXN0QW5pbWF0aW9uRnJhbWUgfHwgd2luZG93LndlYmtpdFJlcXVlc3RBbmltYXRpb25GcmFtZSB8fFxuICAgICAgICBmdW5jdGlvbihmbil7d2luZG93LnNldFRpbWVvdXQoZm4sIDE1KTt9O1xuXG4gICAgdmFyIHN0ZXAgPSBmdW5jdGlvbigpe1xuICAgICAgICB2YXIgZWxhcHNlZCA9IERhdGUubm93KCkgLSBjbG9jaztcbiAgICAgICAgaWYgKGNvbnRleHQgIT09IHdpbmRvdykge1xuICAgICAgICAgIGNvbnRleHQuc2Nyb2xsVG9wID0gcG9zaXRpb24oc3RhcnQsIGVuZCwgZWxhcHNlZCwgZHVyYXRpb24pO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgIHdpbmRvdy5zY3JvbGwoMCwgcG9zaXRpb24oc3RhcnQsIGVuZCwgZWxhcHNlZCwgZHVyYXRpb24pKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChlbGFwc2VkID4gZHVyYXRpb24pIHtcbiAgICAgICAgICAgIGlmICh0eXBlb2YgY2FsbGJhY2sgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgICAgICAgICBjYWxsYmFjayhlbCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICByZXF1ZXN0QW5pbWF0aW9uRnJhbWUoc3RlcCk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgc3RlcCgpO1xufVxuXG52YXIgbGlua0hhbmRsZXIgPSBmdW5jdGlvbihldikge1xuICAgIGlmICghZXYuZGVmYXVsdFByZXZlbnRlZCkge1xuICAgICAgICBldi5wcmV2ZW50RGVmYXVsdCgpO1xuXG4gICAgICAgIGlmIChsb2NhdGlvbi5oYXNoICE9PSB0aGlzLmhhc2gpIHdpbmRvdy5oaXN0b3J5LnB1c2hTdGF0ZShudWxsLCBudWxsLCB0aGlzLmhhc2gpXG4gICAgICAgIC8vIHVzaW5nIHRoZSBoaXN0b3J5IGFwaSB0byBzb2x2ZSBpc3N1ZSAjMSAtIGJhY2sgZG9lc24ndCB3b3JrXG4gICAgICAgIC8vIG1vc3QgYnJvd3NlciBkb24ndCB1cGRhdGUgOnRhcmdldCB3aGVuIHRoZSBoaXN0b3J5IGFwaSBpcyB1c2VkOlxuICAgICAgICAvLyBUSElTIElTIEEgQlVHIEZST00gVEhFIEJST1dTRVJTLlxuICAgICAgICAvLyBjaGFuZ2UgdGhlIHNjcm9sbGluZyBkdXJhdGlvbiBpbiB0aGlzIGNhbGxcbiAgICAgICAgdmFyIG5vZGUgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCh0aGlzLmhhc2guc3Vic3RyaW5nKDEpKVxuICAgICAgICBpZiAoIW5vZGUpIHJldHVybjsgLy8gRG8gbm90IHNjcm9sbCB0byBub24tZXhpc3Rpbmcgbm9kZVxuXG4gICAgICAgIHNtb290aFNjcm9sbChub2RlLCA1MDAsIGZ1bmN0aW9uIChlbCkge1xuICAgICAgICAgICAgbG9jYXRpb24ucmVwbGFjZSgnIycgKyBlbC5pZClcbiAgICAgICAgICAgIC8vIHRoaXMgd2lsbCBjYXVzZSB0aGUgOnRhcmdldCB0byBiZSBhY3RpdmF0ZWQuXG4gICAgICAgIH0pO1xuICAgIH1cbn1cblxuLy8gV2UgbG9vayBmb3IgYWxsIHRoZSBpbnRlcm5hbCBsaW5rcyBpbiB0aGUgZG9jdW1lbnRzIGFuZCBhdHRhY2ggdGhlIHNtb290aHNjcm9sbCBmdW5jdGlvblxuZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcIkRPTUNvbnRlbnRMb2FkZWRcIiwgZnVuY3Rpb24gKCkge1xuICAgIHZhciBpbnRlcm5hbCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJ2FbaHJlZl49XCIjXCJdOm5vdChbaHJlZj1cIiNcIl0pJyksIGE7XG4gICAgZm9yKHZhciBpPWludGVybmFsLmxlbmd0aDsgYT1pbnRlcm5hbFstLWldOyl7XG4gICAgICAgIGEuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIGxpbmtIYW5kbGVyLCBmYWxzZSk7XG4gICAgfVxufSk7XG5cbi8vIHJldHVybiBzbW9vdGhzY3JvbGwgQVBJXG5yZXR1cm4gc21vb3RoU2Nyb2xsO1xuXG59KTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0EsV0FLQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/smoothscroll/smoothscroll.js\n");

/***/ }),

/***/ "./node_modules/style-loader/lib/addStyles.js":
/*!****************************************************!*\
  !*** ./node_modules/style-loader/lib/addStyles.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\nvar stylesInDom = {};\n\nvar\tmemoize = function (fn) {\n\tvar memo;\n\n\treturn function () {\n\t\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\n\t\treturn memo;\n\t};\n};\n\nvar isOldIE = memoize(function () {\n\t// Test for IE <= 9 as proposed by Browserhacks\n\t// @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n\t// Tests for existence of standard globals is to allow style-loader\n\t// to operate correctly into non-standard environments\n\t// @see https://github.com/webpack-contrib/style-loader/issues/177\n\treturn window && document && document.all && !window.atob;\n});\n\nvar getTarget = function (target) {\n  return document.querySelector(target);\n};\n\nvar getElement = (function (fn) {\n\tvar memo = {};\n\n\treturn function(target) {\n                // If passing function in options, then use it for resolve \"head\" element.\n                // Useful for Shadow Root style i.e\n                // {\n                //   insertInto: function () { return document.querySelector(\"#foo\").shadowRoot }\n                // }\n                if (typeof target === 'function') {\n                        return target();\n                }\n                if (typeof memo[target] === \"undefined\") {\n\t\t\tvar styleTarget = getTarget.call(this, target);\n\t\t\t// Special case to return head of iframe instead of iframe itself\n\t\t\tif (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n\t\t\t\ttry {\n\t\t\t\t\t// This will throw an exception if access to iframe is blocked\n\t\t\t\t\t// due to cross-origin restrictions\n\t\t\t\t\tstyleTarget = styleTarget.contentDocument.head;\n\t\t\t\t} catch(e) {\n\t\t\t\t\tstyleTarget = null;\n\t\t\t\t}\n\t\t\t}\n\t\t\tmemo[target] = styleTarget;\n\t\t}\n\t\treturn memo[target]\n\t};\n})();\n\nvar singleton = null;\nvar\tsingletonCounter = 0;\nvar\tstylesInsertedAtTop = [];\n\nvar\tfixUrls = __webpack_require__(/*! ./urls */ \"./node_modules/style-loader/lib/urls.js\");\n\nmodule.exports = function(list, options) {\n\tif (typeof DEBUG !== \"undefined\" && DEBUG) {\n\t\tif (typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\n\t}\n\n\toptions = options || {};\n\n\toptions.attrs = typeof options.attrs === \"object\" ? options.attrs : {};\n\n\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n\t// tags it will allow on a page\n\tif (!options.singleton && typeof options.singleton !== \"boolean\") options.singleton = isOldIE();\n\n\t// By default, add <style> tags to the <head> element\n        if (!options.insertInto) options.insertInto = \"head\";\n\n\t// By default, add <style> tags to the bottom of the target\n\tif (!options.insertAt) options.insertAt = \"bottom\";\n\n\tvar styles = listToStyles(list, options);\n\n\taddStylesToDom(styles, options);\n\n\treturn function update (newList) {\n\t\tvar mayRemove = [];\n\n\t\tfor (var i = 0; i < styles.length; i++) {\n\t\t\tvar item = styles[i];\n\t\t\tvar domStyle = stylesInDom[item.id];\n\n\t\t\tdomStyle.refs--;\n\t\t\tmayRemove.push(domStyle);\n\t\t}\n\n\t\tif(newList) {\n\t\t\tvar newStyles = listToStyles(newList, options);\n\t\t\taddStylesToDom(newStyles, options);\n\t\t}\n\n\t\tfor (var i = 0; i < mayRemove.length; i++) {\n\t\t\tvar domStyle = mayRemove[i];\n\n\t\t\tif(domStyle.refs === 0) {\n\t\t\t\tfor (var j = 0; j < domStyle.parts.length; j++) domStyle.parts[j]();\n\n\t\t\t\tdelete stylesInDom[domStyle.id];\n\t\t\t}\n\t\t}\n\t};\n};\n\nfunction addStylesToDom (styles, options) {\n\tfor (var i = 0; i < styles.length; i++) {\n\t\tvar item = styles[i];\n\t\tvar domStyle = stylesInDom[item.id];\n\n\t\tif(domStyle) {\n\t\t\tdomStyle.refs++;\n\n\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\n\t\t\t\tdomStyle.parts[j](item.parts[j]);\n\t\t\t}\n\n\t\t\tfor(; j < item.parts.length; j++) {\n\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\t\t} else {\n\t\t\tvar parts = [];\n\n\t\t\tfor(var j = 0; j < item.parts.length; j++) {\n\t\t\t\tparts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\n\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\n\t\t}\n\t}\n}\n\nfunction listToStyles (list, options) {\n\tvar styles = [];\n\tvar newStyles = {};\n\n\tfor (var i = 0; i < list.length; i++) {\n\t\tvar item = list[i];\n\t\tvar id = options.base ? item[0] + options.base : item[0];\n\t\tvar css = item[1];\n\t\tvar media = item[2];\n\t\tvar sourceMap = item[3];\n\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\n\n\t\tif(!newStyles[id]) styles.push(newStyles[id] = {id: id, parts: [part]});\n\t\telse newStyles[id].parts.push(part);\n\t}\n\n\treturn styles;\n}\n\nfunction insertStyleElement (options, style) {\n\tvar target = getElement(options.insertInto)\n\n\tif (!target) {\n\t\tthrow new Error(\"Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.\");\n\t}\n\n\tvar lastStyleElementInsertedAtTop = stylesInsertedAtTop[stylesInsertedAtTop.length - 1];\n\n\tif (options.insertAt === \"top\") {\n\t\tif (!lastStyleElementInsertedAtTop) {\n\t\t\ttarget.insertBefore(style, target.firstChild);\n\t\t} else if (lastStyleElementInsertedAtTop.nextSibling) {\n\t\t\ttarget.insertBefore(style, lastStyleElementInsertedAtTop.nextSibling);\n\t\t} else {\n\t\t\ttarget.appendChild(style);\n\t\t}\n\t\tstylesInsertedAtTop.push(style);\n\t} else if (options.insertAt === \"bottom\") {\n\t\ttarget.appendChild(style);\n\t} else if (typeof options.insertAt === \"object\" && options.insertAt.before) {\n\t\tvar nextSibling = getElement(options.insertInto + \" \" + options.insertAt.before);\n\t\ttarget.insertBefore(style, nextSibling);\n\t} else {\n\t\tthrow new Error(\"[Style Loader]\\n\\n Invalid value for parameter 'insertAt' ('options.insertAt') found.\\n Must be 'top', 'bottom', or Object.\\n (https://github.com/webpack-contrib/style-loader#insertat)\\n\");\n\t}\n}\n\nfunction removeStyleElement (style) {\n\tif (style.parentNode === null) return false;\n\tstyle.parentNode.removeChild(style);\n\n\tvar idx = stylesInsertedAtTop.indexOf(style);\n\tif(idx >= 0) {\n\t\tstylesInsertedAtTop.splice(idx, 1);\n\t}\n}\n\nfunction createStyleElement (options) {\n\tvar style = document.createElement(\"style\");\n\n\tif(options.attrs.type === undefined) {\n\t\toptions.attrs.type = \"text/css\";\n\t}\n\n\taddAttrs(style, options.attrs);\n\tinsertStyleElement(options, style);\n\n\treturn style;\n}\n\nfunction createLinkElement (options) {\n\tvar link = document.createElement(\"link\");\n\n\tif(options.attrs.type === undefined) {\n\t\toptions.attrs.type = \"text/css\";\n\t}\n\toptions.attrs.rel = \"stylesheet\";\n\n\taddAttrs(link, options.attrs);\n\tinsertStyleElement(options, link);\n\n\treturn link;\n}\n\nfunction addAttrs (el, attrs) {\n\tObject.keys(attrs).forEach(function (key) {\n\t\tel.setAttribute(key, attrs[key]);\n\t});\n}\n\nfunction addStyle (obj, options) {\n\tvar style, update, remove, result;\n\n\t// If a transform function was defined, run it on the css\n\tif (options.transform && obj.css) {\n\t    result = options.transform(obj.css);\n\n\t    if (result) {\n\t    \t// If transform returns a value, use that instead of the original css.\n\t    \t// This allows running runtime transformations on the css.\n\t    \tobj.css = result;\n\t    } else {\n\t    \t// If the transform function returns a falsy value, don't add this css.\n\t    \t// This allows conditional loading of css\n\t    \treturn function() {\n\t    \t\t// noop\n\t    \t};\n\t    }\n\t}\n\n\tif (options.singleton) {\n\t\tvar styleIndex = singletonCounter++;\n\n\t\tstyle = singleton || (singleton = createStyleElement(options));\n\n\t\tupdate = applyToSingletonTag.bind(null, style, styleIndex, false);\n\t\tremove = applyToSingletonTag.bind(null, style, styleIndex, true);\n\n\t} else if (\n\t\tobj.sourceMap &&\n\t\ttypeof URL === \"function\" &&\n\t\ttypeof URL.createObjectURL === \"function\" &&\n\t\ttypeof URL.revokeObjectURL === \"function\" &&\n\t\ttypeof Blob === \"function\" &&\n\t\ttypeof btoa === \"function\"\n\t) {\n\t\tstyle = createLinkElement(options);\n\t\tupdate = updateLink.bind(null, style, options);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\n\t\t\tif(style.href) URL.revokeObjectURL(style.href);\n\t\t};\n\t} else {\n\t\tstyle = createStyleElement(options);\n\t\tupdate = applyToTag.bind(null, style);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\t\t};\n\t}\n\n\tupdate(obj);\n\n\treturn function updateStyle (newObj) {\n\t\tif (newObj) {\n\t\t\tif (\n\t\t\t\tnewObj.css === obj.css &&\n\t\t\t\tnewObj.media === obj.media &&\n\t\t\t\tnewObj.sourceMap === obj.sourceMap\n\t\t\t) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tupdate(obj = newObj);\n\t\t} else {\n\t\t\tremove();\n\t\t}\n\t};\n}\n\nvar replaceText = (function () {\n\tvar textStore = [];\n\n\treturn function (index, replacement) {\n\t\ttextStore[index] = replacement;\n\n\t\treturn textStore.filter(Boolean).join('\\n');\n\t};\n})();\n\nfunction applyToSingletonTag (style, index, remove, obj) {\n\tvar css = remove ? \"\" : obj.css;\n\n\tif (style.styleSheet) {\n\t\tstyle.styleSheet.cssText = replaceText(index, css);\n\t} else {\n\t\tvar cssNode = document.createTextNode(css);\n\t\tvar childNodes = style.childNodes;\n\n\t\tif (childNodes[index]) style.removeChild(childNodes[index]);\n\n\t\tif (childNodes.length) {\n\t\t\tstyle.insertBefore(cssNode, childNodes[index]);\n\t\t} else {\n\t\t\tstyle.appendChild(cssNode);\n\t\t}\n\t}\n}\n\nfunction applyToTag (style, obj) {\n\tvar css = obj.css;\n\tvar media = obj.media;\n\n\tif(media) {\n\t\tstyle.setAttribute(\"media\", media)\n\t}\n\n\tif(style.styleSheet) {\n\t\tstyle.styleSheet.cssText = css;\n\t} else {\n\t\twhile(style.firstChild) {\n\t\t\tstyle.removeChild(style.firstChild);\n\t\t}\n\n\t\tstyle.appendChild(document.createTextNode(css));\n\t}\n}\n\nfunction updateLink (link, options, obj) {\n\tvar css = obj.css;\n\tvar sourceMap = obj.sourceMap;\n\n\t/*\n\t\tIf convertToAbsoluteUrls isn't defined, but sourcemaps are enabled\n\t\tand there is no publicPath defined then lets turn convertToAbsoluteUrls\n\t\ton by default.  Otherwise default to the convertToAbsoluteUrls option\n\t\tdirectly\n\t*/\n\tvar autoFixUrls = options.convertToAbsoluteUrls === undefined && sourceMap;\n\n\tif (options.convertToAbsoluteUrls || autoFixUrls) {\n\t\tcss = fixUrls(css);\n\t}\n\n\tif (sourceMap) {\n\t\t// http://stackoverflow.com/a/26603875\n\t\tcss += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\n\t}\n\n\tvar blob = new Blob([css], { type: \"text/css\" });\n\n\tvar oldSrc = link.href;\n\n\tlink.href = URL.createObjectURL(blob);\n\n\tif(oldSrc) URL.revokeObjectURL(oldSrc);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/style-loader/lib/addStyles.js\n");

/***/ }),

/***/ "./node_modules/style-loader/lib/urls.js":
/*!***********************************************!*\
  !*** ./node_modules/style-loader/lib/urls.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("\n/**\n * When source maps are enabled, `style-loader` uses a link element with a data-uri to\n * embed the css on the page. This breaks all relative urls because now they are relative to a\n * bundle instead of the current page.\n *\n * One solution is to only use full urls, but that may be impossible.\n *\n * Instead, this function \"fixes\" the relative urls to be absolute according to the current page location.\n *\n * A rudimentary test suite is located at `test/fixUrls.js` and can be run via the `npm test` command.\n *\n */\n\nmodule.exports = function (css) {\n  // get current location\n  var location = typeof window !== \"undefined\" && window.location;\n\n  if (!location) {\n    throw new Error(\"fixUrls requires window.location\");\n  }\n\n\t// blank or null?\n\tif (!css || typeof css !== \"string\") {\n\t  return css;\n  }\n\n  var baseUrl = location.protocol + \"//\" + location.host;\n  var currentDir = baseUrl + location.pathname.replace(/\\/[^\\/]*$/, \"/\");\n\n\t// convert each url(...)\n\t/*\n\tThis regular expression is just a way to recursively match brackets within\n\ta string.\n\n\t /url\\s*\\(  = Match on the word \"url\" with any whitespace after it and then a parens\n\t   (  = Start a capturing group\n\t     (?:  = Start a non-capturing group\n\t         [^)(]  = Match anything that isn't a parentheses\n\t         |  = OR\n\t         \\(  = Match a start parentheses\n\t             (?:  = Start another non-capturing groups\n\t                 [^)(]+  = Match anything that isn't a parentheses\n\t                 |  = OR\n\t                 \\(  = Match a start parentheses\n\t                     [^)(]*  = Match anything that isn't a parentheses\n\t                 \\)  = Match a end parentheses\n\t             )  = End Group\n              *\\) = Match anything and then a close parens\n          )  = Close non-capturing group\n          *  = Match anything\n       )  = Close capturing group\n\t \\)  = Match a close parens\n\n\t /gi  = Get all matches, not the first.  Be case insensitive.\n\t */\n\tvar fixedCss = css.replace(/url\\s*\\(((?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)\\)/gi, function(fullMatch, origUrl) {\n\t\t// strip quotes (if they exist)\n\t\tvar unquotedOrigUrl = origUrl\n\t\t\t.trim()\n\t\t\t.replace(/^\"(.*)\"$/, function(o, $1){ return $1; })\n\t\t\t.replace(/^'(.*)'$/, function(o, $1){ return $1; });\n\n\t\t// already a full url? no change\n\t\tif (/^(#|data:|http:\\/\\/|https:\\/\\/|file:\\/\\/\\/|\\s*$)/i.test(unquotedOrigUrl)) {\n\t\t  return fullMatch;\n\t\t}\n\n\t\t// convert the url to a full url\n\t\tvar newUrl;\n\n\t\tif (unquotedOrigUrl.indexOf(\"//\") === 0) {\n\t\t  \t//TODO: should we add protocol?\n\t\t\tnewUrl = unquotedOrigUrl;\n\t\t} else if (unquotedOrigUrl.indexOf(\"/\") === 0) {\n\t\t\t// path should be relative to the base url\n\t\t\tnewUrl = baseUrl + unquotedOrigUrl; // already starts with '/'\n\t\t} else {\n\t\t\t// path should be relative to current directory\n\t\t\tnewUrl = currentDir + unquotedOrigUrl.replace(/^\\.\\//, \"\"); // Strip leading './'\n\t\t}\n\n\t\t// send back the fixed url(...)\n\t\treturn \"url(\" + JSON.stringify(newUrl) + \")\";\n\t});\n\n\t// send back the fixed css\n\treturn fixedCss;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2xpYi91cmxzLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9saWIvdXJscy5qcz9mNmQzIl0sInNvdXJjZXNDb250ZW50IjpbIlxuLyoqXG4gKiBXaGVuIHNvdXJjZSBtYXBzIGFyZSBlbmFibGVkLCBgc3R5bGUtbG9hZGVyYCB1c2VzIGEgbGluayBlbGVtZW50IHdpdGggYSBkYXRhLXVyaSB0b1xuICogZW1iZWQgdGhlIGNzcyBvbiB0aGUgcGFnZS4gVGhpcyBicmVha3MgYWxsIHJlbGF0aXZlIHVybHMgYmVjYXVzZSBub3cgdGhleSBhcmUgcmVsYXRpdmUgdG8gYVxuICogYnVuZGxlIGluc3RlYWQgb2YgdGhlIGN1cnJlbnQgcGFnZS5cbiAqXG4gKiBPbmUgc29sdXRpb24gaXMgdG8gb25seSB1c2UgZnVsbCB1cmxzLCBidXQgdGhhdCBtYXkgYmUgaW1wb3NzaWJsZS5cbiAqXG4gKiBJbnN0ZWFkLCB0aGlzIGZ1bmN0aW9uIFwiZml4ZXNcIiB0aGUgcmVsYXRpdmUgdXJscyB0byBiZSBhYnNvbHV0ZSBhY2NvcmRpbmcgdG8gdGhlIGN1cnJlbnQgcGFnZSBsb2NhdGlvbi5cbiAqXG4gKiBBIHJ1ZGltZW50YXJ5IHRlc3Qgc3VpdGUgaXMgbG9jYXRlZCBhdCBgdGVzdC9maXhVcmxzLmpzYCBhbmQgY2FuIGJlIHJ1biB2aWEgdGhlIGBucG0gdGVzdGAgY29tbWFuZC5cbiAqXG4gKi9cblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoY3NzKSB7XG4gIC8vIGdldCBjdXJyZW50IGxvY2F0aW9uXG4gIHZhciBsb2NhdGlvbiA9IHR5cGVvZiB3aW5kb3cgIT09IFwidW5kZWZpbmVkXCIgJiYgd2luZG93LmxvY2F0aW9uO1xuXG4gIGlmICghbG9jYXRpb24pIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJmaXhVcmxzIHJlcXVpcmVzIHdpbmRvdy5sb2NhdGlvblwiKTtcbiAgfVxuXG5cdC8vIGJsYW5rIG9yIG51bGw/XG5cdGlmICghY3NzIHx8IHR5cGVvZiBjc3MgIT09IFwic3RyaW5nXCIpIHtcblx0ICByZXR1cm4gY3NzO1xuICB9XG5cbiAgdmFyIGJhc2VVcmwgPSBsb2NhdGlvbi5wcm90b2NvbCArIFwiLy9cIiArIGxvY2F0aW9uLmhvc3Q7XG4gIHZhciBjdXJyZW50RGlyID0gYmFzZVVybCArIGxvY2F0aW9uLnBhdGhuYW1lLnJlcGxhY2UoL1xcL1teXFwvXSokLywgXCIvXCIpO1xuXG5cdC8vIGNvbnZlcnQgZWFjaCB1cmwoLi4uKVxuXHQvKlxuXHRUaGlzIHJlZ3VsYXIgZXhwcmVzc2lvbiBpcyBqdXN0IGEgd2F5IHRvIHJlY3Vyc2l2ZWx5IG1hdGNoIGJyYWNrZXRzIHdpdGhpblxuXHRhIHN0cmluZy5cblxuXHQgL3VybFxccypcXCggID0gTWF0Y2ggb24gdGhlIHdvcmQgXCJ1cmxcIiB3aXRoIGFueSB3aGl0ZXNwYWNlIGFmdGVyIGl0IGFuZCB0aGVuIGEgcGFyZW5zXG5cdCAgICggID0gU3RhcnQgYSBjYXB0dXJpbmcgZ3JvdXBcblx0ICAgICAoPzogID0gU3RhcnQgYSBub24tY2FwdHVyaW5nIGdyb3VwXG5cdCAgICAgICAgIFteKShdICA9IE1hdGNoIGFueXRoaW5nIHRoYXQgaXNuJ3QgYSBwYXJlbnRoZXNlc1xuXHQgICAgICAgICB8ICA9IE9SXG5cdCAgICAgICAgIFxcKCAgPSBNYXRjaCBhIHN0YXJ0IHBhcmVudGhlc2VzXG5cdCAgICAgICAgICAgICAoPzogID0gU3RhcnQgYW5vdGhlciBub24tY2FwdHVyaW5nIGdyb3Vwc1xuXHQgICAgICAgICAgICAgICAgIFteKShdKyAgPSBNYXRjaCBhbnl0aGluZyB0aGF0IGlzbid0IGEgcGFyZW50aGVzZXNcblx0ICAgICAgICAgICAgICAgICB8ICA9IE9SXG5cdCAgICAgICAgICAgICAgICAgXFwoICA9IE1hdGNoIGEgc3RhcnQgcGFyZW50aGVzZXNcblx0ICAgICAgICAgICAgICAgICAgICAgW14pKF0qICA9IE1hdGNoIGFueXRoaW5nIHRoYXQgaXNuJ3QgYSBwYXJlbnRoZXNlc1xuXHQgICAgICAgICAgICAgICAgIFxcKSAgPSBNYXRjaCBhIGVuZCBwYXJlbnRoZXNlc1xuXHQgICAgICAgICAgICAgKSAgPSBFbmQgR3JvdXBcbiAgICAgICAgICAgICAgKlxcKSA9IE1hdGNoIGFueXRoaW5nIGFuZCB0aGVuIGEgY2xvc2UgcGFyZW5zXG4gICAgICAgICAgKSAgPSBDbG9zZSBub24tY2FwdHVyaW5nIGdyb3VwXG4gICAgICAgICAgKiAgPSBNYXRjaCBhbnl0aGluZ1xuICAgICAgICkgID0gQ2xvc2UgY2FwdHVyaW5nIGdyb3VwXG5cdCBcXCkgID0gTWF0Y2ggYSBjbG9zZSBwYXJlbnNcblxuXHQgL2dpICA9IEdldCBhbGwgbWF0Y2hlcywgbm90IHRoZSBmaXJzdC4gIEJlIGNhc2UgaW5zZW5zaXRpdmUuXG5cdCAqL1xuXHR2YXIgZml4ZWRDc3MgPSBjc3MucmVwbGFjZSgvdXJsXFxzKlxcKCgoPzpbXikoXXxcXCgoPzpbXikoXSt8XFwoW14pKF0qXFwpKSpcXCkpKilcXCkvZ2ksIGZ1bmN0aW9uKGZ1bGxNYXRjaCwgb3JpZ1VybCkge1xuXHRcdC8vIHN0cmlwIHF1b3RlcyAoaWYgdGhleSBleGlzdClcblx0XHR2YXIgdW5xdW90ZWRPcmlnVXJsID0gb3JpZ1VybFxuXHRcdFx0LnRyaW0oKVxuXHRcdFx0LnJlcGxhY2UoL15cIiguKilcIiQvLCBmdW5jdGlvbihvLCAkMSl7IHJldHVybiAkMTsgfSlcblx0XHRcdC5yZXBsYWNlKC9eJyguKiknJC8sIGZ1bmN0aW9uKG8sICQxKXsgcmV0dXJuICQxOyB9KTtcblxuXHRcdC8vIGFscmVhZHkgYSBmdWxsIHVybD8gbm8gY2hhbmdlXG5cdFx0aWYgKC9eKCN8ZGF0YTp8aHR0cDpcXC9cXC98aHR0cHM6XFwvXFwvfGZpbGU6XFwvXFwvXFwvfFxccyokKS9pLnRlc3QodW5xdW90ZWRPcmlnVXJsKSkge1xuXHRcdCAgcmV0dXJuIGZ1bGxNYXRjaDtcblx0XHR9XG5cblx0XHQvLyBjb252ZXJ0IHRoZSB1cmwgdG8gYSBmdWxsIHVybFxuXHRcdHZhciBuZXdVcmw7XG5cblx0XHRpZiAodW5xdW90ZWRPcmlnVXJsLmluZGV4T2YoXCIvL1wiKSA9PT0gMCkge1xuXHRcdCAgXHQvL1RPRE86IHNob3VsZCB3ZSBhZGQgcHJvdG9jb2w/XG5cdFx0XHRuZXdVcmwgPSB1bnF1b3RlZE9yaWdVcmw7XG5cdFx0fSBlbHNlIGlmICh1bnF1b3RlZE9yaWdVcmwuaW5kZXhPZihcIi9cIikgPT09IDApIHtcblx0XHRcdC8vIHBhdGggc2hvdWxkIGJlIHJlbGF0aXZlIHRvIHRoZSBiYXNlIHVybFxuXHRcdFx0bmV3VXJsID0gYmFzZVVybCArIHVucXVvdGVkT3JpZ1VybDsgLy8gYWxyZWFkeSBzdGFydHMgd2l0aCAnLydcblx0XHR9IGVsc2Uge1xuXHRcdFx0Ly8gcGF0aCBzaG91bGQgYmUgcmVsYXRpdmUgdG8gY3VycmVudCBkaXJlY3Rvcnlcblx0XHRcdG5ld1VybCA9IGN1cnJlbnREaXIgKyB1bnF1b3RlZE9yaWdVcmwucmVwbGFjZSgvXlxcLlxcLy8sIFwiXCIpOyAvLyBTdHJpcCBsZWFkaW5nICcuLydcblx0XHR9XG5cblx0XHQvLyBzZW5kIGJhY2sgdGhlIGZpeGVkIHVybCguLi4pXG5cdFx0cmV0dXJuIFwidXJsKFwiICsgSlNPTi5zdHJpbmdpZnkobmV3VXJsKSArIFwiKVwiO1xuXHR9KTtcblxuXHQvLyBzZW5kIGJhY2sgdGhlIGZpeGVkIGNzc1xuXHRyZXR1cm4gZml4ZWRDc3M7XG59O1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/style-loader/lib/urls.js\n");

/***/ }),

/***/ "./node_modules/velocity-animate/velocity.js":
/*!***************************************************!*\
  !*** ./node_modules/velocity-animate/velocity.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*! VelocityJS.org (2.0.2) (C) 2014 Julian Shapiro. MIT @license: en.wikipedia.org/wiki/MIT_License */\n(function(root, factory) {\n\tif (true) {\n\t\t!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t} else {}\n}(this, function() {\n\nvar __assign = this && this.__assign || Object.assign || function(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n};\n\n/*\n * VelocityJS.org (C) 2014-2017 Julian Shapiro.\n *\n * Licensed under the MIT license. See LICENSE file in the project root for details.\n *\n * Constants and defaults. These values should never change without a MINOR\n * version bump.\n */\n//[\"completeCall\", \"CSS\", \"State\", \"getEasing\", \"Easings\", \"data\", \"debug\", \"defaults\", \"hook\", \"init\", \"mock\", \"pauseAll\", \"queue\", \"dequeue\", \"freeAnimationCall\", \"Redirects\", \"RegisterEffect\", \"resumeAll\", \"RunSequence\", \"lastTick\", \"tick\", \"timestamp\", \"expandTween\", \"version\"]\nvar PUBLIC_MEMBERS = [ \"version\", \"RegisterEffect\", \"style\", \"patch\", \"timestamp\" ];\n\n/**\n * Without this it will only un-prefix properties that have a valid \"normal\"\n * version.\n */ var ALL_VENDOR_PREFIXES = true;\n\nvar DURATION_FAST = 200;\n\nvar DURATION_NORMAL = 400;\n\nvar DURATION_SLOW = 600;\n\nvar FUZZY_MS_PER_SECOND = 980;\n\nvar DEFAULT_CACHE = true;\n\nvar DEFAULT_DELAY = 0;\n\nvar DEFAULT_DURATION = DURATION_NORMAL;\n\nvar DEFAULT_EASING = \"swing\";\n\nvar DEFAULT_FPSLIMIT = 60;\n\nvar DEFAULT_LOOP = 0;\n\nvar DEFAULT_PROMISE = true;\n\nvar DEFAULT_PROMISE_REJECT_EMPTY = true;\n\nvar DEFAULT_QUEUE = \"\";\n\nvar DEFAULT_REPEAT = 0;\n\nvar DEFAULT_SPEED = 1;\n\nvar DEFAULT_SYNC = true;\n\nvar TWEEN_NUMBER_REGEX = /[\\d\\.-]/;\n\nvar CLASSNAME = \"velocity-animating\";\n\nvar Duration = {\n    fast: DURATION_FAST,\n    normal: DURATION_NORMAL,\n    slow: DURATION_SLOW\n};\n\n/*\n * VelocityJS.org (C) 2014-2017 Julian Shapiro.\n *\n * Licensed under the MIT license. See LICENSE file in the project root for details.\n *\n * Runtime type checking methods.\n */ function isBoolean(variable) {\n    return variable === true || variable === false;\n}\n\nfunction isNumber(variable) {\n    return typeof variable === \"number\";\n}\n\n/**\n * Faster way to parse a string/number as a number https://jsperf.com/number-vs-parseint-vs-plus/3\n * @param variable The given string or number\n * @returns {variable is number} Returns boolean true if it is a number, false otherwise\n */ function isNumberWhenParsed(variable) {\n    return !isNaN(Number(variable));\n}\n\nfunction isString(variable) {\n    return typeof variable === \"string\";\n}\n\nfunction isFunction(variable) {\n    return Object.prototype.toString.call(variable) === \"[object Function]\";\n}\n\nfunction isNode(variable) {\n    return !!(variable && variable.nodeType);\n}\n\nfunction isVelocityResult(variable) {\n    return variable && isNumber(variable.length) && isFunction(variable.velocity);\n}\n\nfunction propertyIsEnumerable(object, property) {\n    return Object.prototype.propertyIsEnumerable.call(object, property);\n}\n\n/* Determine if variable is an array-like wrapped jQuery, Zepto or similar element, or even a NodeList etc. */\n/* NOTE: HTMLFormElements also have a length. */ function isWrapped(variable) {\n    return variable && variable !== window && isNumber(variable.length) && !isString(variable) && !isFunction(variable) && !isNode(variable) && (variable.length === 0 || isNode(variable[0]));\n}\n\nfunction isSVG(variable) {\n    return SVGElement && variable instanceof SVGElement;\n}\n\nfunction isPlainObject(variable) {\n    if (!variable || typeof variable !== \"object\" || variable.nodeType || Object.prototype.toString.call(variable) !== \"[object Object]\") {\n        return false;\n    }\n    var proto = Object.getPrototypeOf(variable);\n    return !proto || proto.hasOwnProperty(\"constructor\") && proto.constructor === Object;\n}\n\nfunction isEmptyObject(variable) {\n    for (var name_1 in variable) {\n        if (variable.hasOwnProperty(name_1)) {\n            return false;\n        }\n    }\n    return true;\n}\n\n/*\n * VelocityJS.org (C) 2014-2017 Julian Shapiro.\n *\n * Licensed under the MIT license. See LICENSE file in the project root for details.\n */\n/**\n * Creates an empty object without any prototype chain.\n */ function createEmptyObject() {\n    return Object.create(null);\n}\n\n/**\n * The <strong><code>defineProperty()</code></strong> function provides a\n * shortcut to defining a property that cannot be accidentally iterated across.\n */ function defineProperty(proto, name, value) {\n    if (proto) {\n        Object.defineProperty(proto, name, {\n            configurable: true,\n            writable: true,\n            value: value\n        });\n    }\n}\n\n/**\n * Shim to get the current milliseconds - on anything except old IE it'll use\n * Date.now() and save creating an object. If that doesn't exist then it'll\n * create one that gets GC.\n */ var _now = Date.now ? Date.now : function() {\n    return new Date().getTime();\n};\n\n/**\n * Check whether a value belongs to an array\n * https://jsperf.com/includes-vs-indexof-vs-while-loop/6\n * @param array The given array\n * @param value The given element to check if it is part of the array\n * @returns {boolean} True if it exists, false otherwise\n */ function _inArray(array, value) {\n    var i = 0;\n    while (i < array.length) {\n        if (array[i++] === value) {\n            return true;\n        }\n    }\n    return false;\n}\n\n/**\n * Convert an element or array-like element list into an array if needed.\n */ function sanitizeElements(elements) {\n    if (isNode(elements)) {\n        return [ elements ];\n    }\n    return elements;\n}\n\nfunction getValue(args) {\n    for (var i = 0, _args = arguments; i < _args.length; i++) {\n        var _arg = _args[i];\n        if (_arg !== undefined && _arg === _arg) {\n            return _arg;\n        }\n    }\n}\n\n/**\n * Add a single className to an Element.\n */ function addClass(element, className) {\n    if (element instanceof Element) {\n        if (element.classList) {\n            element.classList.add(className);\n        } else {\n            removeClass(element, className);\n            element.className += (element.className.length ? \" \" : \"\") + className;\n        }\n    }\n}\n\n/**\n * Remove a single className from an Element.\n */ function removeClass(element, className) {\n    if (element instanceof Element) {\n        if (element.classList) {\n            element.classList.remove(className);\n        } else {\n            // TODO: Need some jsperf tests on performance - can we get rid of the regex and maybe use split / array manipulation?\n            element.className = element.className.toString().replace(new RegExp(\"(^|\\\\s)\" + className + \"(\\\\s|$)\", \"gi\"), \" \");\n        }\n    }\n}\n\n/*\n * VelocityJS.org (C) 2014-2017 Julian Shapiro.\n *\n * Licensed under the MIT license. See LICENSE file in the project root for details.\n *\n * Actions that can be performed by passing a string instead of a propertiesMap.\n */ var VelocityStatic;\n\n(function(VelocityStatic) {\n    /**\n     * Actions cannot be replaced if they are internal (hasOwnProperty is false\n     * but they still exist). Otherwise they can be replaced by users.\n     *\n     * All external method calls should be using actions rather than sub-calls\n     * of Velocity itself.\n     */\n    VelocityStatic.Actions = createEmptyObject();\n    /**\n     * Used to register an action. This should never be called by users\n     * directly, instead it should be called via  an action:<br/>\n     * <code>Velocity(\"registerAction\", \"name\", VelocityActionFn);</code>\n     *\n     * @private\n     */    function registerAction(args, internal) {\n        var name = args[0], callback = args[1];\n        if (!isString(name)) {\n            console.warn(\"VelocityJS: Trying to set 'registerAction' name to an invalid value:\", name);\n        } else if (!isFunction(callback)) {\n            console.warn(\"VelocityJS: Trying to set 'registerAction' callback to an invalid value:\", name, callback);\n        } else if (VelocityStatic.Actions[name] && !propertyIsEnumerable(VelocityStatic.Actions, name)) {\n            console.warn(\"VelocityJS: Trying to override internal 'registerAction' callback\", name);\n        } else if (internal === true) {\n            defineProperty(VelocityStatic.Actions, name, callback);\n        } else {\n            VelocityStatic.Actions[name] = callback;\n        }\n    }\n    VelocityStatic.registerAction = registerAction;\n    registerAction([ \"registerAction\", registerAction ], true);\n})(VelocityStatic || (VelocityStatic = {}));\n\n///<reference path=\"actions.ts\" />\n/*\n * VelocityJS.org (C) 2014-2017 Julian Shapiro.\n *\n * Licensed under the MIT license. See LICENSE file in the project root for details.\n *\n * Default action.\n */ var VelocityStatic;\n\n(function(VelocityStatic) {\n    /**\n     * When the stop action is triggered, the elements' currently active call is immediately stopped. The active call might have\n     * been applied to multiple elements, in which case all of the call's elements will be stopped. When an element\n     * is stopped, the next item in its animation queue is immediately triggered.\n     * An additional argument may be passed in to clear an element's remaining queued calls. Either true (which defaults to the \"fx\" queue)\n     * or a custom queue string can be passed in.\n     * Note: The stop command runs prior to Velocity's Queueing phase since its behavior is intended to take effect *immediately*,\n     * regardless of the element's current queue state.\n     *\n     * @param {HTMLorSVGElement[]} elements The collection of HTML or SVG elements\n     * @param {StrictVelocityOptions} The strict Velocity options\n     * @param {Promise<HTMLorSVGElement[]>} An optional promise if the user uses promises\n     * @param {(value?: (HTMLorSVGElement[] | VelocityResult)) => void} resolver The resolve method of the promise\n     */\n    function defaultAction(args, elements, promiseHandler, action) {\n        // TODO: default is wrong, should be runSequence based, and needs all arguments\n        if (isString(action) && VelocityStatic.Redirects[action]) {\n            var options = isPlainObject(args[0]) ? args[0] : {}, opts_1 = __assign({}, options), durationOriginal_1 = parseFloat(options.duration), delayOriginal_1 = parseFloat(options.delay) || 0;\n            /* If the backwards option was passed in, reverse the element set so that elements animate from the last to the first. */            if (opts_1.backwards === true) {\n                elements = elements.reverse();\n            }\n            /* Individually trigger the redirect for each element in the set to prevent users from having to handle iteration logic in their redirect. */            elements.forEach(function(element, elementIndex) {\n                /* If the stagger option was passed in, successively delay each element by the stagger value (in ms). Retain the original delay value. */\n                if (parseFloat(opts_1.stagger)) {\n                    opts_1.delay = delayOriginal_1 + parseFloat(opts_1.stagger) * elementIndex;\n                } else if (isFunction(opts_1.stagger)) {\n                    opts_1.delay = delayOriginal_1 + opts_1.stagger.call(element, elementIndex, elements.length);\n                }\n                /* If the drag option was passed in, successively increase/decrease (depending on the presense of opts.backwards)\n                 the duration of each element's animation, using floors to prevent producing very short durations. */                if (opts_1.drag) {\n                    /* Default the duration of UI pack effects (callouts and transitions) to 1000ms instead of the usual default duration of 400ms. */\n                    opts_1.duration = durationOriginal_1 || (/^(callout|transition)/.test(action) ? 1e3 : DEFAULT_DURATION);\n                    /* For each element, take the greater duration of: A) animation completion percentage relative to the original duration,\n                     B) 75% of the original duration, or C) a 200ms fallback (in case duration is already set to a low value).\n                     The end result is a baseline of 75% of the redirect's duration that increases/decreases as the end of the element set is approached. */                    opts_1.duration = Math.max(opts_1.duration * (opts_1.backwards ? 1 - elementIndex / elements.length : (elementIndex + 1) / elements.length), opts_1.duration * .75, 200);\n                }\n                /* Pass in the call's opts object so that the redirect can optionally extend it. It defaults to an empty object instead of null to\n                 reduce the opts checking logic required inside the redirect. */                VelocityStatic.Redirects[action].call(element, element, opts_1, elementIndex, elements.length, elements, promiseHandler && promiseHandler._resolver);\n            });\n            /* Since the animation logic resides within the redirect's own code, abort the remainder of this call.\n             (The performance overhead up to this point is virtually non-existant.) */\n            /* Note: The jQuery call chain is kept intact by returning the complete element set. */        } else {\n            var abortError = \"Velocity: First argument (\" + action + \") was not a property map, a known action, or a registered redirect. Aborting.\";\n            if (promiseHandler) {\n                promiseHandler._rejecter(new Error(abortError));\n            } else if (window.console) {\n                console.log(abortError);\n            }\n        }\n    }\n    VelocityStatic.registerAction([ \"default\", defaultAction ], true);\n})(VelocityStatic || (VelocityStatic = {}));\n\n///<reference path=\"actions.ts\" />\n/*\n * VelocityJS.org (C) 2014-2017 Julian Shapiro.\n *\n * Licensed under the MIT license. See LICENSE file in the project root for details.\n *\n * Finish all animation.\n */ var VelocityStatic;\n\n(function(VelocityStatic) {\n    /**\n     * Check if an animation should be finished, and if so we set the tweens to\n     * the final value for it, then call complete.\n     */\n    function checkAnimationShouldBeFinished(animation, queueName, defaultQueue) {\n        VelocityStatic.validateTweens(animation);\n        if (queueName === undefined || queueName === getValue(animation.queue, animation.options.queue, defaultQueue)) {\n            if (!(animation._flags & 4 /* STARTED */)) {\n                // Copied from tick.ts - ensure that the animation is completely\n                // valid and run begin() before complete().\n                var options = animation.options;\n                // The begin callback is fired once per call, not once per\n                // element, and is passed the full raw DOM element set as both\n                // its context and its first argument.\n                                if (options._started++ === 0) {\n                    options._first = animation;\n                    if (options.begin) {\n                        // Pass to an external fn with a try/catch block for optimisation\n                        VelocityStatic.callBegin(animation);\n                        // Only called once, even if reversed or repeated\n                                                options.begin = undefined;\n                    }\n                }\n                animation._flags |= 4 /* STARTED */;\n            }\n            for (var property in animation.tweens) {\n                var tween_1 = animation.tweens[property], pattern = tween_1.pattern;\n                var currentValue = \"\", i = 0;\n                if (pattern) {\n                    for (;i < pattern.length; i++) {\n                        var endValue = tween_1.end[i];\n                        currentValue += endValue == null ? pattern[i] : endValue;\n                    }\n                }\n                VelocityStatic.CSS.setPropertyValue(animation.element, property, currentValue, tween_1.fn);\n            }\n            VelocityStatic.completeCall(animation);\n        }\n    }\n    /**\n     * When the finish action is triggered, the elements' currently active call is\n     * immediately finished. When an element is finished, the next item in its\n     * animation queue is immediately triggered. If passed via a chained call\n     * then this will only target the animations in that call, and not the\n     * elements linked to it.\n     *\n     * A queue name may be passed in to specify that only animations on the\n     * named queue are finished. The default queue is named \"\". In addition the\n     * value of `false` is allowed for the queue name.\n     *\n     * An final argument may be passed in to clear an element's remaining queued\n     * calls. This may only be the value `true`.\n     */    function finish(args, elements, promiseHandler) {\n        var queueName = validateQueue(args[0], true), defaultQueue = VelocityStatic.defaults.queue, finishAll = args[queueName === undefined ? 0 : 1] === true;\n        if (isVelocityResult(elements) && elements.velocity.animations) {\n            for (var i = 0, animations = elements.velocity.animations; i < animations.length; i++) {\n                checkAnimationShouldBeFinished(animations[i], queueName, defaultQueue);\n            }\n        } else {\n            var activeCall = VelocityStatic.State.first, nextCall = void 0;\n            while (activeCall = VelocityStatic.State.firstNew) {\n                VelocityStatic.validateTweens(activeCall);\n            }\n            for (activeCall = VelocityStatic.State.first; activeCall && (finishAll || activeCall !== VelocityStatic.State.firstNew); activeCall = nextCall || VelocityStatic.State.firstNew) {\n                nextCall = activeCall._next;\n                if (!elements || _inArray(elements, activeCall.element)) {\n                    checkAnimationShouldBeFinished(activeCall, queueName, defaultQueue);\n                }\n            }\n        }\n        if (promiseHandler) {\n            if (isVelocityResult(elements) && elements.velocity.animations && elements.then) {\n                elements.then(promiseHandler._resolver);\n            } else {\n                promiseHandler._resolver(elements);\n            }\n        }\n    }\n    VelocityStatic.registerAction([ \"finish\", finish ], true);\n})(VelocityStatic || (VelocityStatic = {}));\n\n///<reference path=\"actions.ts\" />\n/*\n * VelocityJS.org (C) 2014-2017 Julian Shapiro.\n *\n * Licensed under the MIT license. See LICENSE file in the project root for details.\n *\n * Get or set a value from one or more running animations.\n */ var VelocityStatic;\n\n(function(VelocityStatic) {\n    /**\n     * Used to map getters for the various AnimationFlags.\n     */\n    var animationFlags = {\n        isExpanded: 1 /* EXPANDED */ ,\n        isReady: 2 /* READY */ ,\n        isStarted: 4 /* STARTED */ ,\n        isStopped: 8 /* STOPPED */ ,\n        isPaused: 16 /* PAUSED */ ,\n        isSync: 32 /* SYNC */ ,\n        isReverse: 64\n /* REVERSE */    };\n    /**\n     * Get or set an option or running AnimationCall data value. If there is no\n     * value passed then it will get, otherwise we will set.\n     *\n     * NOTE: When using \"get\" this will not touch the Promise as it is never\n     * returned to the user.\n     */    function option(args, elements, promiseHandler, action) {\n        var key = args[0], queue = action.indexOf(\".\") >= 0 ? action.replace(/^.*\\./, \"\") : undefined, queueName = queue === \"false\" ? false : validateQueue(queue, true);\n        var animations, value = args[1];\n        if (!key) {\n            console.warn(\"VelocityJS: Cannot access a non-existant key!\");\n            return null;\n        }\n        // If we're chaining the return value from Velocity then we are only\n        // interested in the values related to that call\n                if (isVelocityResult(elements) && elements.velocity.animations) {\n            animations = elements.velocity.animations;\n        } else {\n            animations = [];\n            for (var activeCall = VelocityStatic.State.first; activeCall; activeCall = activeCall._next) {\n                if (elements.indexOf(activeCall.element) >= 0 && getValue(activeCall.queue, activeCall.options.queue) === queueName) {\n                    animations.push(activeCall);\n                }\n            }\n            // If we're dealing with multiple elements that are pointing at a\n            // single running animation, then instead treat them as a single\n            // animation.\n                        if (elements.length > 1 && animations.length > 1) {\n                var i = 1, options = animations[0].options;\n                while (i < animations.length) {\n                    if (animations[i++].options !== options) {\n                        options = null;\n                        break;\n                    }\n                }\n                // TODO: this needs to check that they're actually a sync:true animation to merge the results, otherwise the individual values may be different\n                                if (options) {\n                    animations = [ animations[0] ];\n                }\n            }\n        }\n        // GET\n                if (value === undefined) {\n            var result = [], flag = animationFlags[key];\n            for (var i = 0; i < animations.length; i++) {\n                if (flag === undefined) {\n                    // A normal key to get.\n                    result.push(getValue(animations[i][key], animations[i].options[key]));\n                } else {\n                    // A flag that we're checking against.\n                    result.push((animations[i]._flags & flag) === 0);\n                }\n            }\n            if (elements.length === 1 && animations.length === 1) {\n                // If only a single animation is found and we're only targetting a\n                // single element, then return the value directly\n                return result[0];\n            }\n            return result;\n        }\n        // SET\n                var isPercentComplete;\n        switch (key) {\n          case \"cache\":\n            value = validateCache(value);\n            break;\n\n          case \"begin\":\n            value = validateBegin(value);\n            break;\n\n          case \"complete\":\n            value = validateComplete(value);\n            break;\n\n          case \"delay\":\n            value = validateDelay(value);\n            break;\n\n          case \"duration\":\n            value = validateDuration(value);\n            break;\n\n          case \"fpsLimit\":\n            value = validateFpsLimit(value);\n            break;\n\n          case \"loop\":\n            value = validateLoop(value);\n            break;\n\n          case \"percentComplete\":\n            isPercentComplete = true;\n            value = parseFloat(value);\n            break;\n\n          case \"repeat\":\n          case \"repeatAgain\":\n            value = validateRepeat(value);\n            break;\n\n          default:\n            if (key[0] !== \"_\") {\n                var num = parseFloat(value);\n                if (value == num) {\n                    value = num;\n                }\n                break;\n            }\n\n            // deliberate fallthrough\n                      case \"queue\":\n          case \"promise\":\n          case \"promiseRejectEmpty\":\n          case \"easing\":\n          case \"started\":\n            console.warn(\"VelocityJS: Trying to set a read-only key:\", key);\n            return;\n        }\n        if (value === undefined || value !== value) {\n            console.warn(\"VelocityJS: Trying to set an invalid value:\", key, \"=\", value, \"(\" + args[1] + \")\");\n            return null;\n        }\n        for (var i = 0; i < animations.length; i++) {\n            var animation = animations[i];\n            if (isPercentComplete) {\n                animation.timeStart = VelocityStatic.lastTick - getValue(animation.duration, animation.options.duration, VelocityStatic.defaults.duration) * value;\n            } else {\n                animation[key] = value;\n            }\n        }\n        if (promiseHandler) {\n            if (isVelocityResult(elements) && elements.velocity.animations && elements.then) {\n                elements.then(promiseHandler._resolver);\n            } else {\n                promiseHandler._resolver(elements);\n            }\n        }\n    }\n    VelocityStatic.registerAction([ \"option\", option ], true);\n})(VelocityStatic || (VelocityStatic = {}));\n\n///<reference path=\"actions.ts\" />\n/*\n * VelocityJS.org (C) 2014-2017 Julian Shapiro.\n *\n * Licensed under the MIT license. See LICENSE file in the project root for details.\n *\n * Pause and resume animation.\n */ var VelocityStatic;\n\n(function(VelocityStatic) {\n    /**\n     * Check if an animation should be paused / resumed.\n     */\n    function checkAnimation(animation, queueName, defaultQueue, isPaused) {\n        if (queueName === undefined || queueName === getValue(animation.queue, animation.options.queue, defaultQueue)) {\n            if (isPaused) {\n                animation._flags |= 16 /* PAUSED */;\n            } else {\n                animation._flags &= ~16 /* PAUSED */;\n            }\n        }\n    }\n    /**\n     * Pause and Resume are call-wide (not on a per element basis). Thus, calling pause or resume on a\n     * single element will cause any calls that contain tweens for that element to be paused/resumed\n     * as well.\n     */\n    function pauseResume(args, elements, promiseHandler, action) {\n        var isPaused = action.indexOf(\"pause\") === 0, queue = action.indexOf(\".\") >= 0 ? action.replace(/^.*\\./, \"\") : undefined, queueName = queue === \"false\" ? false : validateQueue(args[0]), defaultQueue = VelocityStatic.defaults.queue;\n        if (isVelocityResult(elements) && elements.velocity.animations) {\n            for (var i = 0, animations = elements.velocity.animations; i < animations.length; i++) {\n                checkAnimation(animations[i], queueName, defaultQueue, isPaused);\n            }\n        } else {\n            var activeCall = VelocityStatic.State.first;\n            while (activeCall) {\n                if (!elements || _inArray(elements, activeCall.element)) {\n                    checkAnimation(activeCall, queueName, defaultQueue, isPaused);\n                }\n                activeCall = activeCall._next;\n            }\n        }\n        if (promiseHandler) {\n            if (isVelocityResult(elements) && elements.velocity.animations && elements.then) {\n                elements.then(promiseHandler._resolver);\n            } else {\n                promiseHandler._resolver(elements);\n            }\n        }\n    }\n    VelocityStatic.registerAction([ \"pause\", pauseResume ], true);\n    VelocityStatic.registerAction([ \"resume\", pauseResume ], true);\n})(VelocityStatic || (VelocityStatic = {}));\n\n///<reference path=\"actions.ts\" />\n/*\n * VelocityJS.org (C) 2014-2017 Julian Shapiro.\n *\n * Licensed under the MIT license. See LICENSE file in the project root for details.\n *\n * Actions that can be performed by passing a string instead of a propertiesMap.\n */ var VelocityStatic;\n\n(function(VelocityStatic) {\n    VelocityStatic.registerAction([ \"reverse\", function(args, elements, promiseHandler, action) {\n        // TODO: Code needs to split out before here - but this is needed to prevent it being overridden\n        throw new SyntaxError(\"VelocityJS: The 'reverse' action is private.\");\n    } ], true);\n})(VelocityStatic || (VelocityStatic = {}));\n\n///<reference path=\"actions.ts\" />\n/*\n * VelocityJS.org (C) 2014-2017 Julian Shapiro.\n *\n * Licensed under the MIT license. See LICENSE file in the project root for details.\n *\n * Stop animation.\n */ var VelocityStatic;\n\n(function(VelocityStatic) {\n    /**\n     * Check if an animation should be stopped, and if so then set the STOPPED\n     * flag on it, then call complete.\n     */\n    function checkAnimationShouldBeStopped(animation, queueName, defaultQueue) {\n        VelocityStatic.validateTweens(animation);\n        if (queueName === undefined || queueName === getValue(animation.queue, animation.options.queue, defaultQueue)) {\n            animation._flags |= 8 /* STOPPED */;\n            VelocityStatic.completeCall(animation);\n        }\n    }\n    /**\n     * When the stop action is triggered, the elements' currently active call is\n     * immediately stopped. When an element is stopped, the next item in its\n     * animation queue is immediately triggered. If passed via a chained call\n     * then this will only target the animations in that call, and not the\n     * elements linked to it.\n     *\n     * A queue name may be passed in to specify that only animations on the\n     * named queue are stopped. The default queue is named \"\". In addition the\n     * value of `false` is allowed for the queue name.\n     *\n     * An final argument may be passed in to clear an element's remaining queued\n     * calls. This may only be the value `true`.\n     *\n     * Note: The stop command runs prior to Velocity's Queueing phase since its\n     * behavior is intended to take effect *immediately*, regardless of the\n     * element's current queue state.\n     */    function stop(args, elements, promiseHandler, action) {\n        var queueName = validateQueue(args[0], true), defaultQueue = VelocityStatic.defaults.queue, finishAll = args[queueName === undefined ? 0 : 1] === true;\n        if (isVelocityResult(elements) && elements.velocity.animations) {\n            for (var i = 0, animations = elements.velocity.animations; i < animations.length; i++) {\n                checkAnimationShouldBeStopped(animations[i], queueName, defaultQueue);\n            }\n        } else {\n            var activeCall = VelocityStatic.State.first, nextCall = void 0;\n            while (activeCall = VelocityStatic.State.firstNew) {\n                VelocityStatic.validateTweens(activeCall);\n            }\n            for (activeCall = VelocityStatic.State.first; activeCall && (finishAll || activeCall !== VelocityStatic.State.firstNew); activeCall = nextCall || VelocityStatic.State.firstNew) {\n                nextCall = activeCall._next;\n                if (!elements || _inArray(elements, activeCall.element)) {\n                    checkAnimationShouldBeStopped(activeCall, queueName, defaultQueue);\n                }\n            }\n        }\n        if (promiseHandler) {\n            if (isVelocityResult(elements) && elements.velocity.animations && elements.then) {\n                elements.then(promiseHandler._resolver);\n            } else {\n                promiseHandler._resolver(elements);\n            }\n        }\n    }\n    VelocityStatic.registerAction([ \"stop\", stop ], true);\n})(VelocityStatic || (VelocityStatic = {}));\n\n///<reference path=\"actions.ts\" />\n/*\n * VelocityJS.org (C) 2014-2017 Julian Shapiro.\n *\n * Licensed under the MIT license. See LICENSE file in the project root for details.\n *\n * Get or set a property from one or more elements.\n */ var VelocityStatic;\n\n(function(VelocityStatic) {\n    function style(elements, property, value) {\n        return styleAction([ property, value ], elements);\n    }\n    VelocityStatic.style = style;\n    /**\n     * Get or set a style of Nomralised property value on one or more elements.\n     * If there is no value passed then it will get, otherwise we will set.\n     *\n     * NOTE: When using \"get\" this will not touch the Promise as it is never\n     * returned to the user.\n     *\n     * This can fail to set, and will reject the Promise if it does so.\n     *\n     * Velocity(elements, \"style\", \"property\", \"value\") => elements;\n     * Velocity(elements, \"style\", {\"property\": \"value\", ...}) => elements;\n     * Velocity(element, \"style\", \"property\") => \"value\";\n     * Velocity(elements, \"style\", \"property\") => [\"value\", ...];\n     */    function styleAction(args, elements, promiseHandler, action) {\n        var property = args[0], value = args[1];\n        if (!property) {\n            console.warn(\"VelocityJS: Cannot access a non-existant property!\");\n            return null;\n        }\n        // GET\n                if (value === undefined && !isPlainObject(property)) {\n            // If only a single animation is found and we're only targetting a\n            // single element, then return the value directly\n            if (elements.length === 1) {\n                return VelocityStatic.CSS.fixColors(VelocityStatic.CSS.getPropertyValue(elements[0], property));\n            }\n            var result = [];\n            for (var i = 0; i < elements.length; i++) {\n                result.push(VelocityStatic.CSS.fixColors(VelocityStatic.CSS.getPropertyValue(elements[i], property)));\n            }\n            return result;\n        }\n        // SET\n                var error;\n        if (isPlainObject(property)) {\n            for (var propertyName in property) {\n                for (var i = 0; i < elements.length; i++) {\n                    var value_1 = property[propertyName];\n                    if (isString(value_1) || isNumber(value_1)) {\n                        VelocityStatic.CSS.setPropertyValue(elements[i], propertyName, property[propertyName]);\n                    } else {\n                        error = (error ? error + \", \" : \"\") + \"Cannot set a property '\" + propertyName + \"' to an unknown type: \" + typeof value_1;\n                        console.warn(\"VelocityJS: Cannot set a property '\" + propertyName + \"' to an unknown type:\", value_1);\n                    }\n                }\n            }\n        } else if (isString(value) || isNumber(value)) {\n            for (var i = 0; i < elements.length; i++) {\n                VelocityStatic.CSS.setPropertyValue(elements[i], property, String(value));\n            }\n        } else {\n            error = \"Cannot set a property '\" + property + \"' to an unknown type: \" + typeof value;\n            console.warn(\"VelocityJS: Cannot set a property '\" + property + \"' to an unknown type:\", value);\n        }\n        if (promiseHandler) {\n            if (error) {\n                promiseHandler._rejecter(error);\n            } else if (isVelocityResult(elements) && elements.velocity.animations && elements.then) {\n                elements.then(promiseHandler._resolver);\n            } else {\n                promiseHandler._resolver(elements);\n            }\n        }\n    }\n    VelocityStatic.registerAction([ \"style\", styleAction ], true);\n})(VelocityStatic || (VelocityStatic = {}));\n\n///<reference path=\"actions.ts\" />\n/*\n * VelocityJS.org (C) 2014-2017 Julian Shapiro.\n *\n * Licensed under the MIT license. See LICENSE file in the project root for details.\n *\n * Get or set a property from one or more elements.\n */ var VelocityStatic;\n\n(function(VelocityStatic) {\n    function tween(elements, percentComplete, properties, property, easing) {\n        return tweenAction(arguments, elements);\n    }\n    VelocityStatic.tween = tween;\n    /**\n     *\n     */    function tweenAction(args, elements, promiseHandler, action) {\n        var requireForcefeeding;\n        if (!elements) {\n            if (!args.length) {\n                console.info('Velocity(<element>, \"tween\", percentComplete, property, end | [end, <easing>, <start>], <easing>) => value\\n' + 'Velocity(<element>, \"tween\", percentComplete, {property: end | [end, <easing>, <start>], ...}, <easing>) => {property: value, ...}');\n                return null;\n            }\n            elements = [ document.body ];\n            requireForcefeeding = true;\n        } else if (elements.length !== 1) {\n            // TODO: Allow more than a single element to return an array of results\n            throw new Error(\"VelocityJS: Cannot tween more than one element!\");\n        }\n        var percentComplete = args[0], fakeAnimation = {\n            elements: elements,\n            element: elements[0],\n            queue: false,\n            options: {\n                duration: 1e3\n            },\n            tweens: null\n        }, result = {};\n        var properties = args[1], singleResult, easing = args[2], count = 0;\n        if (isString(args[1])) {\n            singleResult = true;\n            properties = (_a = {}, _a[args[1]] = args[2], _a);\n            easing = args[3];\n        } else if (Array.isArray(args[1])) {\n            singleResult = true;\n            properties = {\n                tween: args[1]\n            };\n            easing = args[2];\n        }\n        if (!isNumber(percentComplete) || percentComplete < 0 || percentComplete > 1) {\n            throw new Error(\"VelocityJS: Must tween a percentage from 0 to 1!\");\n        }\n        if (!isPlainObject(properties)) {\n            throw new Error(\"VelocityJS: Cannot tween an invalid property!\");\n        }\n        if (requireForcefeeding) {\n            for (var property in properties) {\n                if (properties.hasOwnProperty(property) && (!Array.isArray(properties[property]) || properties[property].length < 2)) {\n                    throw new Error(\"VelocityJS: When not supplying an element you must force-feed values: \" + property);\n                }\n            }\n        }\n        var activeEasing = validateEasing(getValue(easing, VelocityStatic.defaults.easing), 1e3);\n        VelocityStatic.expandProperties(fakeAnimation, properties);\n        for (var property in fakeAnimation.tweens) {\n            // For every element, iterate through each property.\n            var tween_2 = fakeAnimation.tweens[property], easing_1 = tween_2.easing || activeEasing, pattern = tween_2.pattern;\n            var currentValue = \"\";\n            count++;\n            if (pattern) {\n                for (var i = 0; i < pattern.length; i++) {\n                    var startValue = tween_2.start[i];\n                    if (startValue == null) {\n                        currentValue += pattern[i];\n                    } else {\n                        var result_1 = easing_1(percentComplete, startValue, tween_2.end[i], property);\n                        currentValue += pattern[i] === true ? Math.round(result_1) : result_1;\n                    }\n                }\n            }\n            result[property] = currentValue;\n        }\n        if (singleResult && count === 1) {\n            for (var property in result) {\n                if (result.hasOwnProperty(property)) {\n                    return result[property];\n                }\n            }\n        }\n        return result;\n        var _a;\n    }\n    VelocityStatic.registerAction([ \"tween\", tweenAction ], true);\n})(VelocityStatic || (VelocityStatic = {}));\n\n/*\n * VelocityJS.org (C) 2014-2017 Julian Shapiro.\n *\n * Licensed under the MIT license. See LICENSE file in the project root for details.\n */ var VelocityStatic;\n\n(function(VelocityStatic) {\n    /**\n     * Container for page-wide Velocity state data.\n     */\n    var State;\n    (function(State) {\n        /**\n         * Detect if this is a NodeJS or web browser\n         */\n        State.isClient = window && window === window.window,\n        /**\n         * Detect mobile devices to determine if mobileHA should be turned\n         * on.\n         */\n        State.isMobile = State.isClient && /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent),\n        /**\n         * The mobileHA option's behavior changes on older Android devices\n         * (Gingerbread, versions 2.3.3-2.3.7).\n         */\n        State.isAndroid = State.isClient && /Android/i.test(navigator.userAgent),\n        /**\n         * The mobileHA option's behavior changes on older Android devices\n         * (Gingerbread, versions 2.3.3-2.3.7).\n         */\n        State.isGingerbread = State.isClient && /Android 2\\.3\\.[3-7]/i.test(navigator.userAgent),\n        /**\n         * Chrome browser\n         */\n        State.isChrome = State.isClient && window.chrome,\n        /**\n         * Firefox browser\n         */\n        State.isFirefox = State.isClient && /Firefox/i.test(navigator.userAgent),\n        /**\n         * Create a cached element for re-use when checking for CSS property\n         * prefixes.\n         */\n        State.prefixElement = State.isClient && document.createElement(\"div\"),\n        /**\n         * Retrieve the appropriate scroll anchor and property name for the\n         * browser: https://developer.mozilla.org/en-US/docs/Web/API/Window.scrollY\n         */\n        State.windowScrollAnchor = State.isClient && window.pageYOffset !== undefined,\n        /**\n         * Cache the anchor used for animating window scrolling.\n         */\n        State.scrollAnchor = State.windowScrollAnchor ? window : !State.isClient || document.documentElement || document.body.parentNode || document.body,\n        /**\n         * Cache the browser-specific property names associated with the\n         * scroll anchor.\n         */\n        State.scrollPropertyLeft = State.windowScrollAnchor ? \"pageXOffset\" : \"scrollLeft\",\n        /**\n         * Cache the browser-specific property names associated with the\n         * scroll anchor.\n         */\n        State.scrollPropertyTop = State.windowScrollAnchor ? \"pageYOffset\" : \"scrollTop\",\n        /**\n         * The className we add / remove when animating.\n         */\n        State.className = CLASSNAME,\n        /**\n         * Keep track of whether our RAF tick is running.\n         */\n        State.isTicking = false;\n    })(State = VelocityStatic.State || (VelocityStatic.State = {}));\n})(VelocityStatic || (VelocityStatic = {}));\n\n///<reference path=\"../state.ts\" />\n/*\n * VelocityJS.org (C) 2014-2017 Julian Shapiro.\n *\n * Licensed under the MIT license. See LICENSE file in the project root for details.\n */\nvar VelocityStatic;\n\n(function(VelocityStatic) {\n    var CSS;\n    (function(CSS) {\n        /**\n         * Cache every camelCase match to avoid repeating lookups.\n         */\n        var cache = createEmptyObject();\n        /**\n         * Camelcase a property name into its JavaScript notation (e.g.\n         * \"background-color\" ==> \"backgroundColor\"). Camelcasing is used to\n         * normalize property names between and across calls.\n         */        function camelCase(property) {\n            var fixed = cache[property];\n            if (fixed) {\n                return fixed;\n            }\n            return cache[property] = property.replace(/-([a-z])/g, function($, letter) {\n                return letter.toUpperCase();\n            });\n        }\n        CSS.camelCase = camelCase;\n    })(CSS = VelocityStatic.CSS || (VelocityStatic.CSS = {}));\n})(VelocityStatic || (VelocityStatic = {}));\n\n/*\n * VelocityJS.org (C) 2014-2017 Julian Shapiro.\n *\n * Licensed under the MIT license. See LICENSE file in the project root for details.\n */ var VelocityStatic;\n\n(function(VelocityStatic) {\n    var CSS;\n    (function(CSS) {\n        /**\n         * This is the list of color names -> rgb values. The object is in here so\n         * that the actual name conversion can be in a separate file and not\n         * included for custom builds.\n         */\n        CSS.ColorNames = createEmptyObject();\n        /**\n         * Convert a hex list to an rgba value. Designed to be used in replace.\n         */        function makeRGBA(ignore, r, g, b) {\n            return \"rgba(\" + parseInt(r, 16) + \",\" + parseInt(g, 16) + \",\" + parseInt(b, 16) + \",1)\";\n        }\n        var rxColor6 = /#([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})/gi, rxColor3 = /#([a-f\\d])([a-f\\d])([a-f\\d])/gi, rxColorName = /(rgba?\\(\\s*)?(\\b[a-z]+\\b)/g, rxRGB = /rgb(a?)\\(([^\\)]+)\\)/gi, rxSpaces = /\\s+/g;\n        /**\n         * Replace any css colour name with its rgba() value. It is possible to use\n         * the name within an \"rgba(blue, 0.4)\" string this way.\n         */        function fixColors(str) {\n            return str.replace(rxColor6, makeRGBA).replace(rxColor3, function($0, r, g, b) {\n                return makeRGBA($0, r + r, g + g, b + b);\n            }).replace(rxColorName, function($0, $1, $2) {\n                if (CSS.ColorNames[$2]) {\n                    return ($1 ? $1 : \"rgba(\") + CSS.ColorNames[$2] + ($1 ? \"\" : \",1)\");\n                }\n                return $0;\n            }).replace(rxRGB, function($0, $1, $2) {\n                return \"rgba(\" + $2.replace(rxSpaces, \"\") + ($1 ? \"\" : \",1\") + \")\";\n            });\n        }\n        CSS.fixColors = fixColors;\n    })(CSS = VelocityStatic.CSS || (VelocityStatic.CSS = {}));\n})(VelocityStatic || (VelocityStatic = {}));\n\n///<reference path=\"fixColors.ts\" />\n/*\n * VelocityJS.org (C) 2014-2017 Julian Shapiro.\n *\n * Licensed under the MIT license. See LICENSE file in the project root for details.\n */ var VelocityStatic;\n\n(function(VelocityStatic) {\n    var CSS;\n    (function(CSS) {\n        // Converting from hex as it makes for a smaller file.\n        // TODO: When build system changes to webpack, make this one optional.\n        var colorValues = {\n            aliceblue: 15792383,\n            antiquewhite: 16444375,\n            aqua: 65535,\n            aquamarine: 8388564,\n            azure: 15794175,\n            beige: 16119260,\n            bisque: 16770244,\n            black: 0,\n            blanchedalmond: 16772045,\n            blue: 255,\n            blueviolet: 9055202,\n            brown: 10824234,\n            burlywood: 14596231,\n            cadetblue: 6266528,\n            chartreuse: 8388352,\n            chocolate: 13789470,\n            coral: 16744272,\n            cornflowerblue: 6591981,\n            cornsilk: 16775388,\n            crimson: 14423100,\n            cyan: 65535,\n            darkblue: 139,\n            darkcyan: 35723,\n            darkgoldenrod: 12092939,\n            darkgray: 11119017,\n            darkgrey: 11119017,\n            darkgreen: 25600,\n            darkkhaki: 12433259,\n            darkmagenta: 9109643,\n            darkolivegreen: 5597999,\n            darkorange: 16747520,\n            darkorchid: 10040012,\n            darkred: 9109504,\n            darksalmon: 15308410,\n            darkseagreen: 9419919,\n            darkslateblue: 4734347,\n            darkslategray: 3100495,\n            darkslategrey: 3100495,\n            darkturquoise: 52945,\n            darkviolet: 9699539,\n            deeppink: 16716947,\n            deepskyblue: 49151,\n            dimgray: 6908265,\n            dimgrey: 6908265,\n            dodgerblue: 2003199,\n            firebrick: 11674146,\n            floralwhite: 16775920,\n            forestgreen: 2263842,\n            fuchsia: 16711935,\n            gainsboro: 14474460,\n            ghostwhite: 16316671,\n            gold: 16766720,\n            goldenrod: 14329120,\n            gray: 8421504,\n            grey: 8421504,\n            green: 32768,\n            greenyellow: 11403055,\n            honeydew: 15794160,\n            hotpink: 16738740,\n            indianred: 13458524,\n            indigo: 4915330,\n            ivory: 16777200,\n            khaki: 15787660,\n            lavender: 15132410,\n            lavenderblush: 16773365,\n            lawngreen: 8190976,\n            lemonchiffon: 16775885,\n            lightblue: 11393254,\n            lightcoral: 15761536,\n            lightcyan: 14745599,\n            lightgoldenrodyellow: 16448210,\n            lightgray: 13882323,\n            lightgrey: 13882323,\n            lightgreen: 9498256,\n            lightpink: 16758465,\n            lightsalmon: 16752762,\n            lightseagreen: 2142890,\n            lightskyblue: 8900346,\n            lightslategray: 7833753,\n            lightslategrey: 7833753,\n            lightsteelblue: 11584734,\n            lightyellow: 16777184,\n            lime: 65280,\n            limegreen: 3329330,\n            linen: 16445670,\n            magenta: 16711935,\n            maroon: 8388608,\n            mediumaquamarine: 6737322,\n            mediumblue: 205,\n            mediumorchid: 12211667,\n            mediumpurple: 9662683,\n            mediumseagreen: 3978097,\n            mediumslateblue: 8087790,\n            mediumspringgreen: 64154,\n            mediumturquoise: 4772300,\n            mediumvioletred: 13047173,\n            midnightblue: 1644912,\n            mintcream: 16121850,\n            mistyrose: 16770273,\n            moccasin: 16770229,\n            navajowhite: 16768685,\n            navy: 128,\n            oldlace: 16643558,\n            olive: 8421376,\n            olivedrab: 7048739,\n            orange: 16753920,\n            orangered: 16729344,\n            orchid: 14315734,\n            palegoldenrod: 15657130,\n            palegreen: 10025880,\n            paleturquoise: 11529966,\n            palevioletred: 14381203,\n            papayawhip: 16773077,\n            peachpuff: 16767673,\n            peru: 13468991,\n            pink: 16761035,\n            plum: 14524637,\n            powderblue: 11591910,\n            purple: 8388736,\n            rebeccapurple: 6697881,\n            red: 16711680,\n            rosybrown: 12357519,\n            royalblue: 4286945,\n            saddlebrown: 9127187,\n            salmon: 16416882,\n            sandybrown: 16032864,\n            seagreen: 3050327,\n            seashell: 16774638,\n            sienna: 10506797,\n            silver: 12632256,\n            skyblue: 8900331,\n            slateblue: 6970061,\n            slategray: 7372944,\n            slategrey: 7372944,\n            snow: 16775930,\n            springgreen: 65407,\n            steelblue: 4620980,\n            tan: 13808780,\n            teal: 32896,\n            thistle: 14204888,\n            tomato: 16737095,\n            turquoise: 4251856,\n            violet: 15631086,\n            wheat: 16113331,\n            white: 16777215,\n            whitesmoke: 16119285,\n            yellow: 16776960,\n            yellowgreen: 10145074\n        };\n        for (var name_2 in colorValues) {\n            if (colorValues.hasOwnProperty(name_2)) {\n                var color = colorValues[name_2];\n                CSS.ColorNames[name_2] = Math.floor(color / 65536) + \",\" + Math.floor(color / 256 % 256) + \",\" + color % 256;\n            }\n        }\n    })(CSS = VelocityStatic.CSS || (VelocityStatic.CSS = {}));\n})(VelocityStatic || (VelocityStatic = {}));\n\n/*\n * VelocityJS.org (C) 2014-2017 Julian Shapiro.\n *\n * Licensed under the MIT license. See LICENSE file in the project root for details.\n */ var VelocityStatic;\n\n(function(VelocityStatic) {\n    var CSS;\n    (function(CSS) {\n        // TODO: This is still a complete mess\n        function computePropertyValue(element, property) {\n            var data = Data(element),\n            // If computedStyle is cached, use it.\n            computedStyle = data && data.computedStyle ? data.computedStyle : window.getComputedStyle(element, null);\n            var computedValue = 0;\n            if (data && !data.computedStyle) {\n                data.computedStyle = computedStyle;\n            }\n            if (property === \"width\" || property === \"height\") {\n                // Browsers do not return height and width values for elements\n                // that are set to display:\"none\". Thus, we temporarily toggle\n                // display to the element type's default value.\n                var toggleDisplay = getPropertyValue(element, \"display\") === \"none\";\n                // When box-sizing isn't set to border-box, height and width\n                // style values are incorrectly computed when an element's\n                // scrollbars are visible (which expands the element's\n                // dimensions). Thus, we defer to the more accurate\n                // offsetHeight/Width property, which includes the total\n                // dimensions for interior, border, padding, and scrollbar. We\n                // subtract border and padding to get the sum of interior +\n                // scrollbar.\n                // TODO: offsetHeight does not exist on SVGElement\n                                if (toggleDisplay) {\n                    CSS.setPropertyValue(element, \"display\", \"auto\");\n                }\n                computedValue = VelocityStatic.augmentDimension(element, property, true);\n                if (toggleDisplay) {\n                    CSS.setPropertyValue(element, \"display\", \"none\");\n                }\n                return String(computedValue);\n            }\n            /* IE and Firefox do not return a value for the generic borderColor -- they only return individual values for each border side's color.\n             Also, in all browsers, when border colors aren't all the same, a compound value is returned that Velocity isn't setup to parse.\n             So, as a polyfill for querying individual border side colors, we just return the top border's color and animate all borders from that value. */\n            /* TODO: There is a borderColor normalisation in legacy/ - figure out where this is needed... */            computedValue = computedStyle[property];\n            /* Fall back to the property's style value (if defined) when computedValue returns nothing,\n             which can happen when the element hasn't been painted. */            if (!computedValue) {\n                computedValue = element.style[property];\n            }\n            /* For top, right, bottom, and left (TRBL) values that are set to \"auto\" on elements of \"fixed\" or \"absolute\" position,\n             defer to jQuery for converting \"auto\" to a numeric value. (For elements with a \"static\" or \"relative\" position, \"auto\" has the same\n             effect as being set to 0, so no conversion is necessary.) */\n            /* An example of why numeric conversion is necessary: When an element with \"position:absolute\" has an untouched \"left\"\n             property, which reverts to \"auto\", left's value is 0 relative to its parent element, but is often non-zero relative\n             to its *containing* (not parent) element, which is the nearest \"position:relative\" ancestor or the viewport (and always the viewport in the case of \"position:fixed\"). */            if (computedValue === \"auto\") {\n                switch (property) {\n                  case \"top\":\n                  case \"left\":\n                    var topLeft = true;\n\n                  case \"right\":\n                  case \"bottom\":\n                    var position = getPropertyValue(element, \"position\");\n /* GET */                    if (position === \"fixed\" || topLeft && position === \"absolute\") {\n                        // Note: this has no pixel unit on its returned values,\n                        // we re-add it here to conform with\n                        // computePropertyValue's behavior.\n                        computedValue = element.getBoundingClientRect[property] + \"px\";\n /* GET */                        break;\n                    }\n\n                    // Deliberate fallthrough!\n                                      default:\n                    computedValue = \"0px\";\n                    break;\n                }\n            }\n            return computedValue ? String(computedValue) : \"\";\n        }\n        CSS.computePropertyValue = computePropertyValue;\n        /**\n         * Get a property value. This will grab via the cache if it exists, then\n         * via any normalisations.\n         */        function getPropertyValue(element, propertyName, fn, skipCache) {\n            var data = Data(element);\n            var propertyValue;\n            if (VelocityStatic.NoCacheNormalizations.has(propertyName)) {\n                skipCache = true;\n            }\n            if (!skipCache && data && data.cache[propertyName] != null) {\n                propertyValue = data.cache[propertyName];\n            } else {\n                fn = fn || VelocityStatic.getNormalization(element, propertyName);\n                if (fn) {\n                    propertyValue = fn(element);\n                    if (data) {\n                        data.cache[propertyName] = propertyValue;\n                    }\n                }\n            }\n            if (VelocityStatic.debug >= 2) {\n                console.info(\"Get \" + propertyName + \": \" + propertyValue);\n            }\n            return propertyValue;\n        }\n        CSS.getPropertyValue = getPropertyValue;\n    })(CSS = VelocityStatic.CSS || (VelocityStatic.CSS = {}));\n})(VelocityStatic || (VelocityStatic = {}));\n\n/*\n * VelocityJS.org (C) 2014-2017 Julian Shapiro.\n *\n * Licensed under the MIT license. See LICENSE file in the project root for details.\n */ var VelocityStatic;\n\n(function(VelocityStatic) {\n    var CSS;\n    (function(CSS) {\n        /**\n         * All possible units in CSS. Used to recognise units when parsing tweens.\n         */\n        var Units = [ \"%\", \"em\", \"ex\", \"ch\", \"rem\", \"vw\", \"vh\", \"vmin\", \"vmax\", \"cm\", \"mm\", \"Q\", \"in\", \"pc\", \"pt\", \"px\", \"deg\", \"grad\", \"rad\", \"turn\", \"s\", \"ms\" ];\n        /**\n         * Get the current unit for this property. Only used when parsing tweens\n         * to check if the unit is changing between the start and end values.\n         */        function getUnit(property, start) {\n            start = start || 0;\n            if (property[start] && property[start] !== \" \") {\n                for (var i = 0, units = Units; i < units.length; i++) {\n                    var unit = units[i];\n                    var j = 0;\n                    do {\n                        if (j >= unit.length) {\n                            return unit;\n                        }\n                        if (unit[j] !== property[start + j]) {\n                            break;\n                        }\n                    } while (++j);\n                }\n            }\n            return \"\";\n        }\n        CSS.getUnit = getUnit;\n    })(CSS = VelocityStatic.CSS || (VelocityStatic.CSS = {}));\n})(VelocityStatic || (VelocityStatic = {}));\n\n/*\n * VelocityJS.org (C) 2014-2017 Julian Shapiro.\n *\n * Licensed under the MIT license. See LICENSE file in the project root for details.\n */ var VelocityStatic;\n\n(function(VelocityStatic) {\n    var CSS;\n    (function(CSS) {\n        /**\n         * The singular setPropertyValue, which routes the logic for all\n         * normalizations.\n         */\n        function setPropertyValue(element, propertyName, propertyValue, fn) {\n            var data = Data(element);\n            if (isString(propertyValue) && propertyValue[0] === \"c\" && propertyValue[1] === \"a\" && propertyValue[2] === \"l\" && propertyValue[3] === \"c\" && propertyValue[4] === \"(\" && propertyValue[5] === \"0\" && propertyValue[5] === \" \") {\n                // Make sure we un-calc unit changing values - try not to trigger\n                // this code any more often than we have to since it's expensive\n                propertyValue = propertyValue.replace(/^calc\\(0[^\\d]* \\+ ([^\\(\\)]+)\\)$/, \"$1\");\n            }\n            if (data && data.cache[propertyName] !== propertyValue) {\n                // By setting it to undefined we force a true \"get\" later\n                data.cache[propertyName] = propertyValue || undefined;\n                fn = fn || VelocityStatic.getNormalization(element, propertyName);\n                if (fn) {\n                    fn(element, propertyValue);\n                }\n                if (VelocityStatic.debug >= 2) {\n                    console.info(\"Set \" + propertyName + \": \" + propertyValue, element);\n                }\n            }\n        }\n        CSS.setPropertyValue = setPropertyValue;\n    })(CSS = VelocityStatic.CSS || (VelocityStatic.CSS = {}));\n})(VelocityStatic || (VelocityStatic = {}));\n\n/*\n * VelocityJS.org (C) 2014-2017 Julian Shapiro.\n *\n * Licensed under the MIT license. See LICENSE file in the project root for details.\n */\nvar VelocityStatic;\n\n(function(VelocityStatic) {\n    var Easing;\n    (function(Easing) {\n        Easing.Easings = createEmptyObject();\n        /**\n         * Used to register a easing. This should never be called by users\n         * directly, instead it should be called via an action:<br/>\n         * <code>Velocity(\"registerEasing\", \"name\", VelocityEasingFn);</code>\n         *\n         * @private\n         */        function registerEasing(args) {\n            var name = args[0], callback = args[1];\n            if (!isString(name)) {\n                console.warn(\"VelocityJS: Trying to set 'registerEasing' name to an invalid value:\", name);\n            } else if (!isFunction(callback)) {\n                console.warn(\"VelocityJS: Trying to set 'registerEasing' callback to an invalid value:\", name, callback);\n            } else if (Easing.Easings[name]) {\n                console.warn(\"VelocityJS: Trying to override 'registerEasing' callback\", name);\n            } else {\n                Easing.Easings[name] = callback;\n            }\n        }\n        Easing.registerEasing = registerEasing;\n        VelocityStatic.registerAction([ \"registerEasing\", registerEasing ], true);\n        /* Basic (same as jQuery) easings. */        registerEasing([ \"linear\", function(percentComplete, startValue, endValue) {\n            return startValue + percentComplete * (endValue - startValue);\n        } ]);\n        registerEasing([ \"swing\", function(percentComplete, startValue, endValue) {\n            return startValue + (.5 - Math.cos(percentComplete * Math.PI) / 2) * (endValue - startValue);\n        } ]);\n        /* Bonus \"spring\" easing, which is a less exaggerated version of easeInOutElastic. */        registerEasing([ \"spring\", function(percentComplete, startValue, endValue) {\n            return startValue + (1 - Math.cos(percentComplete * 4.5 * Math.PI) * Math.exp(-percentComplete * 6)) * (endValue - startValue);\n        } ]);\n    })(Easing = VelocityStatic.Easing || (VelocityStatic.Easing = {}));\n})(VelocityStatic || (VelocityStatic = {}));\n\n///<reference path=\"easings.ts\" />\n/*\n * VelocityJS.org (C) 2014-2017 Julian Shapiro.\n *\n * Licensed under the MIT license. See LICENSE file in the project root for details.\n *\n * Back easings, based on code from https://github.com/yuichiroharai/easeplus-velocity\n */\nvar VelocityStatic;\n\n(function(VelocityStatic) {\n    var Easing;\n    (function(Easing) {\n        function registerBackIn(name, amount) {\n            Easing.registerEasing([ name, function(percentComplete, startValue, endValue) {\n                if (percentComplete === 0) {\n                    return startValue;\n                }\n                if (percentComplete === 1) {\n                    return endValue;\n                }\n                return Math.pow(percentComplete, 2) * ((amount + 1) * percentComplete - amount) * (endValue - startValue);\n            } ]);\n        }\n        Easing.registerBackIn = registerBackIn;\n        function registerBackOut(name, amount) {\n            Easing.registerEasing([ name, function(percentComplete, startValue, endValue) {\n                if (percentComplete === 0) {\n                    return startValue;\n                }\n                if (percentComplete === 1) {\n                    return endValue;\n                }\n                return (Math.pow(--percentComplete, 2) * ((amount + 1) * percentComplete + amount) + 1) * (endValue - startValue);\n            } ]);\n        }\n        Easing.registerBackOut = registerBackOut;\n        function registerBackInOut(name, amount) {\n            amount *= 1.525;\n            Easing.registerEasing([ name, function(percentComplete, startValue, endValue) {\n                if (percentComplete === 0) {\n                    return startValue;\n                }\n                if (percentComplete === 1) {\n                    return endValue;\n                }\n                return ((percentComplete *= 2) < 1 ? Math.pow(percentComplete, 2) * ((amount + 1) * percentComplete - amount) : Math.pow(percentComplete -= 2, 2) * ((amount + 1) * percentComplete + amount) + 2) * .5 * (endValue - startValue);\n            } ]);\n        }\n        Easing.registerBackInOut = registerBackInOut;\n        registerBackIn(\"easeInBack\", 1.7);\n        registerBackOut(\"easeOutBack\", 1.7);\n        registerBackInOut(\"easeInOutBack\", 1.7);\n        // TODO: Expose these as actions to register custom easings?\n        })(Easing = VelocityStatic.Easing || (VelocityStatic.Easing = {}));\n})(VelocityStatic || (VelocityStatic = {}));\n\n///<reference path=\"easings.ts\" />\n/*\n * VelocityJS.org (C) 2014-2017 Julian Shapiro.\n *\n * Licensed under the MIT license. See LICENSE file in the project root for details.\n *\n * Bezier curve function generator. Copyright Gaetan Renaudeau. MIT License: http://en.wikipedia.org/wiki/MIT_License\n */\nvar VelocityStatic;\n\n(function(VelocityStatic) {\n    var Easing;\n    (function(Easing) {\n        /**\n         * Fix to a range of <code>0 <= num <= 1</code>.\n         */\n        function fixRange(num) {\n            return Math.min(Math.max(num, 0), 1);\n        }\n        function A(aA1, aA2) {\n            return 1 - 3 * aA2 + 3 * aA1;\n        }\n        function B(aA1, aA2) {\n            return 3 * aA2 - 6 * aA1;\n        }\n        function C(aA1) {\n            return 3 * aA1;\n        }\n        function calcBezier(aT, aA1, aA2) {\n            return ((A(aA1, aA2) * aT + B(aA1, aA2)) * aT + C(aA1)) * aT;\n        }\n        function getSlope(aT, aA1, aA2) {\n            return 3 * A(aA1, aA2) * aT * aT + 2 * B(aA1, aA2) * aT + C(aA1);\n        }\n        function generateBezier(mX1, mY1, mX2, mY2) {\n            var NEWTON_ITERATIONS = 4, NEWTON_MIN_SLOPE = .001, SUBDIVISION_PRECISION = 1e-7, SUBDIVISION_MAX_ITERATIONS = 10, kSplineTableSize = 11, kSampleStepSize = 1 / (kSplineTableSize - 1), float32ArraySupported = \"Float32Array\" in window;\n            /* Must contain four arguments. */            if (arguments.length !== 4) {\n                return;\n            }\n            /* Arguments must be numbers. */            for (var i = 0; i < 4; ++i) {\n                if (typeof arguments[i] !== \"number\" || isNaN(arguments[i]) || !isFinite(arguments[i])) {\n                    return;\n                }\n            }\n            /* X values must be in the [0, 1] range. */            mX1 = fixRange(mX1);\n            mX2 = fixRange(mX2);\n            var mSampleValues = float32ArraySupported ? new Float32Array(kSplineTableSize) : new Array(kSplineTableSize);\n            function newtonRaphsonIterate(aX, aGuessT) {\n                for (var i = 0; i < NEWTON_ITERATIONS; ++i) {\n                    var currentSlope = getSlope(aGuessT, mX1, mX2);\n                    if (currentSlope === 0) {\n                        return aGuessT;\n                    }\n                    var currentX = calcBezier(aGuessT, mX1, mX2) - aX;\n                    aGuessT -= currentX / currentSlope;\n                }\n                return aGuessT;\n            }\n            function calcSampleValues() {\n                for (var i = 0; i < kSplineTableSize; ++i) {\n                    mSampleValues[i] = calcBezier(i * kSampleStepSize, mX1, mX2);\n                }\n            }\n            function binarySubdivide(aX, aA, aB) {\n                var currentX, currentT, i = 0;\n                do {\n                    currentT = aA + (aB - aA) / 2;\n                    currentX = calcBezier(currentT, mX1, mX2) - aX;\n                    if (currentX > 0) {\n                        aB = currentT;\n                    } else {\n                        aA = currentT;\n                    }\n                } while (Math.abs(currentX) > SUBDIVISION_PRECISION && ++i < SUBDIVISION_MAX_ITERATIONS);\n                return currentT;\n            }\n            function getTForX(aX) {\n                var intervalStart = 0, currentSample = 1, lastSample = kSplineTableSize - 1;\n                for (;currentSample !== lastSample && mSampleValues[currentSample] <= aX; ++currentSample) {\n                    intervalStart += kSampleStepSize;\n                }\n                --currentSample;\n                var dist = (aX - mSampleValues[currentSample]) / (mSampleValues[currentSample + 1] - mSampleValues[currentSample]), guessForT = intervalStart + dist * kSampleStepSize, initialSlope = getSlope(guessForT, mX1, mX2);\n                if (initialSlope >= NEWTON_MIN_SLOPE) {\n                    return newtonRaphsonIterate(aX, guessForT);\n                } else if (initialSlope === 0) {\n                    return guessForT;\n                } else {\n                    return binarySubdivide(aX, intervalStart, intervalStart + kSampleStepSize);\n                }\n            }\n            var _precomputed = false;\n            function precompute() {\n                _precomputed = true;\n                if (mX1 !== mY1 || mX2 !== mY2) {\n                    calcSampleValues();\n                }\n            }\n            var f = function(percentComplete, startValue, endValue, property) {\n                if (!_precomputed) {\n                    precompute();\n                }\n                if (percentComplete === 0) {\n                    return startValue;\n                }\n                if (percentComplete === 1) {\n                    return endValue;\n                }\n                if (mX1 === mY1 && mX2 === mY2) {\n                    return startValue + percentComplete * (endValue - startValue);\n                }\n                return startValue + calcBezier(getTForX(percentComplete), mY1, mY2) * (endValue - startValue);\n            };\n            f.getControlPoints = function() {\n                return [ {\n                    x: mX1,\n                    y: mY1\n                }, {\n                    x: mX2,\n                    y: mY2\n                } ];\n            };\n            var str = \"generateBezier(\" + [ mX1, mY1, mX2, mY2 ] + \")\";\n            f.toString = function() {\n                return str;\n            };\n            return f;\n        }\n        Easing.generateBezier = generateBezier;\n        /* Common easings */        var easeIn = generateBezier(.42, 0, 1, 1), easeOut = generateBezier(0, 0, .58, 1), easeInOut = generateBezier(.42, 0, .58, 1);\n        Easing.registerEasing([ \"ease\", generateBezier(.25, .1, .25, 1) ]);\n        Easing.registerEasing([ \"easeIn\", easeIn ]);\n        Easing.registerEasing([ \"ease-in\", easeIn ]);\n        Easing.registerEasing([ \"easeOut\", easeOut ]);\n        Easing.registerEasing([ \"ease-out\", easeOut ]);\n        Easing.registerEasing([ \"easeInOut\", easeInOut ]);\n        Easing.registerEasing([ \"ease-in-out\", easeInOut ]);\n        Easing.registerEasing([ \"easeInSine\", generateBezier(.47, 0, .745, .715) ]);\n        Easing.registerEasing([ \"easeOutSine\", generateBezier(.39, .575, .565, 1) ]);\n        Easing.registerEasing([ \"easeInOutSine\", generateBezier(.445, .05, .55, .95) ]);\n        Easing.registerEasing([ \"easeInQuad\", generateBezier(.55, .085, .68, .53) ]);\n        Easing.registerEasing([ \"easeOutQuad\", generateBezier(.25, .46, .45, .94) ]);\n        Easing.registerEasing([ \"easeInOutQuad\", generateBezier(.455, .03, .515, .955) ]);\n        Easing.registerEasing([ \"easeInCubic\", generateBezier(.55, .055, .675, .19) ]);\n        Easing.registerEasing([ \"easeOutCubic\", generateBezier(.215, .61, .355, 1) ]);\n        Easing.registerEasing([ \"easeInOutCubic\", generateBezier(.645, .045, .355, 1) ]);\n        Easing.registerEasing([ \"easeInQuart\", generateBezier(.895, .03, .685, .22) ]);\n        Easing.registerEasing([ \"easeOutQuart\", generateBezier(.165, .84, .44, 1) ]);\n        Easing.registerEasing([ \"easeInOutQuart\", generateBezier(.77, 0, .175, 1) ]);\n        Easing.registerEasing([ \"easeInQuint\", generateBezier(.755, .05, .855, .06) ]);\n        Easing.registerEasing([ \"easeOutQuint\", generateBezier(.23, 1, .32, 1) ]);\n        Easing.registerEasing([ \"easeInOutQuint\", generateBezier(.86, 0, .07, 1) ]);\n        Easing.registerEasing([ \"easeInExpo\", generateBezier(.95, .05, .795, .035) ]);\n        Easing.registerEasing([ \"easeOutExpo\", generateBezier(.19, 1, .22, 1) ]);\n        Easing.registerEasing([ \"easeInOutExpo\", generateBezier(1, 0, 0, 1) ]);\n        Easing.registerEasing([ \"easeInCirc\", generateBezier(.6, .04, .98, .335) ]);\n        Easing.registerEasing([ \"easeOutCirc\", generateBezier(.075, .82, .165, 1) ]);\n        Easing.registerEasing([ \"easeInOutCirc\", generateBezier(.785, .135, .15, .86) ]);\n    })(Easing = VelocityStatic.Easing || (VelocityStatic.Easing = {}));\n})(VelocityStatic || (VelocityStatic = {}));\n\n///<reference path=\"easings.ts\" />\n/*\n * VelocityJS.org (C) 2014-2017 Julian Shapiro.\n *\n * Licensed under the MIT license. See LICENSE file in the project root for details.\n *\n * Bounce easings, based on code from https://github.com/yuichiroharai/easeplus-velocity\n */\nvar VelocityStatic;\n\n(function(VelocityStatic) {\n    var Easing;\n    (function(Easing) {\n        function easeOutBounce(percentComplete) {\n            if (percentComplete < 1 / 2.75) {\n                return 7.5625 * percentComplete * percentComplete;\n            }\n            if (percentComplete < 2 / 2.75) {\n                return 7.5625 * (percentComplete -= 1.5 / 2.75) * percentComplete + .75;\n            }\n            if (percentComplete < 2.5 / 2.75) {\n                return 7.5625 * (percentComplete -= 2.25 / 2.75) * percentComplete + .9375;\n            }\n            return 7.5625 * (percentComplete -= 2.625 / 2.75) * percentComplete + .984375;\n        }\n        function easeInBounce(percentComplete) {\n            return 1 - easeOutBounce(1 - percentComplete);\n        }\n        Easing.registerEasing([ \"easeInBounce\", function(percentComplete, startValue, endValue) {\n            if (percentComplete === 0) {\n                return startValue;\n            }\n            if (percentComplete === 1) {\n                return endValue;\n            }\n            return easeInBounce(percentComplete) * (endValue - startValue);\n        } ]);\n        Easing.registerEasing([ \"easeOutBounce\", function(percentComplete, startValue, endValue) {\n            if (percentComplete === 0) {\n                return startValue;\n            }\n            if (percentComplete === 1) {\n                return endValue;\n            }\n            return easeOutBounce(percentComplete) * (endValue - startValue);\n        } ]);\n        Easing.registerEasing([ \"easeInOutBounce\", function(percentComplete, startValue, endValue) {\n            if (percentComplete === 0) {\n                return startValue;\n            }\n            if (percentComplete === 1) {\n                return endValue;\n            }\n            return (percentComplete < .5 ? easeInBounce(percentComplete * 2) * .5 : easeOutBounce(percentComplete * 2 - 1) * .5 + .5) * (endValue - startValue);\n        } ]);\n    })(Easing = VelocityStatic.Easing || (VelocityStatic.Easing = {}));\n})(VelocityStatic || (VelocityStatic = {}));\n\n///<reference path=\"easings.ts\" />\n/*\n * VelocityJS.org (C) 2014-2017 Julian Shapiro.\n *\n * Licensed under the MIT license. See LICENSE file in the project root for details.\n *\n * Elastic easings, based on code from https://github.com/yuichiroharai/easeplus-velocity\n */\nvar VelocityStatic;\n\n(function(VelocityStatic) {\n    var Easing;\n    (function(Easing) {\n        var pi2 = Math.PI * 2;\n        function registerElasticIn(name, amplitude, period) {\n            Easing.registerEasing([ name, function(percentComplete, startValue, endValue) {\n                if (percentComplete === 0) {\n                    return startValue;\n                }\n                if (percentComplete === 1) {\n                    return endValue;\n                }\n                return -(amplitude * Math.pow(2, 10 * (percentComplete -= 1)) * Math.sin((percentComplete - period / pi2 * Math.asin(1 / amplitude)) * pi2 / period)) * (endValue - startValue);\n            } ]);\n        }\n        Easing.registerElasticIn = registerElasticIn;\n        function registerElasticOut(name, amplitude, period) {\n            Easing.registerEasing([ name, function(percentComplete, startValue, endValue) {\n                if (percentComplete === 0) {\n                    return startValue;\n                }\n                if (percentComplete === 1) {\n                    return endValue;\n                }\n                return (amplitude * Math.pow(2, -10 * percentComplete) * Math.sin((percentComplete - period / pi2 * Math.asin(1 / amplitude)) * pi2 / period) + 1) * (endValue - startValue);\n            } ]);\n        }\n        Easing.registerElasticOut = registerElasticOut;\n        function registerElasticInOut(name, amplitude, period) {\n            Easing.registerEasing([ name, function(percentComplete, startValue, endValue) {\n                if (percentComplete === 0) {\n                    return startValue;\n                }\n                if (percentComplete === 1) {\n                    return endValue;\n                }\n                var s = period / pi2 * Math.asin(1 / amplitude);\n                percentComplete = percentComplete * 2 - 1;\n                return (percentComplete < 0 ? -.5 * (amplitude * Math.pow(2, 10 * percentComplete) * Math.sin((percentComplete - s) * pi2 / period)) : amplitude * Math.pow(2, -10 * percentComplete) * Math.sin((percentComplete - s) * pi2 / period) * .5 + 1) * (endValue - startValue);\n            } ]);\n        }\n        Easing.registerElasticInOut = registerElasticInOut;\n        registerElasticIn(\"easeInElastic\", 1, .3);\n        registerElasticOut(\"easeOutElastic\", 1, .3);\n        registerElasticInOut(\"easeInOutElastic\", 1, .3 * 1.5);\n        // TODO: Expose these as actions to register custom easings?\n        })(Easing = VelocityStatic.Easing || (VelocityStatic.Easing = {}));\n})(VelocityStatic || (VelocityStatic = {}));\n\n///<reference path=\"easings.ts\" />\n/*\n * VelocityJS.org (C) 2014-2017 Julian Shapiro.\n *\n * Licensed under the MIT license. See LICENSE file in the project root for details.\n */\nvar VelocityStatic;\n\n(function(VelocityStatic) {\n    var Easing;\n    (function(Easing) {\n        /* Runge-Kutta spring physics function generator. Adapted from Framer.js, copyright Koen Bok. MIT License: http://en.wikipedia.org/wiki/MIT_License */\n        /* Given a tension, friction, and duration, a simulation at 60FPS will first run without a defined duration in order to calculate the full path. A second pass\n         then adjusts the time delta -- using the relation between actual time and duration -- to calculate the path for the duration-constrained animation. */\n        function springAccelerationForState(state) {\n            return -state.tension * state.x - state.friction * state.v;\n        }\n        function springEvaluateStateWithDerivative(initialState, dt, derivative) {\n            var state = {\n                x: initialState.x + derivative.dx * dt,\n                v: initialState.v + derivative.dv * dt,\n                tension: initialState.tension,\n                friction: initialState.friction\n            };\n            return {\n                dx: state.v,\n                dv: springAccelerationForState(state)\n            };\n        }\n        function springIntegrateState(state, dt) {\n            var a = {\n                dx: state.v,\n                dv: springAccelerationForState(state)\n            }, b = springEvaluateStateWithDerivative(state, dt * .5, a), c = springEvaluateStateWithDerivative(state, dt * .5, b), d = springEvaluateStateWithDerivative(state, dt, c), dxdt = 1 / 6 * (a.dx + 2 * (b.dx + c.dx) + d.dx), dvdt = 1 / 6 * (a.dv + 2 * (b.dv + c.dv) + d.dv);\n            state.x = state.x + dxdt * dt;\n            state.v = state.v + dvdt * dt;\n            return state;\n        }\n        function generateSpringRK4(tension, friction, duration) {\n            var initState = {\n                x: -1,\n                v: 0,\n                tension: parseFloat(tension) || 500,\n                friction: parseFloat(friction) || 20\n            }, path = [ 0 ], time_lapsed = 0, tolerance = 1 / 1e4, DT = 16 / 1e3, have_duration = duration != null, // deliberate \"==\", as undefined == null != 0\n            dt, last_state;\n            /* Calculate the actual time it takes for this animation to complete with the provided conditions. */            if (have_duration) {\n                /* Run the simulation without a duration. */\n                time_lapsed = generateSpringRK4(initState.tension, initState.friction);\n                /* Compute the adjusted time delta. */                dt = time_lapsed / duration * DT;\n            } else {\n                dt = DT;\n            }\n            while (true) {\n                /* Next/step function .*/\n                last_state = springIntegrateState(last_state || initState, dt);\n                /* Store the position. */                path.push(1 + last_state.x);\n                time_lapsed += 16;\n                /* If the change threshold is reached, break. */                if (!(Math.abs(last_state.x) > tolerance && Math.abs(last_state.v) > tolerance)) {\n                    break;\n                }\n            }\n            /* If duration is not defined, return the actual time required for completing this animation. Otherwise, return a closure that holds the\n             computed path and returns a snapshot of the position according to a given percentComplete. */            return !have_duration ? time_lapsed : function(percentComplete, startValue, endValue) {\n                if (percentComplete === 0) {\n                    return startValue;\n                }\n                if (percentComplete === 1) {\n                    return endValue;\n                }\n                return startValue + path[percentComplete * (path.length - 1) | 0] * (endValue - startValue);\n            };\n        }\n        Easing.generateSpringRK4 = generateSpringRK4;\n    })(Easing = VelocityStatic.Easing || (VelocityStatic.Easing = {}));\n})(VelocityStatic || (VelocityStatic = {}));\n\n///<reference path=\"easings.ts\" />\n/*\n * VelocityJS.org (C) 2014-2017 Julian Shapiro.\n *\n * Licensed under the MIT license. See LICENSE file in the project root for details\n *\n * Step easing generator.\n */\nvar VelocityStatic;\n\n(function(VelocityStatic) {\n    var Easing;\n    (function(Easing) {\n        var cache = {};\n        function generateStep(steps) {\n            var fn = cache[steps];\n            if (fn) {\n                return fn;\n            }\n            return cache[steps] = function(percentComplete, startValue, endValue) {\n                if (percentComplete === 0) {\n                    return startValue;\n                }\n                if (percentComplete === 1) {\n                    return endValue;\n                }\n                return startValue + Math.round(percentComplete * steps) * (1 / steps) * (endValue - startValue);\n            };\n        }\n        Easing.generateStep = generateStep;\n    })(Easing = VelocityStatic.Easing || (VelocityStatic.Easing = {}));\n})(VelocityStatic || (VelocityStatic = {}));\n\n///<reference path=\"easings.ts\" />\n/*\n * VelocityJS.org (C) 2014-2017 Julian Shapiro.\n *\n * Licensed under the MIT license. See LICENSE file in the project root for details.\n *\n * Easings to act on strings, either set at the start or at the end depending on\n * need.\n */\nvar VelocityStatic;\n\n(function(VelocityStatic) {\n    var Easing;\n    (function(Easing) {\n        /**\n         * Easing function that sets to the specified value immediately after the\n         * animation starts.\n         */\n        Easing.registerEasing([ \"at-start\", function(percentComplete, startValue, endValue) {\n            return percentComplete === 0 ? startValue : endValue;\n        } ]);\n        /**\n         * Easing function that sets to the specified value while the animation is\n         * running.\n         */        Easing.registerEasing([ \"during\", function(percentComplete, startValue, endValue) {\n            return percentComplete === 0 || percentComplete === 1 ? startValue : endValue;\n        } ]);\n        /**\n         * Easing function that sets to the specified value when the animation ends.\n         */        Easing.registerEasing([ \"at-end\", function(percentComplete, startValue, endValue) {\n            return percentComplete === 1 ? endValue : startValue;\n        } ]);\n    })(Easing = VelocityStatic.Easing || (VelocityStatic.Easing = {}));\n})(VelocityStatic || (VelocityStatic = {}));\n\n///<reference path=\"../actions/_all.d.ts\" />\n/*\n * VelocityJS.org (C) 2014-2017 Julian Shapiro.\n *\n * Licensed under the MIT license. See LICENSE file in the project root for details.\n *\n * Normalisations are used when getting or setting a (normally css compound\n * properties) value that can have a different order in different browsers.\n *\n * It can also be used to extend and create specific properties that otherwise\n * don't exist (such as for scrolling, or inner/outer dimensions).\n */\nvar VelocityStatic;\n\n(function(VelocityStatic) {\n    /**\n     * The highest type index for finding the best normalization for a property.\n     */\n    VelocityStatic.MaxType = -1;\n    /**\n     * Unlike \"actions\", normalizations can always be replaced by users.\n     */    VelocityStatic.Normalizations = [];\n    /**\n     * Store a cross-reference to units to be added to specific normalization\n     * functions if the user supplies a unit-less number.\n     *\n     * This is pretty much confined to adding \"px\" to several css properties.\n     */    VelocityStatic.NormalizationUnits = createEmptyObject();\n    /**\n     * Any normalisations that should never be cached are listed here.\n     * Faster than an array - https://jsperf.com/array-includes-and-find-methods-vs-set-has\n     */    VelocityStatic.NoCacheNormalizations = new Set();\n    /**\n     * An array of classes used for the per-class normalizations. This\n     * translates into a bitwise enum for quick cross-reference, and so that\n     * the element doesn't need multiple <code>instanceof</code> calls every\n     * frame.\n     */    VelocityStatic.constructors = [];\n    /**\n     * Used to register a normalization. This should never be called by users\n     * directly, instead it should be called via an action:<br/>\n     * <code>Velocity(\"registerNormalization\", Element, \"name\", VelocityNormalizationsFn[, false]);</code>\n     *\n     * The fourth argument can be an explicit <code>false</code>, which prevents\n     * the property from being cached. Please note that this can be dangerous\n     * for performance!\n     *\n     * @private\n     */    function registerNormalization(args) {\n        var constructor = args[0], name = args[1], callback = args[2];\n        if (isString(constructor) || !(constructor instanceof Object)) {\n            console.warn(\"VelocityJS: Trying to set 'registerNormalization' constructor to an invalid value:\", constructor);\n        } else if (!isString(name)) {\n            console.warn(\"VelocityJS: Trying to set 'registerNormalization' name to an invalid value:\", name);\n        } else if (!isFunction(callback)) {\n            console.warn(\"VelocityJS: Trying to set 'registerNormalization' callback to an invalid value:\", name, callback);\n        } else {\n            var index = VelocityStatic.constructors.indexOf(constructor), nextArg = 3;\n            if (index < 0) {\n                VelocityStatic.MaxType = index = VelocityStatic.constructors.push(constructor) - 1;\n                VelocityStatic.Normalizations[index] = createEmptyObject();\n            }\n            VelocityStatic.Normalizations[index][name] = callback;\n            if (isString(args[nextArg])) {\n                var unit = args[nextArg++], units = VelocityStatic.NormalizationUnits[unit];\n                if (!units) {\n                    units = VelocityStatic.NormalizationUnits[unit] = [];\n                }\n                units.push(callback);\n            }\n            if (args[nextArg] === false) {\n                VelocityStatic.NoCacheNormalizations.add(name);\n            }\n        }\n    }\n    VelocityStatic.registerNormalization = registerNormalization;\n    /**\n     * Used to check if a normalisation exists on a specific class.\n     */    function hasNormalization(args) {\n        var constructor = args[0], name = args[1];\n        var index = VelocityStatic.constructors.indexOf(constructor);\n        return !!VelocityStatic.Normalizations[index][name];\n    }\n    VelocityStatic.hasNormalization = hasNormalization;\n    /**\n     * Get the unit to add to a unitless number based on the normalization used.\n     */    function getNormalizationUnit(fn) {\n        for (var unit in VelocityStatic.NormalizationUnits) {\n            if (_inArray(VelocityStatic.NormalizationUnits[unit], fn)) {\n                return unit;\n            }\n        }\n        return \"\";\n    }\n    VelocityStatic.getNormalizationUnit = getNormalizationUnit;\n    /**\n     * Get the normalization for an element and propertyName combination. This\n     * value should be cached at asking time, as it may change if the user adds\n     * more normalizations.\n     */    function getNormalization(element, propertyName) {\n        var data = Data(element);\n        var fn;\n        for (var index = VelocityStatic.MaxType, types = data.types; !fn && index >= 0; index--) {\n            if (types & 1 << index) {\n                fn = VelocityStatic.Normalizations[index][propertyName];\n            }\n        }\n        return fn;\n    }\n    VelocityStatic.getNormalization = getNormalization;\n    VelocityStatic.registerAction([ \"registerNormalization\", registerNormalization ]);\n    VelocityStatic.registerAction([ \"hasNormalization\", hasNormalization ]);\n})(VelocityStatic || (VelocityStatic = {}));\n\n///<reference path=\"../normalizations.ts\" />\n/*\n * VelocityJS.org (C) 2014-2017 Julian Shapiro.\n *\n * Licensed under the MIT license. See LICENSE file in the project root for details.\n */ var VelocityStatic;\n\n(function(VelocityStatic) {\n    var CSS;\n    (function(CSS) {\n        /**\n         * Get/set an attribute.\n         */\n        function getAttribute(name) {\n            return function(element, propertyValue) {\n                if (propertyValue === undefined) {\n                    return element.getAttribute(name);\n                }\n                element.setAttribute(name, propertyValue);\n            };\n        }\n        var base = document.createElement(\"div\"), rxSubtype = /^SVG(.*)Element$/, rxElement = /Element$/;\n        Object.getOwnPropertyNames(window).forEach(function(globals) {\n            var subtype = rxSubtype.exec(globals);\n            if (subtype && subtype[1] !== \"SVG\") {\n                try {\n                    var element = subtype[1] ? document.createElementNS(\"http://www.w3.org/2000/svg\", (subtype[1] || \"svg\").toLowerCase()) : document.createElement(\"svg\"), constructor = element.constructor;\n                    for (var attribute in element) {\n                        var value = element[attribute];\n                        if (isString(attribute) && !(attribute[0] === \"o\" && attribute[1] === \"n\") && attribute !== attribute.toUpperCase() && !rxElement.test(attribute) && !(attribute in base) && !isFunction(value)) {\n                            // TODO: Should this all be set on the generic SVGElement, it would save space and time, but not as powerful\n                            VelocityStatic.registerNormalization([ constructor, attribute, getAttribute(attribute) ]);\n                        }\n                    }\n                } catch (e) {\n                    console.error(\"VelocityJS: Error when trying to identify SVG attributes on \" + globals + \".\", e);\n                }\n            }\n        });\n    })(CSS = VelocityStatic.CSS || (VelocityStatic.CSS = {}));\n})(VelocityStatic || (VelocityStatic = {}));\n\n///<reference path=\"../normalizations.ts\" />\n/*\n * VelocityJS.org (C) 2014-2017 Julian Shapiro.\n *\n * Licensed under the MIT license. See LICENSE file in the project root for details.\n */ var VelocityStatic;\n\n(function(VelocityStatic) {\n    var CSS;\n    (function(CSS) {\n        /**\n         * Get/set the width or height.\n         */\n        function getDimension(name) {\n            return function(element, propertyValue) {\n                if (propertyValue === undefined) {\n                    // Firefox throws an error if .getBBox() is called on an SVG that isn't attached to the DOM.\n                    try {\n                        return element.getBBox()[name] + \"px\";\n                    } catch (e) {\n                        return \"0px\";\n                    }\n                }\n                element.setAttribute(name, propertyValue);\n            };\n        }\n        VelocityStatic.registerNormalization([ SVGElement, \"width\", getDimension(\"width\") ]);\n        VelocityStatic.registerNormalization([ SVGElement, \"height\", getDimension(\"height\") ]);\n    })(CSS = VelocityStatic.CSS || (VelocityStatic.CSS = {}));\n})(VelocityStatic || (VelocityStatic = {}));\n\n///<reference path=\"normalizations.ts\" />\n/*\n * VelocityJS.org (C) 2014-2017 Julian Shapiro.\n *\n * Licensed under the MIT license. See LICENSE file in the project root for details.\n */ var VelocityStatic;\n\n(function(VelocityStatic) {\n    /**\n     * Figure out the dimensions for this width / height based on the\n     * potential borders and whether we care about them.\n     */\n    function augmentDimension(element, name, wantInner) {\n        var isBorderBox = VelocityStatic.CSS.getPropertyValue(element, \"boxSizing\").toString().toLowerCase() === \"border-box\";\n        if (isBorderBox === wantInner) {\n            // in box-sizing mode, the CSS width / height accessors already\n            // give the outerWidth / outerHeight.\n            var sides = name === \"width\" ? [ \"Left\", \"Right\" ] : [ \"Top\", \"Bottom\" ], fields = [ \"padding\" + sides[0], \"padding\" + sides[1], \"border\" + sides[0] + \"Width\", \"border\" + sides[1] + \"Width\" ];\n            var i = void 0, value = void 0, augment = 0;\n            for (i = 0; i < fields.length; i++) {\n                value = parseFloat(VelocityStatic.CSS.getPropertyValue(element, fields[i]));\n                if (!isNaN(value)) {\n                    augment += value;\n                }\n            }\n            return wantInner ? -augment : augment;\n        }\n        return 0;\n    }\n    VelocityStatic.augmentDimension = augmentDimension;\n    /**\n     * Get/set the inner/outer dimension.\n     */    function getDimension(name, wantInner) {\n        return function(element, propertyValue) {\n            if (propertyValue === undefined) {\n                return augmentDimension(element, name, wantInner) + \"px\";\n            }\n            VelocityStatic.CSS.setPropertyValue(element, name, parseFloat(propertyValue) - augmentDimension(element, name, wantInner) + \"px\");\n        };\n    }\n    VelocityStatic.registerNormalization([ Element, \"innerWidth\", getDimension(\"width\", true) ]);\n    VelocityStatic.registerNormalization([ Element, \"innerHeight\", getDimension(\"height\", true) ]);\n    VelocityStatic.registerNormalization([ Element, \"outerWidth\", getDimension(\"width\", false) ]);\n    VelocityStatic.registerNormalization([ Element, \"outerHeight\", getDimension(\"height\", false) ]);\n})(VelocityStatic || (VelocityStatic = {}));\n\n///<reference path=\"normalizations.ts\" />\n/*\n * VelocityJS.org (C) 2014-2017 Julian Shapiro.\n *\n * Licensed under the MIT license. See LICENSE file in the project root for details.\n */ var VelocityStatic;\n\n(function(VelocityStatic) {\n    VelocityStatic.inlineRx = /^(b|big|i|small|tt|abbr|acronym|cite|code|dfn|em|kbd|strong|samp|let|a|bdo|br|img|map|object|q|script|span|sub|sup|button|input|label|select|textarea)$/i,\n    VelocityStatic.listItemRx = /^(li)$/i, VelocityStatic.tableRowRx = /^(tr)$/i, VelocityStatic.tableRx = /^(table)$/i,\n    VelocityStatic.tableRowGroupRx = /^(tbody)$/i;\n    function display(element, propertyValue) {\n        var style = element.style;\n        if (propertyValue === undefined) {\n            return VelocityStatic.CSS.computePropertyValue(element, \"display\");\n        }\n        if (propertyValue === \"auto\") {\n            var nodeName = element && element.nodeName, data = Data(element);\n            if (VelocityStatic.inlineRx.test(nodeName)) {\n                propertyValue = \"inline\";\n            } else if (VelocityStatic.listItemRx.test(nodeName)) {\n                propertyValue = \"list-item\";\n            } else if (VelocityStatic.tableRowRx.test(nodeName)) {\n                propertyValue = \"table-row\";\n            } else if (VelocityStatic.tableRx.test(nodeName)) {\n                propertyValue = \"table\";\n            } else if (VelocityStatic.tableRowGroupRx.test(nodeName)) {\n                propertyValue = \"table-row-group\";\n            } else {\n                // Default to \"block\" when no match is found.\n                propertyValue = \"block\";\n            }\n            // IMPORTANT: We need to do this as getPropertyValue bypasses the\n            // Normalisation when it exists in the cache.\n                        data.cache[\"display\"] = propertyValue;\n        }\n        style.display = propertyValue;\n    }\n    VelocityStatic.registerNormalization([ Element, \"display\", display ]);\n})(VelocityStatic || (VelocityStatic = {}));\n\n///<reference path=\"normalizations.ts\" />\n/*\n * VelocityJS.org (C) 2014-2017 Julian Shapiro.\n *\n * Licensed under the MIT license. See LICENSE file in the project root for details.\n */ var VelocityStatic;\n\n(function(VelocityStatic) {\n    function clientWidth(element, propertyValue) {\n        if (propertyValue == null) {\n            return element.clientWidth + \"px\";\n        }\n    }\n    function scrollWidth(element, propertyValue) {\n        if (propertyValue == null) {\n            return element.scrollWidth + \"px\";\n        }\n    }\n    function clientHeight(element, propertyValue) {\n        if (propertyValue == null) {\n            return element.clientHeight + \"px\";\n        }\n    }\n    function scrollHeight(element, propertyValue) {\n        if (propertyValue == null) {\n            return element.scrollHeight + \"px\";\n        }\n    }\n    function scroll(direction, end) {\n        return function(element, propertyValue) {\n            if (propertyValue == null) {\n                // Make sure we have these values cached.\n                VelocityStatic.CSS.getPropertyValue(element, \"client\" + direction, null, true);\n                VelocityStatic.CSS.getPropertyValue(element, \"scroll\" + direction, null, true);\n                VelocityStatic.CSS.getPropertyValue(element, \"scroll\" + end, null, true);\n                return element[\"scroll\" + end] + \"px\";\n            }\n            //\t\tconsole.log(\"setScrollTop\", propertyValue)\n                        var value = parseFloat(propertyValue), unit = propertyValue.replace(String(value), \"\");\n            switch (unit) {\n              case \"\":\n              case \"px\":\n                element[\"scroll\" + end] = value;\n                break;\n\n              case \"%\":\n                var client = parseFloat(VelocityStatic.CSS.getPropertyValue(element, \"client\" + direction)), scroll_1 = parseFloat(VelocityStatic.CSS.getPropertyValue(element, \"scroll\" + direction));\n                //\t\t\t\tconsole.log(\"setScrollTop percent\", scrollHeight, clientHeight, value, Math.max(0, scrollHeight - clientHeight) * value / 100)\n                                element[\"scroll\" + end] = Math.max(0, scroll_1 - client) * value / 100;\n            }\n        };\n    }\n    VelocityStatic.registerNormalization([ HTMLElement, \"scroll\", scroll(\"Height\", \"Top\"), false ]);\n    VelocityStatic.registerNormalization([ HTMLElement, \"scrollTop\", scroll(\"Height\", \"Top\"), false ]);\n    VelocityStatic.registerNormalization([ HTMLElement, \"scrollLeft\", scroll(\"Width\", \"Left\"), false ]);\n    VelocityStatic.registerNormalization([ HTMLElement, \"scrollWidth\", scrollWidth ]);\n    VelocityStatic.registerNormalization([ HTMLElement, \"clientWidth\", clientWidth ]);\n    VelocityStatic.registerNormalization([ HTMLElement, \"scrollHeight\", scrollHeight ]);\n    VelocityStatic.registerNormalization([ HTMLElement, \"clientHeight\", clientHeight ]);\n})(VelocityStatic || (VelocityStatic = {}));\n\n///<reference path=\"normalizations.ts\" />\n/*\n * VelocityJS.org (C) 2014-2017 Julian Shapiro.\n *\n * Licensed under the MIT license. See LICENSE file in the project root for details.\n *\n * This handles all CSS style properties. With browser prefixed properties it\n * will register a version that handles setting (and getting) both the prefixed\n * and non-prefixed version.\n */ var VelocityStatic;\n\n(function(VelocityStatic) {\n    /**\n     * An RegExp pattern for the following list of css words using\n     * http://kemio.com.ar/tools/lst-trie-re.php to generate:\n     *\n     * blockSize\n     * borderBottomLeftRadius\n     * borderBottomRightRadius\n     * borderBottomWidth\n     * borderImageOutset\n     * borderImageWidth\n     * borderLeftWidth\n     * borderRadius\n     * borderRightWidth\n     * borderSpacing\n     * borderTopLeftRadius\n     * borderTopRightRadius\n     * borderTopWidth\n     * borderWidth\n     * bottom\n     * columnGap\n     * columnRuleWidth\n     * columnWidth\n     * flexBasis\n     * fontSize\n     * gridColumnGap\n     * gridGap\n     * gridRowGap\n     * height\n     * inlineSize\n     * left\n     * letterSpacing\n     * margin\n     * marginBottom\n     * marginLeft\n     * marginRight\n     * marginTop\n     * maxBlockSize\n     * maxHeight\n     * maxInlineSize\n     * maxWidth\n     * minBlockSize\n     * minHeight\n     * minInlineSize\n     * minWidth\n     * objectPosition\n     * outlineOffset\n     * outlineWidth\n     * padding\n     * paddingBottom\n     * paddingLeft\n     * paddingRight\n     * paddingTop\n     * perspective\n     * right\n     * shapeMargin\n     * strokeDashoffset\n     * strokeWidth\n     * textIndent\n     * top\n     * transformOrigin\n     * width\n     * wordSpacing\n     */\n    var rxAddPx = /^(b(lockSize|o(rder(Bottom(LeftRadius|RightRadius|Width)|Image(Outset|Width)|LeftWidth|R(adius|ightWidth)|Spacing|Top(LeftRadius|RightRadius|Width)|Width)|ttom))|column(Gap|RuleWidth|Width)|f(lexBasis|ontSize)|grid(ColumnGap|Gap|RowGap)|height|inlineSize|le(ft|tterSpacing)|m(a(rgin(Bottom|Left|Right|Top)|x(BlockSize|Height|InlineSize|Width))|in(BlockSize|Height|InlineSize|Width))|o(bjectPosition|utline(Offset|Width))|p(adding(Bottom|Left|Right|Top)|erspective)|right|s(hapeMargin|troke(Dashoffset|Width))|t(extIndent|op|ransformOrigin)|w(idth|ordSpacing))$/;\n    /**\n     * Return a Normalisation that can be used to set / get a prefixed style\n     * property.\n     */    function getSetPrefixed(propertyName, unprefixed) {\n        return function(element, propertyValue) {\n            if (propertyValue === undefined) {\n                return VelocityStatic.CSS.computePropertyValue(element, propertyName) || VelocityStatic.CSS.computePropertyValue(element, unprefixed);\n            }\n            element.style[propertyName] = element.style[unprefixed] = propertyValue;\n        };\n    }\n    /**\n     * Return a Normalisation that can be used to set / get a style property.\n     */    function getSetStyle(propertyName) {\n        return function(element, propertyValue) {\n            if (propertyValue === undefined) {\n                return VelocityStatic.CSS.computePropertyValue(element, propertyName);\n            }\n            element.style[propertyName] = propertyValue;\n        };\n    }\n    /**\n     * Vendor prefixes. Chrome / Safari, Firefox, IE / Edge, Opera.\n     */    var rxVendors = /^(webkit|moz|ms|o)[A-Z]/, prefixElement = VelocityStatic.State.prefixElement;\n    for (var propertyName in prefixElement.style) {\n        if (rxVendors.test(propertyName)) {\n            var unprefixed = propertyName.replace(/^[a-z]+([A-Z])/, function($, letter) {\n                return letter.toLowerCase();\n            });\n            if (ALL_VENDOR_PREFIXES || isString(prefixElement.style[unprefixed])) {\n                var addUnit = rxAddPx.test(unprefixed) ? \"px\" : undefined;\n                VelocityStatic.registerNormalization([ Element, unprefixed, getSetPrefixed(propertyName, unprefixed), addUnit ]);\n            }\n        } else if (!VelocityStatic.hasNormalization([ Element, propertyName ])) {\n            var addUnit = rxAddPx.test(propertyName) ? \"px\" : undefined;\n            VelocityStatic.registerNormalization([ Element, propertyName, getSetStyle(propertyName), addUnit ]);\n        }\n    }\n})(VelocityStatic || (VelocityStatic = {}));\n\n///<reference path=\"normalizations.ts\" />\n/*\n * VelocityJS.org (C) 2014-2017 Julian Shapiro.\n *\n * Licensed under the MIT license. See LICENSE file in the project root for details.\n */ var VelocityStatic;\n\n(function(VelocityStatic) {\n    /**\n     * A fake normalization used to allow the \"tween\" property easy access.\n     */\n    function getSetTween(element, propertyValue) {\n        if (propertyValue === undefined) {\n            return \"\";\n        }\n    }\n    VelocityStatic.registerNormalization([ Element, \"tween\", getSetTween ]);\n})(VelocityStatic || (VelocityStatic = {}));\n\n/*\n * VelocityJS.org (C) 2014-2017 Julian Shapiro.\n *\n * Licensed under the MIT license. See LICENSE file in the project root for details.\n *\n * Call Completion\n */ var VelocityStatic;\n\n(function(VelocityStatic) {\n    /**\n     * Call the complete method of an animation in a separate function so it can\n     * benefit from JIT compiling while still having a try/catch block.\n     */\n    function callComplete(activeCall) {\n        try {\n            var elements = activeCall.elements;\n            activeCall.options.complete.call(elements, elements, activeCall);\n        } catch (error) {\n            setTimeout(function() {\n                throw error;\n            }, 1);\n        }\n    }\n    /**\n     * Complete an animation. This might involve restarting (for loop or repeat\n     * options). Once it is finished we also check for any callbacks or Promises\n     * that need updating.\n     */    function completeCall(activeCall) {\n        //\t\tconsole.log(\"complete\", activeCall)\n        // TODO: Check if it's not been completed already\n        var options = activeCall.options, queue = getValue(activeCall.queue, options.queue), isLoop = getValue(activeCall.loop, options.loop, VelocityStatic.defaults.loop), isRepeat = getValue(activeCall.repeat, options.repeat, VelocityStatic.defaults.repeat), isStopped = activeCall._flags & 8 /* STOPPED */;\n        if (!isStopped && (isLoop || isRepeat)) {\n            ////////////////////\n            // Option: Loop   //\n            // Option: Repeat //\n            ////////////////////\n            if (isRepeat && isRepeat !== true) {\n                activeCall.repeat = isRepeat - 1;\n            } else if (isLoop && isLoop !== true) {\n                activeCall.loop = isLoop - 1;\n                activeCall.repeat = getValue(activeCall.repeatAgain, options.repeatAgain, VelocityStatic.defaults.repeatAgain);\n            }\n            if (isLoop) {\n                activeCall._flags ^= 64 /* REVERSE */;\n            }\n            if (queue !== false) {\n                // Can't be called when stopped so no need for an extra check.\n                Data(activeCall.element).lastFinishList[queue] = activeCall.timeStart + getValue(activeCall.duration, options.duration, VelocityStatic.defaults.duration);\n            }\n            activeCall.timeStart = activeCall.ellapsedTime = activeCall.percentComplete = 0;\n            activeCall._flags &= ~4 /* STARTED */;\n        } else {\n            var element = activeCall.element, data = Data(element);\n            if (!--data.count && !isStopped) {\n                ////////////////////////\n                // Feature: Classname //\n                ////////////////////////\n                removeClass(element, VelocityStatic.State.className);\n            }\n            //////////////////////\n            // Option: Complete //\n            //////////////////////\n            // If this is the last animation in this list then we can check for\n            // and complete calls or Promises.\n            // TODO: When deleting an element we need to adjust these values.\n                        if (options && ++options._completed === options._total) {\n                if (!isStopped && options.complete) {\n                    // We don't call the complete if the animation is stopped,\n                    // and we clear the key to prevent it being called again.\n                    callComplete(activeCall);\n                    options.complete = null;\n                }\n                var resolver = options._resolver;\n                if (resolver) {\n                    // Fulfil the Promise\n                    resolver(activeCall.elements);\n                    delete options._resolver;\n                }\n            }\n            ///////////////////\n            // Option: Queue //\n            ///////////////////\n                        if (queue !== false) {\n                // We only do clever things with queues...\n                if (!isStopped) {\n                    // If we're not stopping an animation, we need to remember\n                    // what time it finished so that the next animation in\n                    // sequence gets the correct start time.\n                    data.lastFinishList[queue] = activeCall.timeStart + getValue(activeCall.duration, options.duration, VelocityStatic.defaults.duration);\n                }\n                // Start the next animation in sequence, or delete the queue if\n                // this was the last one.\n                                VelocityStatic.dequeue(element, queue);\n            }\n            // Cleanup any pointers, and remember the last animation etc.\n                        VelocityStatic.freeAnimationCall(activeCall);\n        }\n    }\n    VelocityStatic.completeCall = completeCall;\n})(VelocityStatic || (VelocityStatic = {}));\n\n/*\n * VelocityJS.org (C) 2014-2017 Julian Shapiro.\n *\n * Licensed under the MIT license. See LICENSE file in the project root for details.\n */\n/**\n * Get (and create) the internal data store for an element.\n */\nfunction Data(element) {\n    // Use a string member so Uglify doesn't mangle it.\n    var data = element[\"velocityData\"];\n    if (data) {\n        return data;\n    }\n    var types = 0;\n    for (var index = 0, constructors = VelocityStatic.constructors; index < constructors.length; index++) {\n        if (element instanceof constructors[index]) {\n            types |= 1 << index;\n        }\n    }\n    // Do it this way so it errors on incorrect data.\n        var newData = {\n        types: types,\n        count: 0,\n        computedStyle: null,\n        cache: createEmptyObject(),\n        queueList: createEmptyObject(),\n        lastAnimationList: createEmptyObject(),\n        lastFinishList: createEmptyObject()\n    };\n    Object.defineProperty(element, \"velocityData\", {\n        value: newData\n    });\n    return newData;\n}\n\n/*\n * VelocityJS.org (C) 2014-2017 Julian Shapiro.\n *\n * Licensed under the MIT license. See LICENSE file in the project root for details.\n */ var VelocityStatic;\n\n(function(VelocityStatic) {\n    /**\n     * Set to true, 1 or 2 (most verbose) to output debug info to console.\n     */\n    VelocityStatic.debug = false;\n})(VelocityStatic || (VelocityStatic = {}));\n\n/*\n * VelocityJS.org (C) 2014-2017 Julian Shapiro.\n *\n * Licensed under the MIT license. See LICENSE file in the project root for details.\n *\n * Velocity option defaults, which can be overriden by the user.\n */\nvar VelocityStatic;\n\n(function(VelocityStatic) {\n    // NOTE: Add the variable here, then add the default state in \"reset\" below.\n    var _cache, _begin, _complete, _delay, _duration, _easing, _fpsLimit, _loop, _minFrameTime, _promise, _promiseRejectEmpty, _queue, _repeat, _speed, _sync;\n    VelocityStatic.defaults = {\n        mobileHA: true\n    };\n    // IMPORTANT: Make sure any new defaults get added to the actions/set.ts list\n        Object.defineProperties(VelocityStatic.defaults, {\n        reset: {\n            enumerable: true,\n            value: function() {\n                _cache = DEFAULT_CACHE;\n                _begin = undefined;\n                _complete = undefined;\n                _delay = DEFAULT_DELAY;\n                _duration = DEFAULT_DURATION;\n                _easing = validateEasing(DEFAULT_EASING, DEFAULT_DURATION);\n                _fpsLimit = DEFAULT_FPSLIMIT;\n                _loop = DEFAULT_LOOP;\n                _minFrameTime = FUZZY_MS_PER_SECOND / DEFAULT_FPSLIMIT;\n                _promise = DEFAULT_PROMISE;\n                _promiseRejectEmpty = DEFAULT_PROMISE_REJECT_EMPTY;\n                _queue = DEFAULT_QUEUE;\n                _repeat = DEFAULT_REPEAT;\n                _speed = DEFAULT_SPEED;\n                _sync = DEFAULT_SYNC;\n            }\n        },\n        cache: {\n            enumerable: true,\n            get: function() {\n                return _cache;\n            },\n            set: function(value) {\n                value = validateCache(value);\n                if (value !== undefined) {\n                    _cache = value;\n                }\n            }\n        },\n        begin: {\n            enumerable: true,\n            get: function() {\n                return _begin;\n            },\n            set: function(value) {\n                value = validateBegin(value);\n                if (value !== undefined) {\n                    _begin = value;\n                }\n            }\n        },\n        complete: {\n            enumerable: true,\n            get: function() {\n                return _complete;\n            },\n            set: function(value) {\n                value = validateComplete(value);\n                if (value !== undefined) {\n                    _complete = value;\n                }\n            }\n        },\n        delay: {\n            enumerable: true,\n            get: function() {\n                return _delay;\n            },\n            set: function(value) {\n                value = validateDelay(value);\n                if (value !== undefined) {\n                    _delay = value;\n                }\n            }\n        },\n        duration: {\n            enumerable: true,\n            get: function() {\n                return _duration;\n            },\n            set: function(value) {\n                value = validateDuration(value);\n                if (value !== undefined) {\n                    _duration = value;\n                }\n            }\n        },\n        easing: {\n            enumerable: true,\n            get: function() {\n                return _easing;\n            },\n            set: function(value) {\n                value = validateEasing(value, _duration);\n                if (value !== undefined) {\n                    _easing = value;\n                }\n            }\n        },\n        fpsLimit: {\n            enumerable: true,\n            get: function() {\n                return _fpsLimit;\n            },\n            set: function(value) {\n                value = validateFpsLimit(value);\n                if (value !== undefined) {\n                    _fpsLimit = value;\n                    _minFrameTime = FUZZY_MS_PER_SECOND / value;\n                }\n            }\n        },\n        loop: {\n            enumerable: true,\n            get: function() {\n                return _loop;\n            },\n            set: function(value) {\n                value = validateLoop(value);\n                if (value !== undefined) {\n                    _loop = value;\n                }\n            }\n        },\n        minFrameTime: {\n            enumerable: true,\n            get: function() {\n                return _minFrameTime;\n            }\n        },\n        promise: {\n            enumerable: true,\n            get: function() {\n                return _promise;\n            },\n            set: function(value) {\n                value = validatePromise(value);\n                if (value !== undefined) {\n                    _promise = value;\n                }\n            }\n        },\n        promiseRejectEmpty: {\n            enumerable: true,\n            get: function() {\n                return _promiseRejectEmpty;\n            },\n            set: function(value) {\n                value = validatePromiseRejectEmpty(value);\n                if (value !== undefined) {\n                    _promiseRejectEmpty = value;\n                }\n            }\n        },\n        queue: {\n            enumerable: true,\n            get: function() {\n                return _queue;\n            },\n            set: function(value) {\n                value = validateQueue(value);\n                if (value !== undefined) {\n                    _queue = value;\n                }\n            }\n        },\n        repeat: {\n            enumerable: true,\n            get: function() {\n                return _repeat;\n            },\n            set: function(value) {\n                value = validateRepeat(value);\n                if (value !== undefined) {\n                    _repeat = value;\n                }\n            }\n        },\n        speed: {\n            enumerable: true,\n            get: function() {\n                return _speed;\n            },\n            set: function(value) {\n                value = validateSpeed(value);\n                if (value !== undefined) {\n                    _speed = value;\n                }\n            }\n        },\n        sync: {\n            enumerable: true,\n            get: function() {\n                return _sync;\n            },\n            set: function(value) {\n                value = validateSync(value);\n                if (value !== undefined) {\n                    _sync = value;\n                }\n            }\n        }\n    });\n    VelocityStatic.defaults.reset();\n})(VelocityStatic || (VelocityStatic = {}));\n\n/*\n * VelocityJS.org (C) 2014-2017 Julian Shapiro.\n *\n * Licensed under the MIT license. See LICENSE file in the project root for details.\n *\n * Velocity-wide animation time remapping for testing purposes.\n */\nvar VelocityStatic;\n\n(function(VelocityStatic) {\n    /**\n     * In mock mode, all animations are forced to complete immediately upon the\n     * next rAF tick. If there are further animations queued then they will each\n     * take one single frame in turn. Loops and repeats will be disabled while\n     * <code>mock = true</code>.\n     */\n    VelocityStatic.mock = false;\n})(VelocityStatic || (VelocityStatic = {}));\n\n/*\n * VelocityJS.org (C) 2014-2017 Julian Shapiro.\n *\n * Licensed under the MIT license. See LICENSE file in the project root for details.\n */\nvar VelocityStatic;\n\n(function(VelocityStatic) {\n    /**\n     * Used to patch any object to allow Velocity chaining. In order to chain an\n     * object must either be treatable as an array - with a <code>.length</code>\n     * property, and each member a Node, or a Node directly.\n     *\n     * By default Velocity will try to patch <code>window</code>,\n     * <code>jQuery</code>, <code>Zepto</code>, and several classes that return\n     * Nodes or lists of Nodes.\n     *\n     * @public\n     */\n    function patch(proto, global) {\n        try {\n            defineProperty(proto, (global ? \"V\" : \"v\") + \"elocity\", VelocityFn);\n        } catch (e) {\n            console.warn(\"VelocityJS: Error when trying to add prototype.\", e);\n        }\n    }\n    VelocityStatic.patch = patch;\n})(VelocityStatic || (VelocityStatic = {}));\n\n///<reference path=\"data.ts\" />\n/*\n * VelocityJS.org (C) 2014-2017 Julian Shapiro.\n *\n * Licensed under the MIT license. See LICENSE file in the project root for details.\n *\n * AnimationCall queue\n */\nvar VelocityStatic;\n\n(function(VelocityStatic) {\n    /**\n     * Simple queue management. Un-named queue is directly within the element data,\n     * named queue is within an object within it.\n     */\n    function animate(animation) {\n        var prev = VelocityStatic.State.last;\n        animation._prev = prev;\n        animation._next = undefined;\n        if (prev) {\n            prev._next = animation;\n        } else {\n            VelocityStatic.State.first = animation;\n        }\n        VelocityStatic.State.last = animation;\n        if (!VelocityStatic.State.firstNew) {\n            VelocityStatic.State.firstNew = animation;\n        }\n        var element = animation.element, data = Data(element);\n        if (!data.count++) {\n            ////////////////////////\n            // Feature: Classname //\n            ////////////////////////\n            addClass(element, VelocityStatic.State.className);\n        }\n    }\n    /**\n     * Add an item to an animation queue.\n     */    function queue(element, animation, queue) {\n        var data = Data(element);\n        if (queue !== false) {\n            // Store the last animation added so we can use it for the\n            // beginning of the next one.\n            data.lastAnimationList[queue] = animation;\n        }\n        if (queue === false) {\n            animate(animation);\n        } else {\n            if (!isString(queue)) {\n                queue = \"\";\n            }\n            var last = data.queueList[queue];\n            if (!last) {\n                if (last === null) {\n                    data.queueList[queue] = animation;\n                } else {\n                    data.queueList[queue] = null;\n                    animate(animation);\n                }\n            } else {\n                while (last._next) {\n                    last = last._next;\n                }\n                last._next = animation;\n                animation._prev = last;\n            }\n        }\n    }\n    VelocityStatic.queue = queue;\n    /**\n     * Start the next animation on this element's queue (named or default).\n     *\n     * @returns the next animation that is starting.\n     */    function dequeue(element, queue, skip) {\n        if (queue !== false) {\n            if (!isString(queue)) {\n                queue = \"\";\n            }\n            var data = Data(element), animation = data.queueList[queue];\n            if (animation) {\n                data.queueList[queue] = animation._next || null;\n                if (!skip) {\n                    animate(animation);\n                }\n            } else if (animation === null) {\n                delete data.queueList[queue];\n            }\n            return animation;\n        }\n    }\n    VelocityStatic.dequeue = dequeue;\n    /**\n     * Remove an animation from the active animation list. If it has a queue set\n     * then remember it as the last animation for that queue, and free the one\n     * that was previously there. If the animation list is completely empty then\n     * mark us as finished.\n     */    function freeAnimationCall(animation) {\n        var next = animation._next, prev = animation._prev, queue = animation.queue == null ? animation.options.queue : animation.queue;\n        if (VelocityStatic.State.firstNew === animation) {\n            VelocityStatic.State.firstNew = next;\n        }\n        if (VelocityStatic.State.first === animation) {\n            VelocityStatic.State.first = next;\n        } else if (prev) {\n            prev._next = next;\n        }\n        if (VelocityStatic.State.last === animation) {\n            VelocityStatic.State.last = prev;\n        } else if (next) {\n            next._prev = prev;\n        }\n        if (queue) {\n            var data = Data(animation.element);\n            if (data) {\n                animation._next = animation._prev = undefined;\n            }\n        }\n    }\n    VelocityStatic.freeAnimationCall = freeAnimationCall;\n})(VelocityStatic || (VelocityStatic = {}));\n\n/*\n * VelocityJS.org (C) 2014-2017 Julian Shapiro.\n *\n * Licensed under the MIT license. See LICENSE file in the project root for details.\n */ var VelocityStatic;\n\n(function(VelocityStatic) {\n    /* Container for the user's custom animation redirects that are referenced by name in place of the properties map argument. */\n    VelocityStatic.Redirects = {};\n    /***********************\n     Packaged Redirects\n     ***********************/\n    /* slideUp, slideDown */    [ \"Down\", \"Up\" ].forEach(function(direction) {\n        VelocityStatic.Redirects[\"slide\" + direction] = function(element, options, elementsIndex, elementsSize, elements, resolver) {\n            var opts = __assign({}, options), begin = opts.begin, complete = opts.complete, inlineValues = {}, computedValues = {\n                height: \"\",\n                marginTop: \"\",\n                marginBottom: \"\",\n                paddingTop: \"\",\n                paddingBottom: \"\"\n            };\n            if (opts.display === undefined) {\n                var isInline = VelocityStatic.inlineRx.test(element.nodeName.toLowerCase());\n                /* Show the element before slideDown begins and hide the element after slideUp completes. */\n                /* Note: Inline elements cannot have dimensions animated, so they're reverted to inline-block. */                opts.display = direction === \"Down\" ? isInline ? \"inline-block\" : \"block\" : \"none\";\n            }\n            opts.begin = function() {\n                /* If the user passed in a begin callback, fire it now. */\n                if (elementsIndex === 0 && begin) {\n                    begin.call(elements, elements);\n                }\n                /* Cache the elements' original vertical dimensional property values so that we can animate back to them. */                for (var property in computedValues) {\n                    if (!computedValues.hasOwnProperty(property)) {\n                        continue;\n                    }\n                    inlineValues[property] = element.style[property];\n                    /* For slideDown, use forcefeeding to animate all vertical properties from 0. For slideUp,\n                     use forcefeeding to start from computed values and animate down to 0. */                    var propertyValue = VelocityStatic.CSS.getPropertyValue(element, property);\n                    computedValues[property] = direction === \"Down\" ? [ propertyValue, 0 ] : [ 0, propertyValue ];\n                }\n                /* Force vertical overflow content to clip so that sliding works as expected. */                inlineValues.overflow = element.style.overflow;\n                element.style.overflow = \"hidden\";\n            };\n            opts.complete = function() {\n                /* Reset element to its pre-slide inline values once its slide animation is complete. */\n                for (var property in inlineValues) {\n                    if (inlineValues.hasOwnProperty(property)) {\n                        element.style[property] = inlineValues[property];\n                    }\n                }\n                /* If the user passed in a complete callback, fire it now. */                if (elementsIndex === elementsSize - 1) {\n                    if (complete) {\n                        complete.call(elements, elements);\n                    }\n                    if (resolver) {\n                        resolver(elements);\n                    }\n                }\n            };\n            VelocityFn(element, computedValues, opts);\n        };\n    });\n    /* fadeIn, fadeOut */    [ \"In\", \"Out\" ].forEach(function(direction) {\n        VelocityStatic.Redirects[\"fade\" + direction] = function(element, options, elementsIndex, elementsSize, elements, promiseData) {\n            var opts = __assign({}, options), complete = opts.complete, propertiesMap = {\n                opacity: direction === \"In\" ? 1 : 0\n            };\n            /* Since redirects are triggered individually for each element in the animated set, avoid repeatedly triggering\n             callbacks by firing them only when the final element has been reached. */            if (elementsIndex !== 0) {\n                opts.begin = null;\n            }\n            if (elementsIndex !== elementsSize - 1) {\n                opts.complete = null;\n            } else {\n                opts.complete = function() {\n                    if (complete) {\n                        complete.call(elements, elements);\n                    }\n                    if (promiseData) {\n                        promiseData.resolver(elements);\n                    }\n                };\n            }\n            /* If a display was passed in, use it. Otherwise, default to \"none\" for fadeOut or the element-specific default for fadeIn. */\n            /* Note: We allow users to pass in \"null\" to skip display setting altogether. */            if (opts.display === undefined) {\n                opts.display = direction === \"In\" ? \"auto\" : \"none\";\n            }\n            VelocityFn(this, propertiesMap, opts);\n        };\n    });\n})(VelocityStatic || (VelocityStatic = {}));\n\n/*\n * VelocityJS.org (C) 2014-2017 Julian Shapiro.\n *\n * Licensed under the MIT license. See LICENSE file in the project root for details.\n *\n * Effect Registration\n */\nvar VelocityStatic;\n\n(function(VelocityStatic) {\n    /* Animate the expansion/contraction of the elements' parent's height for In/Out effects. */\n    function animateParentHeight(elements, direction, totalDuration, stagger) {\n        var totalHeightDelta = 0, parentNode;\n        /* Sum the total height (including padding and margin) of all targeted elements. */\n        /* Sum the total height (including padding and margin) of all targeted elements. */\n        (elements.nodeType ? [ elements ] : elements).forEach(function(element, i) {\n            if (stagger) {\n                /* Increase the totalDuration by the successive delay amounts produced by the stagger option. */\n                totalDuration += i * stagger;\n            }\n            parentNode = element.parentNode;\n            var propertiesToSum = [ \"height\", \"paddingTop\", \"paddingBottom\", \"marginTop\", \"marginBottom\" ];\n            /* If box-sizing is border-box, the height already includes padding and margin */            if (VelocityStatic.CSS.getPropertyValue(element, \"boxSizing\").toString().toLowerCase() === \"border-box\") {\n                propertiesToSum = [ \"height\" ];\n            }\n            propertiesToSum.forEach(function(property) {\n                totalHeightDelta += parseFloat(VelocityStatic.CSS.getPropertyValue(element, property));\n            });\n        });\n        /* Animate the parent element's height adjustment (with a varying duration multiplier for aesthetic benefits). */\n        // TODO: Get this typesafe again\n                VelocityFn(parentNode, {\n            height: (direction === \"In\" ? \"+\" : \"-\") + \"=\" + totalHeightDelta\n        }, {\n            queue: false,\n            easing: \"ease-in-out\",\n            duration: totalDuration * (direction === \"In\" ? .6 : 1)\n        });\n    }\n    /* Note: RegisterUI is a legacy name. */    function RegisterEffect(effectName, properties) {\n        /* Register a custom redirect for each effect. */\n        VelocityStatic.Redirects[effectName] = function(element, redirectOptions, elementsIndex, elementsSize, elements, resolver, loop) {\n            var finalElement = elementsIndex === elementsSize - 1, totalDuration = 0;\n            loop = loop || properties.loop;\n            if (typeof properties.defaultDuration === \"function\") {\n                properties.defaultDuration = properties.defaultDuration.call(elements, elements);\n            } else {\n                properties.defaultDuration = parseFloat(properties.defaultDuration);\n            }\n            /* Get the total duration used, so we can share it out with everything that doesn't have a duration */            for (var callIndex = 0; callIndex < properties.calls.length; callIndex++) {\n                var durationPercentage = properties.calls[callIndex][1];\n                if (typeof durationPercentage === \"number\") {\n                    totalDuration += durationPercentage;\n                }\n            }\n            var shareDuration = totalDuration >= 1 ? 0 : properties.calls.length ? (1 - totalDuration) / properties.calls.length : 1;\n            var _loop_1 = function(callIndex) {\n                var call = properties.calls[callIndex], propertyMap = call[0], redirectDuration = 1e3, durationPercentage = call[1], callOptions = call[2] || {}, opts = {};\n                if (redirectOptions.duration !== undefined) {\n                    redirectDuration = redirectOptions.duration;\n                } else if (properties.defaultDuration !== undefined) {\n                    redirectDuration = properties.defaultDuration;\n                }\n                /* Assign the whitelisted per-call options. */                opts.duration = redirectDuration * (typeof durationPercentage === \"number\" ? durationPercentage : shareDuration);\n                opts.queue = redirectOptions.queue || \"\";\n                opts.easing = callOptions.easing || \"ease\";\n                opts.delay = parseFloat(callOptions.delay) || 0;\n                opts.loop = !properties.loop && callOptions.loop;\n                opts.cache = callOptions.cache || true;\n                /* Special processing for the first effect call. */                if (callIndex === 0) {\n                    /* If a delay was passed into the redirect, combine it with the first call's delay. */\n                    opts.delay += parseFloat(redirectOptions.delay) || 0;\n                    if (elementsIndex === 0) {\n                        opts.begin = function() {\n                            /* Only trigger a begin callback on the first effect call with the first element in the set. */\n                            if (redirectOptions.begin) {\n                                redirectOptions.begin.call(elements, elements);\n                            }\n                            var direction = effectName.match(/(In|Out)$/);\n                            /* Make \"in\" transitioning elements invisible immediately so that there's no FOUC between now\n                             and the first RAF tick. */                            if (direction && direction[0] === \"In\" && propertyMap.opacity !== undefined) {\n                                (elements.nodeType ? [ elements ] : elements).forEach(function(element) {\n                                    VelocityStatic.CSS.setPropertyValue(element, \"opacity\", 0);\n                                });\n                            }\n                            /* Only trigger animateParentHeight() if we're using an In/Out transition. */                            if (redirectOptions.animateParentHeight && direction) {\n                                animateParentHeight(elements, direction[0], redirectDuration + opts.delay, redirectOptions.stagger);\n                            }\n                        };\n                    }\n                    /* If the user isn't overriding the display option, default to \"auto\" for \"In\"-suffixed transitions. */\n                    //\t\t\t\t\tif (redirectOptions.display !== null) {\n                    //\t\t\t\t\t\tif (redirectOptions.display !== undefined && redirectOptions.display !== \"none\") {\n                    //\t\t\t\t\t\t\topts.display = redirectOptions.display;\n                    //\t\t\t\t\t\t} else if (/In$/.test(effectName)) {\n                    //\t\t\t\t\t\t\t/* Inline elements cannot be subjected to transforms, so we switch them to inline-block. */\n                    //\t\t\t\t\t\t\tlet defaultDisplay = CSS.Values.getDisplayType(element);\n                    //\t\t\t\t\t\t\topts.display = (defaultDisplay === \"inline\") ? \"inline-block\" : defaultDisplay;\n                    //\t\t\t\t\t\t}\n                    //\t\t\t\t\t}\n                                        if (redirectOptions.visibility && redirectOptions.visibility !== \"hidden\") {\n                        opts.visibility = redirectOptions.visibility;\n                    }\n                }\n                /* Special processing for the last effect call. */                if (callIndex === properties.calls.length - 1) {\n                    /* Append promise resolving onto the user's redirect callback. */\n                    var injectFinalCallbacks_1 = function() {\n                        if ((redirectOptions.display === undefined || redirectOptions.display === \"none\") && /Out$/.test(effectName)) {\n                            (elements.nodeType ? [ elements ] : elements).forEach(function(element) {\n                                VelocityStatic.CSS.setPropertyValue(element, \"display\", \"none\");\n                            });\n                        }\n                        if (redirectOptions.complete) {\n                            redirectOptions.complete.call(elements, elements);\n                        }\n                        if (resolver) {\n                            resolver(elements || element);\n                        }\n                    };\n                    opts.complete = function() {\n                        if (loop) {\n                            VelocityStatic.Redirects[effectName](element, redirectOptions, elementsIndex, elementsSize, elements, resolver, loop === true ? true : Math.max(0, loop - 1));\n                        }\n                        if (properties.reset) {\n                            for (var resetProperty in properties.reset) {\n                                if (!properties.reset.hasOwnProperty(resetProperty)) {\n                                    continue;\n                                }\n                                var resetValue = properties.reset[resetProperty];\n                                /* Format each non-array value in the reset property map to [ value, value ] so that changes apply\n                                 immediately and DOM querying is avoided (via forcefeeding). */\n                                /* Note: Don't forcefeed hooks, otherwise their hook roots will be defaulted to their null values. */\n                                // TODO: Fix this\n                                //\t\t\t\t\t\t\t\tif (CSS.Hooks.registered[resetProperty] === undefined && (typeof resetValue === \"string\" || typeof resetValue === \"number\")) {\n                                //\t\t\t\t\t\t\t\t\tproperties.reset[resetProperty] = [properties.reset[resetProperty], properties.reset[resetProperty]];\n                                //\t\t\t\t\t\t\t\t}\n                                                        }\n                            /* So that the reset values are applied instantly upon the next rAF tick, use a zero duration and parallel queueing. */                            var resetOptions = {\n                                duration: 0,\n                                queue: false\n                            };\n                            /* Since the reset option uses up the complete callback, we trigger the user's complete callback at the end of ours. */                            if (finalElement) {\n                                resetOptions.complete = injectFinalCallbacks_1;\n                            }\n                            VelocityFn(element, properties.reset, resetOptions);\n                            /* Only trigger the user's complete callback on the last effect call with the last element in the set. */                        } else if (finalElement) {\n                            injectFinalCallbacks_1();\n                        }\n                    };\n                    if (redirectOptions.visibility === \"hidden\") {\n                        opts.visibility = redirectOptions.visibility;\n                    }\n                }\n                VelocityFn(element, propertyMap, opts);\n            };\n            /* Iterate through each effect's call array. */            for (var callIndex = 0; callIndex < properties.calls.length; callIndex++) {\n                _loop_1(callIndex);\n            }\n        };\n        /* Return the Velocity object so that RegisterUI calls can be chained. */        return VelocityFn;\n    }\n    VelocityStatic.RegisterEffect = RegisterEffect;\n})(VelocityStatic || (VelocityStatic = {}));\n\n/*\n * VelocityJS.org (C) 2014-2017 Julian Shapiro.\n *\n * Licensed under the MIT license. See LICENSE file in the project root for details.\n *\n * Sequence Running\n */\n/**\n * Perform a deep copy of an object - also copies children so they're not\n * going to be affected by changing original.\n */\nfunction _deepCopyObject(target) {\n    var sources = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        sources[_i - 1] = arguments[_i];\n    }\n    if (target == null) {\n        throw new TypeError(\"Cannot convert undefined or null to object\");\n    }\n    var to = Object(target), hasOwnProperty = Object.prototype.hasOwnProperty;\n    var source;\n    while (source = sources.shift()) {\n        if (source != null) {\n            for (var key in source) {\n                if (hasOwnProperty.call(source, key)) {\n                    var value = source[key];\n                    if (Array.isArray(value)) {\n                        _deepCopyObject(to[key] = [], value);\n                    } else if (isPlainObject(value)) {\n                        _deepCopyObject(to[key] = {}, value);\n                    } else {\n                        to[key] = value;\n                    }\n                }\n            }\n        }\n    }\n    return to;\n}\n\nvar VelocityStatic;\n\n(function(VelocityStatic) {\n    /* Note: Sequence calls must use Velocity's single-object arguments syntax. */\n    function RunSequence(originalSequence) {\n        var sequence = _deepCopyObject([], originalSequence);\n        if (sequence.length > 1) {\n            sequence.reverse().forEach(function(currentCall, i) {\n                var nextCall = sequence[i + 1];\n                if (nextCall) {\n                    /* Parallel sequence calls (indicated via sequenceQueue:false) are triggered\n                     in the previous call's begin callback. Otherwise, chained calls are normally triggered\n                     in the previous call's complete callback. */\n                    var currentCallOptions = currentCall.o || currentCall.options, nextCallOptions = nextCall.o || nextCall.options;\n                    var timing = currentCallOptions && currentCallOptions.sequenceQueue === false ? \"begin\" : \"complete\", callbackOriginal_1 = nextCallOptions && nextCallOptions[timing], options = {};\n                    options[timing] = function() {\n                        var nextCallElements = nextCall.e || nextCall.elements;\n                        var elements = nextCallElements.nodeType ? [ nextCallElements ] : nextCallElements;\n                        if (callbackOriginal_1) {\n                            callbackOriginal_1.call(elements, elements);\n                        }\n                        VelocityFn(currentCall);\n                    };\n                    if (nextCall.o) {\n                        nextCall.o = __assign({}, nextCallOptions, options);\n                    } else {\n                        nextCall.options = __assign({}, nextCallOptions, options);\n                    }\n                }\n            });\n            sequence.reverse();\n        }\n        VelocityFn(sequence[0]);\n    }\n    VelocityStatic.RunSequence = RunSequence;\n})(VelocityStatic || (VelocityStatic = {}));\n\n///<reference path=\"state.ts\" />\n/*\n * VelocityJS.org (C) 2014-2017 Julian Shapiro.\n *\n * Licensed under the MIT license. See LICENSE file in the project root for details.\n *\n * Tick\n */\nvar VelocityStatic;\n\n(function(VelocityStatic) {\n    /**\n     * Call the begin method of an animation in a separate function so it can\n     * benefit from JIT compiling while still having a try/catch block.\n     */\n    function callBegin(activeCall) {\n        try {\n            var elements = activeCall.elements;\n            activeCall.options.begin.call(elements, elements, activeCall);\n        } catch (error) {\n            setTimeout(function() {\n                throw error;\n            }, 1);\n        }\n    }\n    VelocityStatic.callBegin = callBegin;\n    /**\n     * Call the progress method of an animation in a separate function so it can\n     * benefit from JIT compiling while still having a try/catch block.\n     */    function callProgress(activeCall, timeCurrent) {\n        try {\n            var elements = activeCall.elements, percentComplete = activeCall.percentComplete, options = activeCall.options, tweenValue = activeCall.tween;\n            activeCall.options.progress.call(elements, elements, percentComplete, Math.max(0, activeCall.timeStart + (activeCall.duration != null ? activeCall.duration : options.duration != null ? options.duration : VelocityStatic.defaults.duration) - timeCurrent), tweenValue !== undefined ? tweenValue : String(percentComplete * 100), activeCall);\n        } catch (error) {\n            setTimeout(function() {\n                throw error;\n            }, 1);\n        }\n    }\n    var firstProgress, firstComplete;\n    function asyncCallbacks() {\n        var activeCall, nextCall;\n        // Callbacks and complete that might read the DOM again.\n        // Progress callback\n                for (activeCall = firstProgress; activeCall; activeCall = nextCall) {\n            nextCall = activeCall._nextProgress;\n            // Pass to an external fn with a try/catch block for optimisation\n                        callProgress(activeCall, VelocityStatic.lastTick);\n        }\n        // Complete animations, including complete callback or looping\n                for (activeCall = firstComplete; activeCall; activeCall = nextCall) {\n            nextCall = activeCall._nextComplete;\n            /* If this call has finished tweening, pass it to complete() to handle call cleanup. */            VelocityStatic.completeCall(activeCall);\n        }\n    }\n    /**************\n     Timing\n     **************/    var FRAME_TIME = 1e3 / 60,\n    /**\n    * Shim for window.performance in case it doesn't exist\n    */\n    performance = function() {\n        var perf = window.performance || {};\n        if (typeof perf.now !== \"function\") {\n            var nowOffset_1 = perf.timing && perf.timing.navigationStart ? perf.timing.navigationStart : _now();\n            perf.now = function() {\n                return _now() - nowOffset_1;\n            };\n        }\n        return perf;\n    }(),\n    /**\n     * Proxy function for when rAF is not available - try to be as accurate\n     * as possible with the setTimeout calls, however they are far less\n     * accurate than rAF can be - so try not to use normally (unless the tab\n     * is in the background).\n     */\n    rAFProxy = function(callback) {\n        console.log(\"rAFProxy\", Math.max(0, FRAME_TIME - (performance.now() - VelocityStatic.lastTick)), performance.now(), VelocityStatic.lastTick, FRAME_TIME);\n        return setTimeout(function() {\n            callback(performance.now());\n        }, Math.max(0, FRAME_TIME - (performance.now() - VelocityStatic.lastTick)));\n    },\n    /* rAF shim. Gist: https://gist.github.com/julianshapiro/9497513 */\n    rAFShim = window.requestAnimationFrame || rAFProxy;\n    /**\n     * The ticker function being used, either rAF, or a function that\n     * emulates it.\n     */    var ticker = document.hidden ? rAFProxy : rAFShim;\n    /**\n     * The time that the last animation frame ran at. Set from tick(), and used\n     * for missing rAF (ie, when not in focus etc).\n     */    VelocityStatic.lastTick = 0;\n    /* Inactive browser tabs pause rAF, which results in all active animations immediately sprinting to their completion states when the tab refocuses.\n     To get around this, we dynamically switch rAF to setTimeout (which the browser *doesn't* pause) when the tab loses focus. We skip this for mobile\n     devices to avoid wasting battery power on inactive tabs. */\n    /* Note: Tab focus detection doesn't work on older versions of IE, but that's okay since they don't support rAF to begin with. */    if (!VelocityStatic.State.isMobile && document.hidden !== undefined) {\n        document.addEventListener(\"visibilitychange\", function updateTicker(event) {\n            var hidden = document.hidden;\n            ticker = hidden ? rAFProxy : rAFShim;\n            if (event) {\n                setTimeout(tick, 2e3);\n            }\n            tick();\n        });\n    }\n    var ticking;\n    /**\n     * Called on every tick, preferably through rAF. This is reponsible for\n     * initialising any new animations, then starting any that need starting.\n     * Finally it will expand any tweens and set the properties relating to\n     * them. If there are any callbacks relating to the animations then they\n     * will attempt to call at the end (with the exception of \"begin\").\n     */    function tick(timestamp) {\n        if (ticking) {\n            // Should never happen - but if we've swapped back from hidden to\n            // visibile then we want to make sure\n            return;\n        }\n        ticking = true;\n        /* An empty timestamp argument indicates that this is the first tick occurence since ticking was turned on.\n         We leverage this metadata to fully ignore the first tick pass since RAF's initial pass is fired whenever\n         the browser's next tick sync time occurs, which results in the first elements subjected to Velocity\n         calls being animated out of sync with any elements animated immediately thereafter. In short, we ignore\n         the first RAF tick pass so that elements being immediately consecutively animated -- instead of simultaneously animated\n         by the same Velocity call -- are properly batched into the same initial RAF tick and consequently remain in sync thereafter. */        if (timestamp) {\n            /* We normally use RAF's high resolution timestamp but as it can be significantly offset when the browser is\n             under high stress we give the option for choppiness over allowing the browser to drop huge chunks of frames.\n             We use performance.now() and shim it if it doesn't exist for when the tab is hidden. */\n            var timeCurrent = timestamp && timestamp !== true ? timestamp : performance.now(), deltaTime = VelocityStatic.lastTick ? timeCurrent - VelocityStatic.lastTick : FRAME_TIME, defaultSpeed = VelocityStatic.defaults.speed, defaultEasing = VelocityStatic.defaults.easing, defaultDuration = VelocityStatic.defaults.duration;\n            var activeCall = void 0, nextCall = void 0, lastProgress = void 0, lastComplete = void 0;\n            firstProgress = null;\n            firstComplete = null;\n            if (deltaTime >= VelocityStatic.defaults.minFrameTime || !VelocityStatic.lastTick) {\n                VelocityStatic.lastTick = timeCurrent;\n                /********************\n                 Call Iteration\n                 ********************/\n                // Expand any tweens that might need it.\n                                while (activeCall = VelocityStatic.State.firstNew) {\n                    VelocityStatic.validateTweens(activeCall);\n                }\n                // Iterate through each active call.\n                                for (activeCall = VelocityStatic.State.first; activeCall && activeCall !== VelocityStatic.State.firstNew; activeCall = activeCall._next) {\n                    var element = activeCall.element;\n                    var data = void 0;\n                    // Check to see if this element has been deleted midway\n                    // through the animation. If it's gone then end this\n                    // animation.\n                                        if (!element.parentNode || !(data = Data(element))) {\n                        // TODO: Remove safely - decrease count, delete data, remove from arrays\n                        VelocityStatic.freeAnimationCall(activeCall);\n                        continue;\n                    }\n                    // Don't bother getting until we can use these.\n                                        var options = activeCall.options, flags = activeCall._flags;\n                    var timeStart = activeCall.timeStart;\n                    // If this is the first time that this call has been\n                    // processed by tick() then we assign timeStart now so that\n                    // it's value is as close to the real animation start time\n                    // as possible.\n                                        if (!timeStart) {\n                        var queue_1 = activeCall.queue != null ? activeCall.queue : options.queue;\n                        timeStart = timeCurrent - deltaTime;\n                        if (queue_1 !== false) {\n                            timeStart = Math.max(timeStart, data.lastFinishList[queue_1] || 0);\n                        }\n                        activeCall.timeStart = timeStart;\n                    }\n                    // If this animation is paused then skip processing unless\n                    // it has been set to resume.\n                                        if (flags & 16 /* PAUSED */) {\n                        // Update the time start to accomodate the paused\n                        // completion amount.\n                        activeCall.timeStart += deltaTime;\n                        continue;\n                    }\n                    // Check if this animation is ready - if it's synced then it\n                    // needs to wait for all other animations in the sync\n                                        if (!(flags & 2 /* READY */)) {\n                        activeCall._flags |= 2 /* READY */;\n                        options._ready++;\n                    }\n                }\n                // Need to split the loop, as ready sync animations must all get\n                // the same start time.\n                                for (activeCall = VelocityStatic.State.first; activeCall && activeCall !== VelocityStatic.State.firstNew; activeCall = nextCall) {\n                    var flags = activeCall._flags;\n                    nextCall = activeCall._next;\n                    if (!(flags & 2 /* READY */) || flags & 16 /* PAUSED */) {\n                        continue;\n                    }\n                    var options = activeCall.options;\n                    if (flags & 32 /* SYNC */ && options._ready < options._total) {\n                        activeCall.timeStart += deltaTime;\n                        continue;\n                    }\n                    var speed = activeCall.speed != null ? activeCall.speed : options.speed != null ? options.speed : defaultSpeed;\n                    var timeStart = activeCall.timeStart;\n                    // Don't bother getting until we can use these.\n                                        if (!(flags & 4 /* STARTED */)) {\n                        var delay = activeCall.delay != null ? activeCall.delay : options.delay;\n                        // Make sure anything we've delayed doesn't start\n                        // animating yet, there might still be an active delay\n                        // after something has been un-paused\n                                                if (delay) {\n                            if (timeStart + delay / speed > timeCurrent) {\n                                continue;\n                            }\n                            activeCall.timeStart = timeStart += delay / (delay > 0 ? speed : 1);\n                        }\n                        activeCall._flags |= 4 /* STARTED */;\n                        // The begin callback is fired once per call, not once\n                        // per element, and is passed the full raw DOM element\n                        // set as both its context and its first argument.\n                                                if (options._started++ === 0) {\n                            options._first = activeCall;\n                            if (options.begin) {\n                                // Pass to an external fn with a try/catch block for optimisation\n                                callBegin(activeCall);\n                                // Only called once, even if reversed or repeated\n                                                                options.begin = undefined;\n                            }\n                        }\n                    }\n                    if (speed !== 1) {\n                        // On the first frame we may have a shorter delta\n                        var delta = Math.min(deltaTime, timeCurrent - timeStart);\n                        activeCall.timeStart = timeStart += delta * (1 - speed);\n                    }\n                    if (options._first === activeCall && options.progress) {\n                        activeCall._nextProgress = undefined;\n                        if (lastProgress) {\n                            lastProgress._nextProgress = lastProgress = activeCall;\n                        } else {\n                            firstProgress = lastProgress = activeCall;\n                        }\n                    }\n                    var activeEasing = activeCall.easing != null ? activeCall.easing : options.easing != null ? options.easing : defaultEasing, millisecondsEllapsed = activeCall.ellapsedTime = timeCurrent - timeStart, duration = activeCall.duration != null ? activeCall.duration : options.duration != null ? options.duration : defaultDuration, percentComplete = activeCall.percentComplete = VelocityStatic.mock ? 1 : Math.min(millisecondsEllapsed / duration, 1), tweens = activeCall.tweens, reverse = flags & 64 /* REVERSE */;\n                    if (percentComplete === 1) {\n                        activeCall._nextComplete = undefined;\n                        if (lastComplete) {\n                            lastComplete._nextComplete = lastComplete = activeCall;\n                        } else {\n                            firstComplete = lastComplete = activeCall;\n                        }\n                    }\n                    for (var property in tweens) {\n                        // For every element, iterate through each property.\n                        var tween_3 = tweens[property], easing = tween_3.easing || activeEasing, pattern = tween_3.pattern;\n                        var currentValue = \"\", i = 0;\n                        if (pattern) {\n                            for (;i < pattern.length; i++) {\n                                var startValue = tween_3.start[i];\n                                if (startValue == null) {\n                                    currentValue += pattern[i];\n                                } else {\n                                    // All easings must deal with numbers except for\n                                    // our internal ones\n                                    var result = easing(reverse ? 1 - percentComplete : percentComplete, startValue, tween_3.end[i], property);\n                                    currentValue += pattern[i] === true ? Math.round(result) : result;\n                                }\n                            }\n                            if (property !== \"tween\") {\n                                // TODO: To solve an IE<=8 positioning bug, the unit type must be dropped when setting a property value of 0 - add normalisations to legacy\n                                VelocityStatic.CSS.setPropertyValue(activeCall.element, property, currentValue, tween_3.fn);\n                            } else {\n                                // Skip the fake 'tween' property as that is only\n                                // passed into the progress callback.\n                                activeCall.tween = currentValue;\n                            }\n                        } else {\n                            console.warn(\"VelocityJS: Missing pattern:\", property, JSON.stringify(tween_3[property]));\n                            delete tweens[property];\n                        }\n                    }\n                }\n                if (firstProgress || firstComplete) {\n                    setTimeout(asyncCallbacks, 1);\n                }\n            }\n        }\n        if (VelocityStatic.State.first) {\n            VelocityStatic.State.isTicking = true;\n            ticker(tick);\n        } else {\n            VelocityStatic.State.isTicking = false;\n            VelocityStatic.lastTick = 0;\n        }\n        ticking = false;\n    }\n    VelocityStatic.tick = tick;\n})(VelocityStatic || (VelocityStatic = {}));\n\n/*\n * VelocityJS.org (C) 2014-2017 Julian Shapiro.\n *\n * Licensed under the MIT license. See LICENSE file in the project root for details.\n *\n * Use rAF high resolution timestamp when available.\n */ var VelocityStatic;\n\n(function(VelocityStatic) {\n    VelocityStatic.timestamp = true;\n})(VelocityStatic || (VelocityStatic = {}));\n\n/*\n * VelocityJS.org (C) 2014-2017 Julian Shapiro.\n *\n * Licensed under the MIT license. See LICENSE file in the project root for details.\n *\n * Tweens\n */\nvar VelocityStatic;\n\n(function(VelocityStatic) {\n    var rxHex = /^#([A-f\\d]{3}){1,2}$/i;\n    var commands = new Map();\n    commands.set(\"function\", function(value, element, elements, elementArrayIndex, propertyName, tween) {\n        return value.call(element, elementArrayIndex, elements.length);\n    });\n    commands.set(\"number\", function(value, element, elements, elementArrayIndex, propertyName, tween) {\n        return value + VelocityStatic.getNormalizationUnit(tween.fn);\n    });\n    commands.set(\"string\", function(value, element, elements, elementArrayIndex, propertyName, tween) {\n        return VelocityStatic.CSS.fixColors(value);\n    });\n    commands.set(\"undefined\", function(value, element, elements, elementArrayIndex, propertyName, tween) {\n        return VelocityStatic.CSS.fixColors(VelocityStatic.CSS.getPropertyValue(element, propertyName, tween.fn) || \"\");\n    });\n    /**\n     * Expand a VelocityProperty argument into a valid sparse Tween array. This\n     * pre-allocates the array as it is then the correct size and slightly\n     * faster to access.\n     */    function expandProperties(animation, properties) {\n        var tweens = animation.tweens = createEmptyObject(), elements = animation.elements, element = animation.element, elementArrayIndex = elements.indexOf(element), data = Data(element), queue = getValue(animation.queue, animation.options.queue), duration = getValue(animation.options.duration, VelocityStatic.defaults.duration);\n        for (var property in properties) {\n            var propertyName = VelocityStatic.CSS.camelCase(property);\n            var valueData = properties[property], fn = VelocityStatic.getNormalization(element, propertyName);\n            if (!fn && propertyName !== \"tween\") {\n                if (VelocityStatic.debug) {\n                    console.log(\"Skipping [\" + property + \"] due to a lack of browser support.\");\n                }\n                continue;\n            }\n            if (valueData == null) {\n                if (VelocityStatic.debug) {\n                    console.log(\"Skipping [\" + property + \"] due to no value supplied.\");\n                }\n                continue;\n            }\n            var tween_4 = tweens[propertyName] = createEmptyObject();\n            var endValue = void 0, startValue = void 0;\n            tween_4.fn = fn;\n            if (isFunction(valueData)) {\n                // If we have a function as the main argument then resolve\n                // it first, in case it returns an array that needs to be\n                // split.\n                valueData = valueData.call(element, elementArrayIndex, elements.length, elements);\n            }\n            if (Array.isArray(valueData)) {\n                // valueData is an array in the form of\n                // [ endValue, [, easing] [, startValue] ]\n                var arr1 = valueData[1], arr2 = valueData[2];\n                endValue = valueData[0];\n                if (isString(arr1) && (/^[\\d-]/.test(arr1) || rxHex.test(arr1)) || isFunction(arr1) || isNumber(arr1)) {\n                    startValue = arr1;\n                } else if (isString(arr1) && VelocityStatic.Easing.Easings[arr1] || Array.isArray(arr1)) {\n                    tween_4.easing = arr1;\n                    startValue = arr2;\n                } else {\n                    startValue = arr1 || arr2;\n                }\n            } else {\n                endValue = valueData;\n            }\n            tween_4.end = commands.get(typeof endValue)(endValue, element, elements, elementArrayIndex, propertyName, tween_4);\n            if (startValue != null || (queue === false || data.queueList[queue] === undefined)) {\n                tween_4.start = commands.get(typeof startValue)(startValue, element, elements, elementArrayIndex, propertyName, tween_4);\n            }\n            explodeTween(propertyName, tween_4, duration, !!startValue);\n        }\n    }\n    VelocityStatic.expandProperties = expandProperties;\n    /**\n     * Convert a string-based tween with start and end strings, into a pattern\n     * based tween with arrays.\n     */    function explodeTween(propertyName, tween, duration, isForcefeed) {\n        var endValue = tween.end;\n        var startValue = tween.start;\n        if (!isString(endValue) || !isString(startValue)) {\n            return;\n        }\n        var runAgain = false;\n // Can only be set once if the Start value doesn't match the End value and it's not forcefed\n                do {\n            runAgain = false;\n            var arrayStart = tween.start = [ null ], arrayEnd = tween.end = [ null ], pattern = tween.pattern = [ \"\" ];\n            var easing = tween.easing, indexStart = 0, // index in startValue\n            indexEnd = 0, // index in endValue\n            inCalc = 0, // Keep track of being inside a \"calc()\" so we don't duplicate it\n            inRGB = 0, // Keep track of being inside an RGB as we can't use fractional values\n            inRGBA = 0, // Keep track of being inside an RGBA as we must pass fractional for the alpha channel\n            isStringValue = void 0;\n            var _loop_2 = function() {\n                var charStart = startValue[indexStart], charEnd = endValue[indexEnd];\n                // If they're both numbers, then parse them as a whole\n                                if (TWEEN_NUMBER_REGEX.test(charStart) && TWEEN_NUMBER_REGEX.test(charEnd)) {\n                    var tempStart = charStart, // temporary character buffer\n                    tempEnd = charEnd, // temporary character buffer\n                    dotStart = \".\", // Make sure we can only ever match a single dot in a decimal\n                    dotEnd = \".\";\n // Make sure we can only ever match a single dot in a decimal\n                                        while (++indexStart < startValue.length) {\n                        charStart = startValue[indexStart];\n                        if (charStart === dotStart) {\n                            dotStart = \"..\";\n // Can never match two characters\n                                                } else if (!isNumberWhenParsed(charStart)) {\n                            break;\n                        }\n                        tempStart += charStart;\n                    }\n                    while (++indexEnd < endValue.length) {\n                        charEnd = endValue[indexEnd];\n                        if (charEnd === dotEnd) {\n                            dotEnd = \"..\";\n // Can never match two characters\n                                                } else if (!isNumberWhenParsed(charEnd)) {\n                            break;\n                        }\n                        tempEnd += charEnd;\n                    }\n                    var unitStart = VelocityStatic.CSS.getUnit(startValue, indexStart), // temporary unit type\n                    unitEnd = VelocityStatic.CSS.getUnit(endValue, indexEnd);\n // temporary unit type\n                                        indexStart += unitStart.length;\n                    indexEnd += unitEnd.length;\n                    if (unitEnd.length === 0) {\n                        // This order as it's most common for the user supplied\n                        // value to be a number.\n                        unitEnd = unitStart;\n                    } else if (unitStart.length === 0) {\n                        unitStart = unitEnd;\n                    }\n                    if (unitStart === unitEnd) {\n                        // Same units\n                        if (tempStart === tempEnd) {\n                            // Same numbers, so just copy over\n                            pattern[pattern.length - 1] += tempStart + unitStart;\n                        } else {\n                            pattern.push(inRGB ? true : false, unitStart);\n                            arrayStart.push(parseFloat(tempStart), null);\n                            arrayEnd.push(parseFloat(tempEnd), null);\n                        }\n                    } else {\n                        // Different units, so put into a \"calc(from + to)\" and\n                        // animate each side to/from zero. setPropertyValue will\n                        // look out for the final \"calc(0 + \" prefix and remove\n                        // it from the value when it finds it.\n                        pattern[pattern.length - 1] += inCalc ? \"+ (\" : \"calc(\";\n                        pattern.push(false, unitStart + \" + \", false, unitEnd + \")\");\n                        arrayStart.push(parseFloat(tempStart) || 0, null, 0, null);\n                        arrayEnd.push(0, null, parseFloat(tempEnd) || 0, null);\n                    }\n                } else if (charStart === charEnd) {\n                    pattern[pattern.length - 1] += charStart;\n                    indexStart++;\n                    indexEnd++;\n                    // Keep track of being inside a calc()\n                                        if (inCalc === 0 && charStart === \"c\" || inCalc === 1 && charStart === \"a\" || inCalc === 2 && charStart === \"l\" || inCalc === 3 && charStart === \"c\" || inCalc >= 4 && charStart === \"(\") {\n                        inCalc++;\n                    } else if (inCalc && inCalc < 5 || inCalc >= 4 && charStart === \")\" && --inCalc < 5) {\n                        inCalc = 0;\n                    }\n                    // Keep track of being inside an rgb() / rgba()\n                    // The opacity must not be rounded.\n                                        if (inRGB === 0 && charStart === \"r\" || inRGB === 1 && charStart === \"g\" || inRGB === 2 && charStart === \"b\" || inRGB === 3 && charStart === \"a\" || inRGB >= 3 && charStart === \"(\") {\n                        if (inRGB === 3 && charStart === \"a\") {\n                            inRGBA = 1;\n                        }\n                        inRGB++;\n                    } else if (inRGBA && charStart === \",\") {\n                        if (++inRGBA > 3) {\n                            inRGB = inRGBA = 0;\n                        }\n                    } else if (inRGBA && inRGB < (inRGBA ? 5 : 4) || inRGB >= (inRGBA ? 4 : 3) && charStart === \")\" && --inRGB < (inRGBA ? 5 : 4)) {\n                        inRGB = inRGBA = 0;\n                    }\n                } else if (charStart || charEnd) {\n                    // Different letters, so we're going to push them into start\n                    // and end until the next word\n                    isStringValue = true;\n                    if (!isString(arrayStart[arrayStart.length - 1])) {\n                        if (pattern.length === 1 && !pattern[0]) {\n                            arrayStart[0] = arrayEnd[0] = \"\";\n                        } else {\n                            pattern.push(\"\");\n                            arrayStart.push(\"\");\n                            arrayEnd.push(\"\");\n                        }\n                    }\n                    while (indexStart < startValue.length) {\n                        charStart = startValue[indexStart++];\n                        if (charStart === \" \" || TWEEN_NUMBER_REGEX.test(charStart)) {\n                            break;\n                        } else {\n                            arrayStart[arrayStart.length - 1] += charStart;\n                        }\n                    }\n                    while (indexEnd < endValue.length) {\n                        charEnd = endValue[indexEnd++];\n                        if (charEnd === \" \" || TWEEN_NUMBER_REGEX.test(charEnd)) {\n                            break;\n                        } else {\n                            arrayEnd[arrayEnd.length - 1] += charEnd;\n                        }\n                    }\n                }\n                if (!isForcefeed && indexStart === startValue.length !== (indexEnd === endValue.length)) {\n                    // This little piece will take a startValue, split out the\n                    // various numbers in it, then copy the endValue into the\n                    // startValue while replacing the numbers in it to match the\n                    // original start numbers as a repeating sequence.\n                    // Finally this function will run again with the new\n                    // startValue and a now matching pattern.\n                    var startNumbers_1 = startValue.match(/\\d\\.?\\d*/g) || [ \"0\" ], count_1 = startNumbers_1.length, index_1 = 0;\n                    startValue = endValue.replace(/\\d+\\.?\\d*/g, function() {\n                        return startNumbers_1[index_1++ % count_1];\n                    });\n                    runAgain = isForcefeed = true;\n                    return \"break\";\n                }\n            };\n            // TODO: Relative Values\n            /* Operator logic must be performed last since it requires unit-normalized start and end values. */\n            /* Note: Relative *percent values* do not behave how most people think; while one would expect \"+=50%\"\n             to increase the property 1.5x its current value, it in fact increases the percent units in absolute terms:\n             50 points is added on top of the current % value. */\n            //\t\t\t\t\tswitch (operator as any as string) {\n            //\t\t\t\t\t\tcase \"+\":\n            //\t\t\t\t\t\t\tendValue = startValue + endValue;\n            //\t\t\t\t\t\t\tbreak;\n            //\n            //\t\t\t\t\t\tcase \"-\":\n            //\t\t\t\t\t\t\tendValue = startValue - endValue;\n            //\t\t\t\t\t\t\tbreak;\n            //\n            //\t\t\t\t\t\tcase \"*\":\n            //\t\t\t\t\t\t\tendValue = startValue * endValue;\n            //\t\t\t\t\t\t\tbreak;\n            //\n            //\t\t\t\t\t\tcase \"/\":\n            //\t\t\t\t\t\t\tendValue = startValue / endValue;\n            //\t\t\t\t\t\t\tbreak;\n            //\t\t\t\t\t}\n            // TODO: Leading from a calc value\n                        while (indexStart < startValue.length && indexEnd < endValue.length) {\n                var state_1 = _loop_2();\n                if (state_1 === \"break\") break;\n            }\n            if (!runAgain) {\n                // TODO: These two would be slightly better to not add the array indices in the first place\n                if (pattern[0] === \"\" && arrayEnd[0] == null) {\n                    pattern.shift();\n                    arrayStart.shift();\n                    arrayEnd.shift();\n                }\n                if (pattern[pattern.length] === \"\" && arrayEnd[arrayEnd.length] == null) {\n                    pattern.pop();\n                    arrayStart.pop();\n                    arrayEnd.pop();\n                }\n                if (indexStart < startValue.length || indexEnd < endValue.length) {\n                    // NOTE: We should never be able to reach this code unless a\n                    // bad forcefed value is supplied.\n                    console.error(\"Velocity: Trying to pattern match mis-matched strings \" + propertyName + ':[\"' + endValue + '\", \"' + startValue + '\"]');\n                }\n                if (VelocityStatic.debug) {\n                    console.log(\"Velocity: Pattern found:\", pattern, \" -> \", arrayStart, arrayEnd, \"[\" + startValue + \",\" + endValue + \"]\");\n                }\n                if (propertyName === \"display\") {\n                    if (!/^(at-start|at-end|during)$/.test(easing)) {\n                        easing = endValue === \"none\" ? \"at-end\" : \"at-start\";\n                    }\n                } else if (propertyName === \"visibility\") {\n                    if (!/^(at-start|at-end|during)$/.test(easing)) {\n                        easing = endValue === \"hidden\" ? \"at-end\" : \"at-start\";\n                    }\n                } else if (isStringValue && easing !== \"at-start\" && easing !== \"during\" && easing !== \"at-end\" && easing !== VelocityStatic.Easing.Easings[\"at-Start\"] && easing !== VelocityStatic.Easing.Easings[\"during\"] && easing !== VelocityStatic.Easing.Easings[\"at-end\"]) {\n                    console.warn(\"Velocity: String easings must use one of 'at-start', 'during' or 'at-end': {\" + propertyName + ': [\"' + endValue + '\", ' + easing + ', \"' + startValue + '\"]}');\n                    easing = \"at-start\";\n                }\n                tween.easing = validateEasing(easing, duration);\n            }\n            // This can only run a second time once - if going from automatic startValue to \"fixed\" pattern from endValue with startValue numbers\n                } while (runAgain);\n    }\n    /**\n     * Expand all queued animations that haven't gone yet\n     *\n     * This will automatically expand the properties map for any recently added\n     * animations so that the start and end values are correct.\n     */    function validateTweens(activeCall) {\n        // This might be called on an already-ready animation\n        if (VelocityStatic.State.firstNew === activeCall) {\n            VelocityStatic.State.firstNew = activeCall._next;\n        }\n        // Check if we're actually already ready\n                if (activeCall._flags & 1 /* EXPANDED */) {\n            return;\n        }\n        var element = activeCall.element, tweens = activeCall.tweens, duration = getValue(activeCall.options.duration, VelocityStatic.defaults.duration);\n        for (var propertyName in tweens) {\n            var tween_5 = tweens[propertyName];\n            if (tween_5.start == null) {\n                // Get the start value as it's not been passed in\n                var startValue = VelocityStatic.CSS.getPropertyValue(activeCall.element, propertyName);\n                if (isString(startValue)) {\n                    tween_5.start = VelocityStatic.CSS.fixColors(startValue);\n                    explodeTween(propertyName, tween_5, duration);\n                } else if (!Array.isArray(startValue)) {\n                    console.warn(\"bad type\", tween_5, propertyName, startValue);\n                }\n            }\n            if (VelocityStatic.debug) {\n                console.log(\"tweensContainer (\" + propertyName + \"): \" + JSON.stringify(tween_5), element);\n            }\n        }\n        activeCall._flags |= 1 /* EXPANDED */;\n    }\n    VelocityStatic.validateTweens = validateTweens;\n})(VelocityStatic || (VelocityStatic = {}));\n\n/*\n * VelocityJS.org (C) 2014-2017 Julian Shapiro.\n *\n * Licensed under the MIT license. See LICENSE file in the project root for details.\n *\n * Validation functions used for various types of data that can be supplied.\n * All errors are reported in the non-minified version for development. If a\n * validation fails then it should return <code>undefined</code>.\n */\n/**\n * Parse a duration value and return an ms number. Optionally return a\n * default value if the number is not valid.\n */ function parseDuration(duration, def) {\n    if (isNumber(duration)) {\n        return duration;\n    }\n    if (isString(duration)) {\n        return Duration[duration.toLowerCase()] || parseFloat(duration.replace(\"ms\", \"\").replace(\"s\", \"000\"));\n    }\n    return def == null ? undefined : parseDuration(def);\n}\n\n/**\n * Validate a <code>cache</code> option.\n * @private\n */ function validateCache(value) {\n    if (isBoolean(value)) {\n        return value;\n    }\n    if (value != null) {\n        console.warn(\"VelocityJS: Trying to set 'cache' to an invalid value:\", value);\n    }\n}\n\n/**\n * Validate a <code>begin</code> option.\n * @private\n */ function validateBegin(value) {\n    if (isFunction(value)) {\n        return value;\n    }\n    if (value != null) {\n        console.warn(\"VelocityJS: Trying to set 'begin' to an invalid value:\", value);\n    }\n}\n\n/**\n * Validate a <code>complete</code> option.\n * @private\n */ function validateComplete(value, noError) {\n    if (isFunction(value)) {\n        return value;\n    }\n    if (value != null && !noError) {\n        console.warn(\"VelocityJS: Trying to set 'complete' to an invalid value:\", value);\n    }\n}\n\n/**\n * Validate a <code>delay</code> option.\n * @private\n */ function validateDelay(value) {\n    var parsed = parseDuration(value);\n    if (!isNaN(parsed)) {\n        return parsed;\n    }\n    if (value != null) {\n        console.error(\"VelocityJS: Trying to set 'delay' to an invalid value:\", value);\n    }\n}\n\n/**\n * Validate a <code>duration</code> option.\n * @private\n */ function validateDuration(value, noError) {\n    var parsed = parseDuration(value);\n    if (!isNaN(parsed) && parsed >= 0) {\n        return parsed;\n    }\n    if (value != null && !noError) {\n        console.error(\"VelocityJS: Trying to set 'duration' to an invalid value:\", value);\n    }\n}\n\n/**\n * Validate a <code>easing</code> option.\n * @private\n */ function validateEasing(value, duration, noError) {\n    var Easing = VelocityStatic.Easing;\n    if (isString(value)) {\n        // Named easing\n        return Easing.Easings[value];\n    }\n    if (isFunction(value)) {\n        return value;\n    }\n    if (Array.isArray(value)) {\n        if (value.length === 1) {\n            // Steps\n            return Easing.generateStep(value[0]);\n        }\n        if (value.length === 2) {\n            // springRK4 must be passed the animation's duration.\n            // Note: If the springRK4 array contains non-numbers,\n            // generateSpringRK4() returns an easing function generated with\n            // default tension and friction values.\n            return Easing.generateSpringRK4(value[0], value[1], duration);\n        }\n        if (value.length === 4) {\n            // Note: If the bezier array contains non-numbers, generateBezier()\n            // returns undefined.\n            return Easing.generateBezier.apply(null, value) || false;\n        }\n    }\n    if (value != null && !noError) {\n        console.error(\"VelocityJS: Trying to set 'easing' to an invalid value:\", value);\n    }\n}\n\n/**\n * Validate a <code>fpsLimit</code> option.\n * @private\n */ function validateFpsLimit(value) {\n    if (value === false) {\n        return 0;\n    } else {\n        var parsed = parseInt(value, 10);\n        if (!isNaN(parsed) && parsed >= 0) {\n            return Math.min(parsed, 60);\n        }\n    }\n    if (value != null) {\n        console.warn(\"VelocityJS: Trying to set 'fpsLimit' to an invalid value:\", value);\n    }\n}\n\n/**\n * Validate a <code>loop</code> option.\n * @private\n */ function validateLoop(value) {\n    if (value === false) {\n        return 0;\n    } else if (value === true) {\n        return true;\n    } else {\n        var parsed = parseInt(value, 10);\n        if (!isNaN(parsed) && parsed >= 0) {\n            return parsed;\n        }\n    }\n    if (value != null) {\n        console.warn(\"VelocityJS: Trying to set 'loop' to an invalid value:\", value);\n    }\n}\n\n/**\n * Validate a <code>progress</code> option.\n * @private\n */ function validateProgress(value) {\n    if (isFunction(value)) {\n        return value;\n    }\n    if (value != null) {\n        console.warn(\"VelocityJS: Trying to set 'progress' to an invalid value:\", value);\n    }\n}\n\n/**\n * Validate a <code>promise</code> option.\n * @private\n */ function validatePromise(value) {\n    if (isBoolean(value)) {\n        return value;\n    }\n    if (value != null) {\n        console.warn(\"VelocityJS: Trying to set 'promise' to an invalid value:\", value);\n    }\n}\n\n/**\n * Validate a <code>promiseRejectEmpty</code> option.\n * @private\n */ function validatePromiseRejectEmpty(value) {\n    if (isBoolean(value)) {\n        return value;\n    }\n    if (value != null) {\n        console.warn(\"VelocityJS: Trying to set 'promiseRejectEmpty' to an invalid value:\", value);\n    }\n}\n\n/**\n * Validate a <code>queue</code> option.\n * @private\n */ function validateQueue(value, noError) {\n    if (value === false || isString(value)) {\n        return value;\n    }\n    if (value != null && !noError) {\n        console.warn(\"VelocityJS: Trying to set 'queue' to an invalid value:\", value);\n    }\n}\n\n/**\n * Validate a <code>repeat</code> option.\n * @private\n */ function validateRepeat(value) {\n    if (value === false) {\n        return 0;\n    } else if (value === true) {\n        return true;\n    } else {\n        var parsed = parseInt(value, 10);\n        if (!isNaN(parsed) && parsed >= 0) {\n            return parsed;\n        }\n    }\n    if (value != null) {\n        console.warn(\"VelocityJS: Trying to set 'repeat' to an invalid value:\", value);\n    }\n}\n\n/**\n * Validate a <code>speed</code> option.\n * @private\n */ function validateSpeed(value) {\n    if (isNumber(value)) {\n        return value;\n    }\n    if (value != null) {\n        console.error(\"VelocityJS: Trying to set 'speed' to an invalid value:\", value);\n    }\n}\n\n/**\n * Validate a <code>sync</code> option.\n * @private\n */ function validateSync(value) {\n    if (isBoolean(value)) {\n        return value;\n    }\n    if (value != null) {\n        console.error(\"VelocityJS: Trying to set 'sync' to an invalid value:\", value);\n    }\n}\n\n/*\n * VelocityJS.org (C) 2014-2017 Julian Shapiro.\n *\n * Licensed under the MIT license. See LICENSE file in the project root for details.\n *\n * Velocity version (should grab from package.json during build).\n */ var VelocityStatic;\n\n(function(VelocityStatic) {\n    VelocityStatic.version = \"2.0.2\";\n})(VelocityStatic || (VelocityStatic = {}));\n\n/*\n * VelocityJS.org (C) 2014-2017 Julian Shapiro.\n *\n * Licensed under the MIT license. See LICENSE file in the project root for details.\n *\n * Core \"Velocity\" function.\n */\nfunction VelocityFn() {\n    var __args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        __args[_i] = arguments[_i];\n    }\n    var\n    /**\n     * A shortcut to the default options.\n     */\n    defaults = VelocityStatic.defaults,\n    /**\n     * Shortcut to arguments for file size.\n     */\n    _arguments = arguments,\n    /**\n     * Cache of the first argument - this is used often enough to be saved.\n     */\n    args0 = _arguments[0],\n    /**\n     * To allow for expressive CoffeeScript code, Velocity supports an\n     * alternative syntax in which \"elements\" (or \"e\"), \"properties\" (or\n     * \"p\"), and \"options\" (or \"o\") objects are defined on a container\n     * object that's passed in as Velocity's sole argument.\n     *\n     * Note: Some browsers automatically populate arguments with a\n     * \"properties\" object. We detect it by checking for its default\n     * \"names\" property.\n     */\n    // TODO: Confirm which browsers - if <=IE8 the we can drop completely\n    syntacticSugar = isPlainObject(args0) && (args0.p || (isPlainObject(args0.properties) && !args0.properties.names || isString(args0.properties)));\n    var\n    /**\n     *  When Velocity is called via the utility function (Velocity()),\n     * elements are explicitly passed in as the first parameter. Thus,\n     * argument positioning varies.\n     */\n    argumentIndex = 0,\n    /**\n     * The list of elements, extended with Promise and Velocity.\n     */\n    elements,\n    /**\n     * The properties being animated. This can be a string, in which case it\n     * is either a function for these elements, or it is a \"named\" animation\n     * sequence to use instead. Named sequences start with either \"callout.\"\n     * or \"transition.\". When used as a callout the values will be reset\n     * after finishing. When used as a transtition then there is no special\n     * handling after finishing.\n     */\n    propertiesMap,\n    /**\n     * Options supplied, this will be mapped and validated into\n     * <code>options</code>.\n     */\n    optionsMap,\n    /**\n     * If called via a chain then this contains the <b>last</b> calls\n     * animations. If this does not have a value then any access to the\n     * element's animations needs to be to the currently-running ones.\n     */\n    animations,\n    /**\n     * The promise that is returned.\n     */\n    promise,\n    // Used when the animation is finished\n    resolver,\n    // Used when there was an issue with one or more of the Velocity arguments\n    rejecter;\n    //console.log(\"Velocity\", _arguments)\n    // First get the elements, and the animations connected to the last call if\n    // this is chained.\n    // TODO: Clean this up a bit\n    // TODO: Throw error if the chain is called with elements as the first argument. isVelocityResult(this) && ( (isNode(arg0) || isWrapped(arg0)) && arg0 == this)\n        if (isNode(this)) {\n        // This is from a chain such as document.getElementById(\"\").velocity(...)\n        elements = [ this ];\n    } else if (isWrapped(this)) {\n        // This might be a chain from something else, but if chained from a\n        // previous Velocity() call then grab the animations it's related to.\n        elements = Object.assign([], this);\n        if (isVelocityResult(this)) {\n            animations = this.velocity.animations;\n        }\n    } else if (syntacticSugar) {\n        elements = Object.assign([], args0.elements || args0.e);\n        argumentIndex++;\n    } else if (isNode(args0)) {\n        elements = Object.assign([], [ args0 ]);\n        argumentIndex++;\n    } else if (isWrapped(args0)) {\n        elements = Object.assign([], args0);\n        argumentIndex++;\n    }\n    // Allow elements to be chained.\n        if (elements) {\n        defineProperty(elements, \"velocity\", VelocityFn.bind(elements));\n        if (animations) {\n            defineProperty(elements.velocity, \"animations\", animations);\n        }\n    }\n    // Next get the propertiesMap and options.\n        if (syntacticSugar) {\n        propertiesMap = getValue(args0.properties, args0.p);\n    } else {\n        // TODO: Should be possible to call Velocity(\"pauseAll\") - currently not possible\n        propertiesMap = _arguments[argumentIndex++];\n    }\n    // Get any options map passed in as arguments first, expand any direct\n    // options if possible.\n        var isReverse = propertiesMap === \"reverse\", isAction = !isReverse && isString(propertiesMap), opts = syntacticSugar ? getValue(args0.options, args0.o) : _arguments[argumentIndex];\n    if (isPlainObject(opts)) {\n        optionsMap = opts;\n    }\n    // Create the promise if supported and wanted.\n        if (Promise && getValue(optionsMap && optionsMap.promise, defaults.promise)) {\n        promise = new Promise(function(_resolve, _reject) {\n            rejecter = _reject;\n            // IMPORTANT:\n            // If a resolver tries to run on a Promise then it will wait until\n            // that Promise resolves - but in this case we're running on our own\n            // Promise, so need to make sure it's not seen as one. Setting these\n            // values to <code>undefined</code> for the duration of the resolve.\n            // Due to being an async call, they should be back to \"normal\"\n            // before the <code>.then()</code> function gets called.\n                        resolver = function(args) {\n                if (isVelocityResult(args)) {\n                    var _then = args && args.then;\n                    if (_then) {\n                        args.then = undefined;\n // Preserving enumeration etc\n                                        }\n                    _resolve(args, _then);\n                } else {\n                    _resolve(args);\n                }\n            };\n        });\n\t\tpromise = promise.then(function(args, _then) {\n\t\t\tif (_then) {\n\t\t\t\targs.then = _then\n\t\t\t}\n\t\t\treturn args\n\t\t})\n        if (elements) {\n            defineProperty(elements, \"then\", promise.then.bind(promise));\n            defineProperty(elements, \"catch\", promise.catch.bind(promise));\n            if (promise.finally) {\n                // Semi-standard\n                defineProperty(elements, \"finally\", promise.finally.bind(promise));\n            }\n        }\n    }\n    var promiseRejectEmpty = getValue(optionsMap && optionsMap.promiseRejectEmpty, defaults.promiseRejectEmpty);\n    if (promise) {\n        if (!elements && !isAction) {\n            if (promiseRejectEmpty) {\n                rejecter(\"Velocity: No elements supplied, if that is deliberate then pass `promiseRejectEmpty:false` as an option. Aborting.\");\n            } else {\n                resolver();\n            }\n        } else if (!propertiesMap) {\n            if (promiseRejectEmpty) {\n                rejecter(\"Velocity: No properties supplied, if that is deliberate then pass `promiseRejectEmpty:false` as an option. Aborting.\");\n            } else {\n                resolver();\n            }\n        }\n    }\n    if (!elements && !isAction || !propertiesMap) {\n        return promise;\n    }\n    // NOTE: Can't use isAction here due to type inference - there are callbacks\n    // between so the type isn't considered safe.\n        if (isAction) {\n        var args = [], promiseHandler = promise && {\n            _promise: promise,\n            _resolver: resolver,\n            _rejecter: rejecter\n        };\n        while (argumentIndex < _arguments.length) {\n            args.push(_arguments[argumentIndex++]);\n        }\n        // Velocity's behavior is categorized into \"actions\". If a string is\n        // passed in instead of a propertiesMap then that will call a function\n        // to do something special to the animation linked.\n        // There is one special case - \"reverse\" - which is handled differently,\n        // by being stored on the animation and then expanded when the animation\n        // starts.\n                var action = propertiesMap.replace(/\\..*$/, \"\"), callback = VelocityStatic.Actions[action] || VelocityStatic.Actions[\"default\"];\n        if (callback) {\n            var result = callback(args, elements, promiseHandler, propertiesMap);\n            if (result !== undefined) {\n                return result;\n            }\n        } else {\n            console.warn(\"VelocityJS: Unknown action:\", propertiesMap);\n        }\n    } else if (isPlainObject(propertiesMap) || isReverse) {\n        /**\n         * The options for this set of animations.\n         */\n        var options = {};\n        var isSync = defaults.sync;\n        // Private options first - set as non-enumerable, and starting with an\n        // underscore so we can filter them out.\n                if (promise) {\n            defineProperty(options, \"_promise\", promise);\n            defineProperty(options, \"_rejecter\", rejecter);\n            defineProperty(options, \"_resolver\", resolver);\n        }\n        defineProperty(options, \"_ready\", 0);\n        defineProperty(options, \"_started\", 0);\n        defineProperty(options, \"_completed\", 0);\n        defineProperty(options, \"_total\", 0);\n        // Now check the optionsMap\n                if (isPlainObject(optionsMap)) {\n            options.duration = getValue(validateDuration(optionsMap.duration), defaults.duration);\n            options.delay = getValue(validateDelay(optionsMap.delay), defaults.delay);\n            // Need the extra fallback here in case it supplies an invalid\n            // easing that we need to overrride with the default.\n                        options.easing = validateEasing(getValue(optionsMap.easing, defaults.easing), options.duration) || validateEasing(defaults.easing, options.duration);\n            options.loop = getValue(validateLoop(optionsMap.loop), defaults.loop);\n            options.repeat = options.repeatAgain = getValue(validateRepeat(optionsMap.repeat), defaults.repeat);\n            if (optionsMap.speed != null) {\n                options.speed = getValue(validateSpeed(optionsMap.speed), 1);\n            }\n            if (isBoolean(optionsMap.promise)) {\n                options.promise = optionsMap.promise;\n            }\n            options.queue = getValue(validateQueue(optionsMap.queue), defaults.queue);\n            if (optionsMap.mobileHA && !VelocityStatic.State.isGingerbread) {\n                /* When set to true, and if this is a mobile device, mobileHA automatically enables hardware acceleration (via a null transform hack)\n                 on animating elements. HA is removed from the element at the completion of its animation. */\n                /* Note: Android Gingerbread doesn't support HA. If a null transform hack (mobileHA) is in fact set, it will prevent other tranform subproperties from taking effect. */\n                /* Note: You can read more about the use of mobileHA in Velocity's documentation: VelocityJS.org/#mobileHA. */\n                options.mobileHA = true;\n            }\n            if (!isReverse) {\n                if (optionsMap.display != null) {\n                    propertiesMap.display = optionsMap.display;\n                    console.error(\"Deprecated 'options.display' used, this is now a property:\", optionsMap.display);\n                }\n                if (optionsMap.visibility != null) {\n                    propertiesMap.visibility = optionsMap.visibility;\n                    console.error(\"Deprecated 'options.visibility' used, this is now a property:\", optionsMap.visibility);\n                }\n            }\n            // TODO: Allow functional options for different options per element\n                        var optionsBegin = validateBegin(optionsMap.begin), optionsComplete = validateComplete(optionsMap.complete), optionsProgress = validateProgress(optionsMap.progress), optionsSync = validateSync(optionsMap.sync);\n            if (optionsBegin != null) {\n                options.begin = optionsBegin;\n            }\n            if (optionsComplete != null) {\n                options.complete = optionsComplete;\n            }\n            if (optionsProgress != null) {\n                options.progress = optionsProgress;\n            }\n            if (optionsSync != null) {\n                isSync = optionsSync;\n            }\n        } else if (!syntacticSugar) {\n            // Expand any direct options if possible.\n            var duration = validateDuration(_arguments[argumentIndex], true);\n            var offset = 0;\n            if (duration !== undefined) {\n                offset++;\n                options.duration = duration;\n            }\n            if (!isFunction(_arguments[argumentIndex + offset])) {\n                // Despite coming before Complete, we can't pass a fn easing\n                var easing = validateEasing(_arguments[argumentIndex + offset], getValue(options && validateDuration(options.duration), defaults.duration), true);\n                if (easing !== undefined) {\n                    offset++;\n                    options.easing = easing;\n                }\n            }\n            var complete = validateComplete(_arguments[argumentIndex + offset], true);\n            if (complete !== undefined) {\n                options.complete = complete;\n            }\n            options.loop = defaults.loop;\n            options.repeat = options.repeatAgain = defaults.repeat;\n        }\n        if (isReverse && options.queue === false) {\n            throw new Error(\"VelocityJS: Cannot reverse a queue:false animation.\");\n        }\n        /* When a set of elements is targeted by a Velocity call, the set is broken up and each element has the current Velocity call individually queued onto it.\n         In this way, each element's existing queue is respected; some elements may already be animating and accordingly should not have this current Velocity call triggered immediately. */\n        /* In each queue, tween data is processed for each animating property then pushed onto the call-wide calls array. When the last element in the set has had its tweens processed,\n         the call array is pushed to VelocityStatic.State.calls for live processing by the requestAnimationFrame tick. */        var rootAnimation = {\n            _prev: undefined,\n            _next: undefined,\n            _flags: isSync ? 32 /* SYNC */ : 0,\n            options: options,\n            percentComplete: 0,\n            //element: element,\n            elements: elements,\n            ellapsedTime: 0,\n            timeStart: 0\n        };\n        animations = [];\n        for (var index = 0; index < elements.length; index++) {\n            var element = elements[index];\n            var flags = 0;\n            if (isNode(element)) {\n                if (isReverse) {\n                    var lastAnimation = Data(element).lastAnimationList[options.queue];\n                    propertiesMap = lastAnimation && lastAnimation.tweens;\n                    if (!propertiesMap) {\n                        console.error(\"VelocityJS: Attempting to reverse an animation on an element with no previous animation:\", element);\n                        continue;\n                    }\n                    flags |= 64 /* REVERSE */ & ~(lastAnimation._flags & 64 /* REVERSE */);\n                }\n                var tweens = createEmptyObject(), animation = Object.assign({\n                    element: element,\n                    tweens: tweens\n                }, rootAnimation);\n                options._total++;\n                animation._flags |= flags;\n                animations.push(animation);\n                if (isReverse) {\n                    // In this case we're using the previous animation, so\n                    // it will be expanded correctly when that one runs.\n                    animation.tweens = propertiesMap;\n                } else {\n                    VelocityStatic.expandProperties(animation, propertiesMap);\n                }\n                VelocityStatic.queue(element, animation, options.queue);\n            }\n        }\n        if (VelocityStatic.State.isTicking === false) {\n            // If the animation tick isn't running, start it. (Velocity shuts it\n            // off when there are no active calls to process.)\n            VelocityStatic.tick();\n        }\n        if (animations) {\n            defineProperty(elements.velocity, \"animations\", animations);\n        }\n    }\n    /***************\n     Chaining\n     ***************/\n    /* Return the elements back to the call chain, with wrapped elements taking precedence in case Velocity was called via the $.fn. extension. */    return elements || promise;\n}\n\n/***************\n Summary\n ***************/\n/*\n - CSS: CSS stack that works independently from the rest of Velocity.\n - animate(): Core animation method that iterates over the targeted elements and queues the incoming call onto each element individually.\n - Pre-Queueing: Prepare the element for animation by instantiating its data cache and processing the call's options.\n - Queueing: The logic that runs once the call has reached its point of execution in the element's queue stack.\n Most logic is placed here to avoid risking it becoming stale (if the element's properties have changed).\n - Pushing: Consolidation of the tween data followed by its push onto the global in-progress calls container.\n - tick(): The single requestAnimationFrame loop responsible for tweening all in-progress calls.\n - completeCall(): Handles the cleanup process for each Velocity call.\n */\n/*********************\n Helper Functions\n *********************/\n/* IE detection. Gist: https://gist.github.com/julianshapiro/9098609 */\nvar IE = function() {\n    if (document.documentMode) {\n        return document.documentMode;\n    } else {\n        for (var i = 7; i > 4; i--) {\n            var div = document.createElement(\"div\");\n            div.innerHTML = \"\\x3c!--[if IE \" + i + \"]><span></span><![endif]--\\x3e\";\n            if (div.getElementsByTagName(\"span\").length) {\n                div = null;\n                return i;\n            }\n        }\n    }\n    return undefined;\n}();\n\n/******************\n Unsupported\n ******************/ if (IE <= 8) {\n    throw new Error(\"VelocityJS cannot run on Internet Explorer 8 or earlier\");\n}\n\nif (window === this) {\n    /*\n     * Both jQuery and Zepto allow their $.fn object to be extended to allow\n     * wrapped elements to be subjected to plugin calls. If either framework is\n     * loaded, register a \"velocity\" extension pointing to Velocity's core\n     * animate() method. Velocity also registers itself onto a global container\n     * (window.jQuery || window.Zepto || window) so that certain features are\n     * accessible beyond just a per-element scope. Accordingly, Velocity can\n     * both act on wrapped DOM elements and stand alone for targeting raw DOM\n     * elements.\n     */\n    var patch = VelocityStatic.patch, jQuery = window.jQuery, Zepto = window.Zepto;\n    patch(window, true);\n    patch(Element && Element.prototype);\n    patch(NodeList && NodeList.prototype);\n    patch(HTMLCollection && HTMLCollection.prototype);\n    patch(jQuery, true);\n    patch(jQuery && jQuery.fn);\n    patch(Zepto, true);\n    patch(Zepto && Zepto.fn);\n}\n\n/******************\n Known Issues\n ******************/\n/* The CSS spec mandates that the translateX/Y/Z transforms are %-relative to the element itself -- not its parent.\n Velocity, however, doesn't make this distinction. Thus, converting to or from the % unit with these subproperties\n will produce an inaccurate conversion value. The same issue exists with the cx/cy attributes of SVG circles and ellipses. */ var _loop_3 = function(key) {\n    var value = VelocityStatic[key];\n    if (isString(value) || isNumber(value) || isBoolean(value)) {\n        Object.defineProperty(VelocityFn, key, {\n            enumerable: PUBLIC_MEMBERS.indexOf(key) >= 0,\n            get: function() {\n                return VelocityStatic[key];\n            },\n            set: function(value) {\n                VelocityStatic[key] = value;\n            }\n        });\n    } else {\n        Object.defineProperty(VelocityFn, key, {\n            enumerable: PUBLIC_MEMBERS.indexOf(key) >= 0,\n            get: function() {\n                return VelocityStatic[key];\n            }\n        });\n    }\n};\n\n/*\n * VelocityJS.org (C) 2014-2017 Julian Shapiro.\n *\n * Licensed under the MIT license. See LICENSE file in the project root for details.\n *\n * Merge the VelocityStatic namespace onto the Velocity function for external\n * use. This is done as a read-only way. Any attempt to change these values will\n * be allowed.\n */ for (var key in VelocityStatic) {\n    _loop_3(key);\n}\n\treturn VelocityFn;\n}));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/velocity-animate/velocity.js\n");

/***/ }),

/***/ 0:
/*!***********************************************************!*\
  !*** multi ./client/js/index.js ./client/scss/index.scss ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(/*! ./client/js/index.js */"./client/js/index.js");
module.exports = __webpack_require__(/*! ./client/scss/index.scss */"./client/scss/index.scss");


/***/ })

/******/ });